{"id": "2510.17839", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.17839", "abs": "https://arxiv.org/abs/2510.17839", "authors": ["Johannes Schneider", "Rene Abraham"], "title": "AI Exchange Platforms", "comment": null, "summary": "The rapid integration of Artificial Intelligence (AI) into organizational\ntechnology frameworks has transformed how organizations engage with AI-driven\nmodels, influencing both operational performance and strategic innovation. With\nthe advent of foundation models, the importance of structured platforms for AI\nmodel exchange has become paramount for organizational efficacy and\nadaptability. However, a comprehensive framework to categorize and understand\nthese platforms remains underexplored. To address this gap, our taxonomy\nprovides a structured approach to categorize AI exchange platforms, examining\nkey dimensions and characteristics, as well as revealing interesting\ninteraction patterns between public research institutions and organizations:\nSome platforms leverage peer review as a mechanism for quality control, and\nprovide mechanisms for online testing, deploying, and customization of models.\nOur paper is beneficial to practitioners seeking to understand challenges and\nopportunities that arise from AI exchange platforms. For academics, the\ntaxonomy serves as a foundation for further research into the evolution,\nimpact, and best practices associated with AI model sharing and utilization in\ndifferent contexts. Additionally, our study provides insights into the evolving\nrole of AI in various industries, highlighting the importance of adaptability\nand innovation in platform design. This paper serves as a critical resource for\nunderstanding the dynamic interplay between technology, business models, and\nuser engagement in the rapidly growing domain of AI model exchanges pointing\nalso towards possible future evolution."}
{"id": "2510.17842", "categories": ["cs.SE", "cs.HC"], "pdf": "https://arxiv.org/pdf/2510.17842", "abs": "https://arxiv.org/abs/2510.17842", "authors": ["Vinay Bamil"], "title": "Vibe Coding: Toward an AI-Native Paradigm for Semantic and Intent-Driven Programming", "comment": "10 pages, 1 figure, 2 tables", "summary": "Recent advances in large language models have enabled developers to generate\nsoftware by conversing with artificial intelligence systems rather than writing\ncode directly. This paper introduces vibe coding, an emerging AI-native\nprogramming paradigm in which a developer specifies high-level functional\nintent along with qualitative descriptors of the desired \"vibe\" (tone, style,\nor emotional resonance). An intelligent agent then transforms those\nspecifications into executable software. We formalize the definition of vibe\ncoding and propose a reference architecture that includes an intent parser, a\nsemantic embedding engine, an agentic code generator, and an interactive\nfeedback loop. A hypothetical implementation is described. We compare vibe\ncoding with declarative, functional, and prompt-based programming, and we\ndiscuss its implications for software engineering, human-AI collaboration, and\nresponsible AI practice. Finally, we examine reported productivity gains and\ndemocratizing effects, review recent studies that highlight vulnerabilities and\npotential slowdowns, identify key challenges such as alignment,\nreproducibility, bias, explainability, maintainability, and security, and\noutline future directions and open research questions."}
{"id": "2510.17865", "categories": ["cs.SE", "cs.LO"], "pdf": "https://arxiv.org/pdf/2510.17865", "abs": "https://arxiv.org/abs/2510.17865", "authors": ["Rene Davila", "Everardo Barcenas", "Rocio Aldeco-Perez"], "title": "Smart Contracts Formal Verification: A Systematic Literature Review", "comment": "in Spanish language", "summary": "Formal verification entails testing software to ensure it operates as\nspecified. Smart contracts are self-executing contracts with the terms of the\nagreement directly written into lines of code. They run on blockchain platforms\nand automatically enforce and execute the terms of an agreement when meeting\npredefined conditions. However, Smart Contracts, as software models, often\ncontain notable errors in their operation or specifications. This observation\nprompts us to conduct a focused study examining related works published across\nvarious sources. These publications detail specifications, verification tools,\nand relevant experiments. Subsequently, this survey proposes an alternative\nformal verification based on description logic."}
{"id": "2510.17868", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.17868", "abs": "https://arxiv.org/abs/2510.17868", "authors": ["Xinyue Zheng", "Haowei Lin", "Shaofei Cai", "Zilong Zheng", "Yitao Liang"], "title": "UniCode: A Framework for Generating High Quality Competitive Coding Problems", "comment": null, "summary": "The reliance of competitive coding benchmarks on static, human-authored\nproblems creates significant challenges, including data contamination and\nlimited scalability. To address these issues, we introduce UniCode, a novel\nframework that automatically generates high-quality algorithmic problems\nalongside robust, contamination-resistant test cases. Inspired by biological\nevolution that creates better and diverse offspring, our framework leverages\nLarge Language Models (LLMs) to systematically diversify problems through three\nstrategies: single problem extension, same-type fusion, and cross-type fusion.\nA key innovation is our stress-driven test case synthesis pipeline, which\ngenerates reliable test suites without requiring a canonical ground-truth\nsolution. This pipeline combines brute-force grounding for small-scale inputs\nwith a consensus-based validation mechanism for large-scale inputs to ensure\nhigh correctness and coverage. We demonstrate effectiveness of our framework by\ncurating a benchmark of 492 problems and evaluating 19 state-of-the-art LLMs.\nThe results reveal that UniCode is highly challenging and discriminative, with\nthe top-performing model, o4-mini, achieving a pass rate of only 70.3%. Our\nframework provides a scalable and reliable solution for generating dynamic\nevaluation datasets in coding domain."}
{"id": "2510.17848", "categories": ["cs.CR", "cs.SE"], "pdf": "https://arxiv.org/pdf/2510.17848", "abs": "https://arxiv.org/abs/2510.17848", "authors": ["Dan Lin", "Yanli Ding", "Weipeng Zou", "Jiachi Chen", "Xiapu Luo", "Jiajing Wu", "Zibin Zheng"], "title": "RiskTagger: An LLM-based Agent for Automatic Annotation of Web3 Crypto Money Laundering Behaviors", "comment": "8 pages(not including appendix), 11 figures", "summary": "While the rapid growth of Web3 has driven the development of decentralized\nfinance, user anonymity and cross-chain asset flows make on-chain laundering\nbehaviors more covert and complex. In this context, constructing high-quality\nanti-money laundering(AML) datasets has become essential for risk-control\nsystems and on-chain forensic analysis, yet current practices still rely\nheavily on manual efforts with limited efficiency and coverage. In this paper,\nwe introduce RiskTagger, a large-language-model-based agent for the automatic\nannotation of crypto laundering behaviors in Web3. RiskTagger is designed to\nreplace or complement human annotators by addressing three key challenges:\nextracting clues from complex unstructured reports, reasoning over multichain\ntransaction paths, and producing auditor-friendly explanations. RiskTagger\nimplements an end-to-end multi-module agent, integrating a key-clue extractor,\na multichain fetcher with a laundering-behavior reasoner, and a data explainer,\nforming a data annotation pipeline. Experiments on the real case Bybit Hack\n(with the highest stolen asset value) demonstrate that RiskTagger achieves 100%\naccuracy in clue extraction, 84.1% consistency with expert judgment, and 90%\ncoverage in explanation generation. Overall, RiskTagger automates laundering\nbehavior annotation while improving transparency and scalability in AML\nresearch."}
{"id": "2510.17874", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.17874", "abs": "https://arxiv.org/abs/2510.17874", "authors": ["Jason Tsay", "Zidane Wright", "Gaodan Fang", "Kiran Kate", "Saurabh Jha", "Yara Rizk"], "title": "Repairing Tool Calls Using Post-tool Execution Reflection and RAG", "comment": null, "summary": "Agentic systems interact with external systems by calling tools such as\nPython functions, REST API endpoints, or command line tools such as kubectl in\nKubernetes. These tool calls often fail for various syntactic and semantic\nreasons. Some less obvious semantic errors can only be identified and resolved\nafter analyzing the tool's response. To repair these errors, we develop a\npost-tool execution reflection component that combines large language model\n(LLM)-based reflection with domain-specific retrieval-augmented generation\n(RAG) using documents describing both the specific tool being called and\ntroubleshooting documents related to the tool. For this paper, we focus on the\nuse case of the kubectl command line tool to manage Kubernetes, a platform for\norchestrating cluster applications. Through a larger empirical study and a\nsmaller manual evaluation, we find that our RAG-based reflection will repair\nkubectl commands such that they are both more likely to successfully execute\n(pass rate) for 55% of our models evaluated and 36% more likely to correctly\nanswer the user query on average. We find that troubleshooting documents\nimprove pass rate compared to official documentation by an average of 10%."}
{"id": "2510.17862", "categories": ["cs.CR", "cs.SE"], "pdf": "https://arxiv.org/pdf/2510.17862", "abs": "https://arxiv.org/abs/2510.17862", "authors": ["Yibo Peng", "James Song", "Lei Li", "Xinyu Yang", "Mihai Christodorescu", "Ravi Mangal", "Corina Pasareanu", "Haizhong Zheng", "Beidi Chen"], "title": "When \"Correct\" Is Not Safe: Can We Trust Functionally Correct Patches Generated by Code Agents?", "comment": null, "summary": "Code agents are increasingly trusted to autonomously fix bugs on platforms\nsuch as GitHub, yet their security evaluation focuses almost exclusively on\nfunctional correctness. In this paper, we reveal a novel type of threat to\nreal-world code agents: Functionally Correct yet Vulnerable (FCV) patches,\nwhich pass all test cases but contain vulnerable code. With our proposed\nFCV-Attack, which can be deliberately crafted by malicious attackers or\nimplicitly introduced by benign developers, we show that SOTA LLMs (e.g.,\nChatGPT and Claude) and agent scaffolds (e.g., SWE-agent and OpenHands) are all\nvulnerable to this FCV threat; across 12 agent-model combinations on SWE-Bench,\nthe attack only requires black-box access and a single query to the code agent\nto perform the attack. For example, for CWE-538 (information exposure\nvulnerability), the FCV-Attack attains an attack success rate of $40.7\\%$ on\nGPT-5 Mini + OpenHands. Our results reveal an important security threat\noverlooked by current evaluation paradigms and urge the development of\nsecurity-aware defenses for code agents."}
{"id": "2510.17891", "categories": ["cs.SE", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.17891", "abs": "https://arxiv.org/abs/2510.17891", "authors": ["Jiin Woo", "Shaowei Zhu", "Allen Nie", "Zhen Jia", "Yida Wang", "Youngsuk Park"], "title": "TritonRL: Training LLMs to Think and Code Triton Without Cheating", "comment": null, "summary": "With the rapid evolution of large language models (LLMs), the demand for\nautomated, high-performance system kernels has emerged as a key enabler for\naccelerating development and deployment. We introduce TritonRL, a\ndomain-specialized LLM for Triton kernel generation, trained with a novel\ntraining framework that enables robust and automated kernel synthesis. Unlike\ngeneral-purpose programming languages, Triton kernel generation faces unique\nchallenges due to data scarcity and incomplete evaluation criteria, vulnerable\nto reward hacking. Our approach addresses these challenges end-to-end by\ndistilling Triton-specific knowledge through supervised fine-tuning on curated\ndatasets, and further improving code quality via reinforcement learning (RL)\nwith robust, verifiable rewards and hierarchical reward assignment. Our RL\nframework robustly detects reward hacking and guides both reasoning traces and\ncode tokens through fine-grained verification and hierarchical reward\ndecomposition, enabling the model to generate high-quality Triton kernels that\ncan truly replace existing modules. With robust and fine-grained evaluation,\nour experiments on KernelBench demonstrate that TritonRL achieves\nstate-of-the-art correctness and speedup, surpassing all other Triton-specific\nmodels and underscoring the effectiveness of our RL-based training paradigm."}
{"id": "2510.17883", "categories": ["cs.CR", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.17883", "abs": "https://arxiv.org/abs/2510.17883", "authors": ["Mohammad Abdul Rehman", "Syed Imad Ali Shah", "Abbas n=Anwar", "Noor Islam"], "title": "From Flows to Words: Can Zero-/Few-Shot LLMs Detect Network Intrusions? A Grammar-Constrained, Calibrated Evaluation on UNSW-NB15", "comment": null, "summary": "Large Language Models (LLMs) can reason over natural-language inputs, but\ntheir role in intrusion detection without fine-tuning remains uncertain. This\nstudy evaluates a prompt-only approach on UNSW-NB15 by converting each network\nflow to a compact textual record and augmenting it with lightweight,\ndomain-inspired boolean flags (asymmetry, burst rate, TTL irregularities, timer\nanomalies, rare service/state, short bursts). To reduce output drift and\nsupport measurement, the model is constrained to produce structured,\ngrammar-valid responses, and a single decision threshold is calibrated on a\nsmall development split. We compare zero-shot, instruction-guided, and few-shot\nprompting to strong tabular and neural baselines under identical splits,\nreporting accuracy, precision, recall, F1, and macro scores. Empirically,\nunguided prompting is unreliable, while instructions plus flags substantially\nimprove detection quality; adding calibrated scoring further stabilizes\nresults. On a balanced subset of two hundred flows, a 7B instruction-tuned\nmodel with flags reaches macro-F1 near 0.78; a lighter 3B model with few-shot\ncues and calibration attains F1 near 0.68 on one thousand examples. As the\nevaluation set grows to two thousand flows, decision quality decreases,\nrevealing sensitivity to coverage and prompting. Tabular baselines remain more\nstable and faster, yet the prompt-only pipeline requires no gradient training,\nproduces readable artifacts, and adapts easily through instructions and flags.\nContributions include a flow-to-text protocol with interpretable cues, a\ncalibration method for thresholding, a systematic baseline comparison, and a\nreproducibility bundle with prompts, grammar, metrics, and figures."}
{"id": "2510.17894", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.17894", "abs": "https://arxiv.org/abs/2510.17894", "authors": ["Yunhan Qiao", "Md Istiak Hossain Shihab", "Christopher Hundhausen"], "title": "A Systematic Literature Review of the Use of GenAI Assistants for Code Comprehension: Implications for Computing Education Research and Practice", "comment": null, "summary": "The ability to comprehend code has long been recognized as an essential skill\nin software engineering. As programmers lean more heavily on generative\nartificial intelligence (GenAI) assistants to develop code solutions, it is\nbecoming increasingly important for programmers to comprehend GenAI solutions\nso that they can verify their appropriateness and properly integrate them into\nexisting code. At the same time, GenAI tools are increasingly being enlisted to\nprovide programmers with tailored explanations of code written both by GenAI\nand humans. Thus, in computing education, GenAI presents new challenges and\nopportunities for learners who are trying to comprehend computer programs. To\nprovide computing educators with evidence-based guidance on the use of GenAI to\nfacilitate code comprehension and to identify directions for future research,\nwe present a systematic literature review (SLR) of state-of-the-art approaches\nand tools that leverage GenAI to enhance code comprehension. Our SLR focuses on\n31 studies published between 2022 and 2024. Despite their potential, GenAI\nassistants often yield inaccurate or unclear explanations, and novice\nprogrammers frequently struggle to craft effective prompts, thereby impeding\ntheir ability to leverage GenAI to aid code comprehension. Our review\nclassifies GenAI-based approaches and tools, identifies methods used to study\nthem, and summarizes the empirical evaluations of their effectiveness. We\nconsider the implications of our findings for computing education research and\npractice, and identify directions for future research."}
{"id": "2510.17884", "categories": ["cs.CR", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.17884", "abs": "https://arxiv.org/abs/2510.17884", "authors": ["Mohammad Abdul Rehman", "Syed Imad Ali Shah", "Abbas Anwar", "Noor Islam"], "title": "When Intelligence Fails: An Empirical Study on Why LLMs Struggle with Password Cracking", "comment": null, "summary": "The remarkable capabilities of Large Language Models (LLMs) in natural\nlanguage understanding and generation have sparked interest in their potential\nfor cybersecurity applications, including password guessing. In this study, we\nconduct an empirical investigation into the efficacy of pre-trained LLMs for\npassword cracking using synthetic user profiles. Specifically, we evaluate the\nperformance of state-of-the-art open-source LLMs such as TinyLLaMA,\nFalcon-RW-1B, and Flan-T5 by prompting them to generate plausible passwords\nbased on structured user attributes (e.g., name, birthdate, hobbies). Our\nresults, measured using Hit@1, Hit@5, and Hit@10 metrics under both plaintext\nand SHA-256 hash comparisons, reveal consistently poor performance, with all\nmodels achieving less than 1.5% accuracy at Hit@10. In contrast, traditional\nrule-based and combinator-based cracking methods demonstrate significantly\nhigher success rates. Through detailed analysis and visualization, we identify\nkey limitations in the generative reasoning of LLMs when applied to the\ndomain-specific task of password guessing. Our findings suggest that, despite\ntheir linguistic prowess, current LLMs lack the domain adaptation and\nmemorization capabilities required for effective password inference, especially\nin the absence of supervised fine-tuning on leaked password datasets. This\nstudy provides critical insights into the limitations of LLMs in adversarial\ncontexts and lays the groundwork for future efforts in secure,\nprivacy-preserving, and robust password modeling."}
{"id": "2510.17925", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.17925", "abs": "https://arxiv.org/abs/2510.17925", "authors": ["George Ma", "Anurag Koul", "Qi Chen", "Yawen Wu", "Sachit Kuhar", "Yu Yu", "Aritra Sengupta", "Varun Kumar", "Murali Krishna Ramanathan"], "title": "SpecAgent: A Speculative Retrieval and Forecasting Agent for Code Completion", "comment": null, "summary": "Large Language Models (LLMs) excel at code-related tasks but often struggle\nin realistic software repositories, where project-specific APIs and cross-file\ndependencies are crucial. Retrieval-augmented methods mitigate this by\ninjecting repository context at inference time. The low inference-time latency\nbudget affects either retrieval quality or the added latency adversely impacts\nuser experience. We address this limitation with SpecAgent, an agent that\nimproves both latency and code-generation quality by proactively exploring\nrepository files during indexing and constructing speculative context that\nanticipates future edits in each file. This indexing-time asynchrony allows\nthorough context computation, masking latency, and the speculative nature of\nthe context improves code-generation quality. Additionally, we identify the\nproblem of future context leakage in existing benchmarks, which can inflate\nreported performance. To address this, we construct a synthetic, leakage-free\nbenchmark that enables a more realistic evaluation of our agent against\nbaselines. Experiments show that SpecAgent consistently achieves absolute gains\nof 9-11% (48-58% relative) compared to the best-performing baselines, while\nsignificantly reducing inference latency."}
{"id": "2510.17904", "categories": ["cs.CR", "cs.AI", "cs.CL", "68T50, 68T05, 68M07", "I.2.7; I.2.6; K.6.5"], "pdf": "https://arxiv.org/pdf/2510.17904", "abs": "https://arxiv.org/abs/2510.17904", "authors": ["Amirkia Rafiei Oskooei", "Mehmet S. Aktas"], "title": "BreakFun: Jailbreaking LLMs via Schema Exploitation", "comment": null, "summary": "The proficiency of Large Language Models (LLMs) in processing structured data\nand adhering to syntactic rules is a capability that drives their widespread\nadoption but also makes them paradoxically vulnerable. In this paper, we\ninvestigate this vulnerability through BreakFun, a jailbreak methodology that\nweaponizes an LLM's adherence to structured schemas. BreakFun employs a\nthree-part prompt that combines an innocent framing and a Chain-of-Thought\ndistraction with a core \"Trojan Schema\"--a carefully crafted data structure\nthat compels the model to generate harmful content, exploiting the LLM's strong\ntendency to follow structures and schemas. We demonstrate this vulnerability is\nhighly transferable, achieving an average success rate of 89% across 13\nfoundational and proprietary models on JailbreakBench, and reaching a 100%\nAttack Success Rate (ASR) on several prominent models. A rigorous ablation\nstudy confirms this Trojan Schema is the attack's primary causal factor. To\ncounter this, we introduce the Adversarial Prompt Deconstruction guardrail, a\ndefense that utilizes a secondary LLM to perform a \"Literal\nTranscription\"--extracting all human-readable text to isolate and reveal the\nuser's true harmful intent. Our proof-of-concept guardrail demonstrates high\nefficacy against the attack, validating that targeting the deceptive schema is\na viable mitigation strategy. Our work provides a look into how an LLM's core\nstrengths can be turned into critical weaknesses, offering a fresh perspective\nfor building more robustly aligned models."}
{"id": "2510.17932", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.17932", "abs": "https://arxiv.org/abs/2510.17932", "authors": ["Jiahao Tang", "Henry Hengyuan Zhao", "Lijian Wu", "Yifei Tao", "Dongxing Mao", "Yang Wan", "Jingru Tan", "Min Zeng", "Min Li", "Alex Jinpeng Wang"], "title": "From Charts to Code: A Hierarchical Benchmark for Multimodal Models", "comment": null, "summary": "We introduce Chart2Code, a new benchmark for evaluating the chart\nunderstanding and code generation capabilities of large multimodal models\n(LMMs). Chart2Code is explicitly designed from a user-driven perspective,\ncapturing diverse real-world scenarios and progressively increasing task\ndifficulty. It consists of three levels: Level 1 (Chart Reproduction)\nreproduces charts from a reference figure and user query; Level 2 (Chart\nEditing) involves complex modifications such as changing chart types or adding\nelements; and Level 3 (Long-Table to Chart Generation) requires models to\ntransform long, information-dense tables into faithful charts following user\ninstructions. To our knowledge, this is the first hierarchical benchmark that\nreflects practical chart2code usage while systematically scaling task\ncomplexity. In total, Chart2Code contains 2,023 tasks across 22 chart types,\npaired with multi-level evaluation metrics that assess both code correctness\nand the visual fidelity of rendered charts. We benchmark 25 state-of-the-art\n(SoTA) LMMs, including both proprietary and the latest open-source models such\nas GPT-5, Qwen2.5-VL, InternVL3/3.5, MiMo-VL, and Seed-1.6-VL. Experimental\nresults demonstrate that even the SoTA model GPT-5 averages only 0.57 on\ncode-based evaluation and 0.22 on chart-quality assessment across the editing\ntasks, underscoring the difficulty of Chart2Code. We anticipate this benchmark\nwill drive advances in multimodal reasoning and foster the development of more\nrobust and general-purpose LMMs. Our code and data are available on Chart2Code."}
{"id": "2510.17919", "categories": ["cs.CR", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.17919", "abs": "https://arxiv.org/abs/2510.17919", "authors": ["Tenghui Huang", "Jinbo Wen", "Jiawen Kang", "Siyong Chen", "Zhengtao Li", "Tao Zhang", "Dongning Liu", "Jiacheng Wang", "Chengjun Cai", "Yinqiu Liu", "Dusit Niyato"], "title": "ParaVul: A Parallel Large Language Model and Retrieval-Augmented Framework for Smart Contract Vulnerability Detection", "comment": null, "summary": "Smart contracts play a significant role in automating blockchain services.\nNevertheless, vulnerabilities in smart contracts pose serious threats to\nblockchain security. Currently, traditional detection methods primarily rely on\nstatic analysis and formal verification, which can result in high\nfalse-positive rates and poor scalability. Large Language Models (LLMs) have\nrecently made significant progress in smart contract vulnerability detection.\nHowever, they still face challenges such as high inference costs and\nsubstantial computational overhead. In this paper, we propose ParaVul, a\nparallel LLM and retrieval-augmented framework to improve the reliability and\naccuracy of smart contract vulnerability detection. Specifically, we first\ndevelop Sparse Low-Rank Adaptation (SLoRA) for LLM fine-tuning. SLoRA\nintroduces sparsification by incorporating a sparse matrix into quantized\nLoRA-based LLMs, thereby reducing computational overhead and resource\nrequirements while enhancing their ability to understand vulnerability-related\nissues. We then construct a vulnerability contract dataset and develop a hybrid\nRetrieval-Augmented Generation (RAG) system that integrates dense retrieval\nwith Best Matching 25 (BM25), assisting in verifying the results generated by\nthe LLM. Furthermore, we propose a meta-learning model to fuse the outputs of\nthe RAG system and the LLM, thereby generating the final detection results.\nAfter completing vulnerability detection, we design chain-of-thought prompts to\nguide LLMs to generate comprehensive vulnerability detection reports.\nSimulation results demonstrate the superiority of ParaVul, especially in terms\nof F1 scores, achieving 0.9398 for single-label detection and 0.9330 for\nmulti-label detection."}
{"id": "2510.18013", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18013", "abs": "https://arxiv.org/abs/2510.18013", "authors": ["Yiran Wang", "José Antonio Hernández López", "Ulf Nilsson", "Dániel Varró"], "title": "JunoBench: A Benchmark Dataset of Crashes in Python Machine Learning Jupyter Notebooks", "comment": null, "summary": "Jupyter notebooks are widely used for machine learning (ML) prototyping. Yet\nfew debugging tools are designed for ML code in notebooks, potentially due to\nthe lack of benchmarks. We introduce JunoBench, the first benchmark dataset of\nreal-world crashes in Python-based ML notebooks. JunoBench has 111 curated and\nreproducible crashes from public Kaggle notebooks, each paired with a\nverifiable fix, ranging over popular ML libraries, including TensorFlow/Keras,\nPyTorch, Scikit-learn, Pandas, and NumPy, as well as notebook-specific\nout-of-order execution issue. To support reproducibility and ease of use,\nJunoBench offers a unified execution environment where crashes and fixes can be\nreliably reproduced. By providing realistic crashes and their resolutions,\nJunoBench facilitates bug detection, localization, and repair tailored to the\ninteractive and iterative nature of notebook-based ML development."}
{"id": "2510.17947", "categories": ["cs.CR", "cs.AI", "cs.CL", "cs.LG", "cs.MA"], "pdf": "https://arxiv.org/pdf/2510.17947", "abs": "https://arxiv.org/abs/2510.17947", "authors": ["Neeladri Bhuiya", "Madhav Aggarwal", "Diptanshu Purwar"], "title": "PLAGUE: Plug-and-play framework for Lifelong Adaptive Generation of Multi-turn Exploits", "comment": null, "summary": "Large Language Models (LLMs) are improving at an exceptional rate. With the\nadvent of agentic workflows, multi-turn dialogue has become the de facto mode\nof interaction with LLMs for completing long and complex tasks. While LLM\ncapabilities continue to improve, they remain increasingly susceptible to\njailbreaking, especially in multi-turn scenarios where harmful intent can be\nsubtly injected across the conversation to produce nefarious outcomes. While\nsingle-turn attacks have been extensively explored, adaptability, efficiency\nand effectiveness continue to remain key challenges for their multi-turn\ncounterparts. To address these gaps, we present PLAGUE, a novel plug-and-play\nframework for designing multi-turn attacks inspired by lifelong-learning\nagents. PLAGUE dissects the lifetime of a multi-turn attack into three\ncarefully designed phases (Primer, Planner and Finisher) that enable a\nsystematic and information-rich exploration of the multi-turn attack family.\nEvaluations show that red-teaming agents designed using PLAGUE achieve\nstate-of-the-art jailbreaking results, improving attack success rates (ASR) by\nmore than 30% across leading models in a lesser or comparable query budget.\nParticularly, PLAGUE enables an ASR (based on StrongReject) of 81.4% on\nOpenAI's o3 and 67.3% on Claude's Opus 4.1, two models that are considered\nhighly resistant to jailbreaks in safety literature. Our work offers tools and\ninsights to understand the importance of plan initialization, context\noptimization and lifelong learning in crafting multi-turn attacks for a\ncomprehensive model vulnerability evaluation."}
{"id": "2510.18017", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18017", "abs": "https://arxiv.org/abs/2510.18017", "authors": ["Mariana Crisostomo Martins", "Lucas Elias Cardoso Rocha", "Lucas Cordeiro Romao", "Taciana Novo Kudo", "Marcos Kalinowski", "Renato de Freitas Bulcao-Neto"], "title": "DIP-AI: A Discovery Framework for AI Innovation Projects", "comment": "Submitted and accepted at SBQS25 - Brazilian Symposium on Software\n  Quality. Presentation from November 4th to 7th, 2025 in Sao Jose dos Campos,\n  SP", "summary": "Despite the increasing development of Artificial Intelligence (AI) systems,\nRequirements Engineering (RE) activities face challenges in this new\ndata-intensive paradigm. We identified a lack of support for problem discovery\nwithin AI innovation projects. To address this, we propose and evaluate DIP-AI,\na discovery framework tailored to guide early-stage exploration in such\ninitiatives. Based on a literature review, our solution proposal combines\nelements of ISO 12207, 5338, and Design Thinking to support the discovery of AI\ninnovation projects, aiming at promoting higher quality deliveries and\nstakeholder satisfaction. We evaluated DIP-AI in an industry-academia\ncollaboration (IAC) case study of an AI innovation project, in which\nparticipants applied DIP-AI to the discovery phase in practice and provided\ntheir perceptions about the approach's problem discovery capability,\nacceptance, and suggestions. The results indicate that DIP-AI is relevant and\nuseful, particularly in facilitating problem discovery in AI projects. This\nresearch contributes to academia by sharing DIP-AI as a framework for AI\nproblem discovery. For industry, we discuss the use of this framework in a real\nIAC program that develops AI innovation projects."}
{"id": "2510.18003", "categories": ["cs.CR", "cs.AI", "cs.CY"], "pdf": "https://arxiv.org/pdf/2510.18003", "abs": "https://arxiv.org/abs/2510.18003", "authors": ["Fengqing Jiang", "Yichen Feng", "Yuetai Li", "Luyao Niu", "Basel Alomair", "Radha Poovendran"], "title": "BadScientist: Can a Research Agent Write Convincing but Unsound Papers that Fool LLM Reviewers?", "comment": null, "summary": "The convergence of LLM-powered research assistants and AI-based peer review\nsystems creates a critical vulnerability: fully automated publication loops\nwhere AI-generated research is evaluated by AI reviewers without human\noversight. We investigate this through \\textbf{BadScientist}, a framework that\nevaluates whether fabrication-oriented paper generation agents can deceive\nmulti-model LLM review systems. Our generator employs presentation-manipulation\nstrategies requiring no real experiments. We develop a rigorous evaluation\nframework with formal error guarantees (concentration bounds and calibration\nanalysis), calibrated on real data. Our results reveal systematic\nvulnerabilities: fabricated papers achieve acceptance rates up to . Critically,\nwe identify \\textit{concern-acceptance conflict} -- reviewers frequently flag\nintegrity issues yet assign acceptance-level scores. Our mitigation strategies\nshow only marginal improvements, with detection accuracy barely exceeding\nrandom chance. Despite provably sound aggregation mathematics, integrity\nchecking systematically fails, exposing fundamental limitations in current\nAI-driven review systems and underscoring the urgent need for defense-in-depth\nsafeguards in scientific publishing."}
{"id": "2510.18096", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18096", "abs": "https://arxiv.org/abs/2510.18096", "authors": ["Esrat Ebtida Sakib", "MD Ahnaf Akib", "Md Muktadir Mazumder", "Maliha Noushin Raida", "Md. Mohsinul Kabir"], "title": "A Benchmark Dataset And LLMs Comparison For NFR Classification With Explainable AI", "comment": null, "summary": "Non-Functional Requirements (NFRs) play a critical role in determining the\noverall quality and user satisfaction of software systems. Accurately\nidentifying and classifying NFRs is essential to ensure that software meets\nperformance, usability, and reliability expectations. However, manual\nidentification of NFRs from documentation is time-consuming and prone to\nerrors, necessitating automated solutions. Before implementing any automated\nsolution, a robust and comprehensive dataset is essential. To build such a\ndataset, we collected NFRs from various Project Charters and Open Source\nSoftware Documentation. This enhanced the technical depth and usability of an\nalready existing NFR dataset. We categorized NFRs into sub-classes and\nidentified needs using widely used Large Language Models to facilitate\nautomation. After classifying the NFRs, we compared the classification results\nof the selected LLMs: RoBERTa, CodeBERT, Gemma-2, Phi-3, Mistral-8B, and\nLlama-3.1-8B using various evaluation metrics, including precision, recall,\nF1-score, and lime scores. Among these models, Gemma-2 achieved the best\nresults with a precision of 0.87, recall of 0.89, and F1-score of 0.88,\nalongside a lime hit score of 78 out of 80. Phi-3 closely followed with a\nprecision of 0.85, recall of 0.87, F1-score of 0.86, and the highest lime hit\nscore of 79. By improving the contextual foundation, this integration enhanced\nthe model's comprehension of technical aspects and user requirements."}
{"id": "2510.18084", "categories": ["cs.CR", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.18084", "abs": "https://arxiv.org/abs/2510.18084", "authors": ["Zaineh Abughazzah", "Emna Baccour", "Loay Ismail", "Amr Mohamed", "Mounir Hamdi"], "title": "RL-Driven Security-Aware Resource Allocation Framework for UAV-Assisted O-RAN", "comment": "6 pages", "summary": "The integration of Unmanned Aerial Vehicles (UAVs) into Open Radio Access\nNetworks (O-RAN) enhances communication in disaster management and Search and\nRescue (SAR) operations by ensuring connectivity when infrastructure fails.\nHowever, SAR scenarios demand stringent security and low-latency communication,\nas delays or breaches can compromise mission success. While UAVs serve as\nmobile relays, they introduce challenges in energy consumption and resource\nmanagement, necessitating intelligent allocation strategies. Existing\nUAV-assisted O-RAN approaches often overlook the joint optimization of\nsecurity, latency, and energy efficiency in dynamic environments. This paper\nproposes a novel Reinforcement Learning (RL)-based framework for dynamic\nresource allocation in UAV relays, explicitly addressing these trade-offs. Our\napproach formulates an optimization problem that integrates security-aware\nresource allocation, latency minimization, and energy efficiency, which is\nsolved using RL. Unlike heuristic or static methods, our framework adapts in\nreal-time to network dynamics, ensuring robust communication. Simulations\ndemonstrate superior performance compared to heuristic baselines, achieving\nenhanced security and energy efficiency while maintaining ultra-low latency in\nSAR scenarios."}
{"id": "2510.18131", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18131", "abs": "https://arxiv.org/abs/2510.18131", "authors": ["Chengquan Guo", "Yuzhou Nie", "Chulin Xie", "Zinan Lin", "Wenbo Guo", "Bo Li"], "title": "BlueCodeAgent: A Blue Teaming Agent Enabled by Automated Red Teaming for CodeGen AI", "comment": null, "summary": "As large language models (LLMs) are increasingly used for code generation,\nconcerns over the security risks have grown substantially. Early research has\nprimarily focused on red teaming, which aims to uncover and evaluate\nvulnerabilities and risks of CodeGen models. However, progress on the blue\nteaming side remains limited, as developing defense requires effective semantic\nunderstanding to differentiate the unsafe from the safe. To fill in this gap,\nwe propose BlueCodeAgent, an end-to-end blue teaming agent enabled by automated\nred teaming. Our framework integrates both sides: red teaming generates diverse\nrisky instances, while the blue teaming agent leverages these to detect\npreviously seen and unseen risk scenarios through constitution and code\nanalysis with agentic integration for multi-level defense. Our evaluation\nacross three representative code-related tasks--bias instruction detection,\nmalicious instruction detection, and vulnerable code detection--shows that\nBlueCodeAgent achieves significant gains over the base models and safety\nprompt-based defenses. In particular, for vulnerable code detection tasks,\nBlueCodeAgent integrates dynamic analysis to effectively reduce false\npositives, a challenging problem as base models tend to be over-conservative,\nmisclassifying safe code as unsafe. Overall, BlueCodeAgent achieves an average\n12.7\\% F1 score improvement across four datasets in three tasks, attributed to\nits ability to summarize actionable constitutions that enhance context-aware\nrisk detection. We demonstrate that the red teaming benefits the blue teaming\nby continuously identifying new vulnerabilities to enhance defense performance."}
{"id": "2510.18109", "categories": ["cs.CR", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.18109", "abs": "https://arxiv.org/abs/2510.18109", "authors": ["Wan Ki Wong", "Sahel Torkamani", "Michele Ciampi", "Rik Sarkar"], "title": "PrivaDE: Privacy-preserving Data Evaluation for Blockchain-based Data Marketplaces", "comment": null, "summary": "Evaluating the relevance of data is a critical task for model builders\nseeking to acquire datasets that enhance model performance. Ideally, such\nevaluation should allow the model builder to assess the utility of candidate\ndata without exposing proprietary details of the model. At the same time, data\nproviders must be assured that no information about their data - beyond the\ncomputed utility score - is disclosed to the model builder.\n  In this paper, we present PrivaDE, a cryptographic protocol for\nprivacy-preserving utility scoring and selection of data for machine learning.\nWhile prior works have proposed data evaluation protocols, our approach\nadvances the state of the art through a practical, blockchain-centric design.\nLeveraging the trustless nature of blockchains, PrivaDE enforces\nmalicious-security guarantees and ensures strong privacy protection for both\nmodels and datasets. To achieve efficiency, we integrate several techniques -\nincluding model distillation, model splitting, and cut-and-choose\nzero-knowledge proofs - bringing the runtime to a practical level. Furthermore,\nwe propose a unified utility scoring function that combines empirical loss,\npredictive entropy, and feature-space diversity, and that can be seamlessly\nintegrated into active-learning workflows. Evaluation shows that PrivaDE\nperforms data evaluation effectively, achieving online runtimes within 15\nminutes even for models with millions of parameters.\n  Our work lays the foundation for fair and automated data marketplaces in\ndecentralized machine learning ecosystems."}
{"id": "2510.18270", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18270", "abs": "https://arxiv.org/abs/2510.18270", "authors": ["Yang Chen", "Toufique Ahmed", "Reyhaneh Jabbarvand", "Martin Hirzel"], "title": "When Old Meets New: Evaluating the Impact of Regression Tests on SWE Issue Resolution", "comment": null, "summary": "Test suites in real-world projects are often large and achieve high code\ncoverage, yet they remain insufficient for detecting all bugs. The abundance of\nunresolved issues in open-source project trackers highlights this gap. While\nregression tests are typically designed to ensure past functionality is\npreserved in the new version, they can also serve a complementary purpose:\ndebugging the current version. Specifically, regression tests can (1) enhance\nthe generation of reproduction tests for newly reported issues, and (2)\nvalidate that patches do not regress existing functionality. We present\nTestPrune, a fully automated technique that leverages issue tracker reports and\nstrategically reuses regression tests for both bug reproduction and patch\nvalidation.\n  A key contribution of TestPrune is its ability to automatically minimize the\nregression suite to a small, highly relevant subset of tests. Due to the\npredominance of LLM-based debugging techniques, this minimization is essential\nas large test suites exceed context limits, introduce noise, and inflate\ninference costs. TestPrune can be plugged into any agentic bug repair pipeline\nand orthogonally improve overall performance. As a proof of concept, we show\nthat TestPrune leads to a 6.2%-9.0% relative increase in issue reproduction\nrate within the Otter framework and a 9.4% - 12.9% relative increase in issue\nresolution rate within the Agentless framework on SWE-Bench Lite and SWE-Bench\nVerified benchmarks, capturing fixes that were correctly produced by agents but\nnot submitted as final patches. Compared to the benefits, the cost overhead of\nusing TestPrune is minimal, i.e., \\$0.02 and \\$0.05 per SWE-Bench instance,\nusing GPT-4o and Claude-3.7-Sonnet models, respectively."}
{"id": "2510.18113", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.18113", "abs": "https://arxiv.org/abs/2510.18113", "authors": ["Devin Ersoy", "Brandon Lee", "Ananth Shreekumar", "Arjun Arunasalam", "Muhammad Ibrahim", "Antonio Bianchi", "Z. Berkay Celik"], "title": "Investigating the Impact of Dark Patterns on LLM-Based Web Agents", "comment": "At IEEE S&P 2026", "summary": "As users increasingly turn to large language model (LLM) based web agents to\nautomate online tasks, agents may encounter dark patterns: deceptive user\ninterface designs that manipulate users into making unintended decisions.\nAlthough dark patterns primarily target human users, their potentially harmful\nimpacts on LLM-based generalist web agents remain unexplored. In this paper, we\npresent the first study that investigates the impact of dark patterns on the\ndecision-making process of LLM-based generalist web agents. To achieve this, we\nintroduce LiteAgent, a lightweight framework that automatically prompts agents\nto execute tasks while capturing comprehensive logs and screen-recordings of\ntheir interactions. We also present TrickyArena, a controlled environment\ncomprising web applications from domains such as e-commerce, streaming\nservices, and news platforms, each containing diverse and realistic dark\npatterns that can be selectively enabled or disabled. Using LiteAgent and\nTrickyArena, we conduct multiple experiments to assess the impact of both\nindividual and combined dark patterns on web agent behavior. We evaluate six\npopular LLM-based generalist web agents across three LLMs and discover that\nwhen there is a single dark pattern present, agents are susceptible to it an\naverage of 41% of the time. We also find that modifying dark pattern UI\nattributes through visual design changes or HTML code adjustments and\nintroducing multiple dark patterns simultaneously can influence agent\nsusceptibility. This study emphasizes the need for holistic defense mechanisms\nin web agents, encompassing both agent-specific protections and broader web\nsafety measures."}
{"id": "2510.18292", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18292", "abs": "https://arxiv.org/abs/2510.18292", "authors": ["Hala Abdelkader", "Mohamed Abdelrazek", "Priya Rani", "Rajesh Vasa", "Jean-Guy Schneider"], "title": "Ensuring Robustness in ML-enabled Software Systems: A User Survey", "comment": null, "summary": "Ensuring robustness in ML-enabled software systems requires addressing\ncritical challenges, such as silent failures, out-of-distribution (OOD) data,\nand adversarial attacks. Traditional software engineering practices, which rely\non predefined logic, are insufficient for ML components that depend on data and\nprobabilistic decision-making. To address these challenges, we propose the\nML-On-Rails protocol, a unified framework designed to enhance the robustness\nand trustworthiness of ML-enabled systems in production. This protocol\nintegrates key safeguards such as OOD detection, adversarial attack detection,\ninput validation, and explainability. It also includes a model-to-software\ncommunication framework using HTTP status codes to enhance transparency in\nreporting model outcomes and errors. To align our approach with real-world\nchallenges, we conducted a practitioner survey, which revealed major robustness\nissues, gaps in current solutions, and highlighted how a standardised protocol\nsuch as ML-On-Rails can improve system robustness. Our findings highlight the\nneed for more support and resources for engineers working with ML systems.\nFinally, we outline future directions for refining the proposed protocol,\nleveraging insights from the survey and real-world applications to continually\nenhance its effectiveness."}
{"id": "2510.18160", "categories": ["cs.CR", "cs.NI"], "pdf": "https://arxiv.org/pdf/2510.18160", "abs": "https://arxiv.org/abs/2510.18160", "authors": ["Pranshav Gajjar", "Molham Khoja", "Abiodun Ganiyu", "Marc Juarez", "Mahesh K. Marina", "Andrew Lehane", "Vijay K. Shah"], "title": "Black-Box Evasion Attacks on Data-Driven Open RAN Apps: Tailored Design and Experimental Evaluation", "comment": null, "summary": "The impending adoption of Open Radio Access Network (O-RAN) is fueling\ninnovation in the RAN towards data-driven operation. Unlike traditional RAN\nwhere the RAN data and its usage is restricted within proprietary and\nmonolithic RAN equipment, the O-RAN architecture opens up access to RAN data\nvia RAN intelligent controllers (RICs), to third-party machine learning (ML)\npowered applications - rApps and xApps - to optimize RAN operations.\nConsequently, a major focus has been placed on leveraging RAN data to unlock\ngreater efficiency gains. However, there is an increasing recognition that RAN\ndata access to apps could become a source of vulnerability and be exploited by\nmalicious actors. Motivated by this, we carry out a comprehensive investigation\nof data vulnerabilities on both xApps and rApps, respectively hosted in Near-\nand Non-real-time (RT) RIC components of O-RAN. We qualitatively analyse the\nO-RAN security mechanisms and limitations for xApps and rApps, and consider a\nthreat model informed by this analysis. We design a viable and effective\nblack-box evasion attack strategy targeting O-RAN RIC Apps while accounting for\nthe stringent timing constraints and attack effectiveness. The strategy employs\nfour key techniques: the model cloning algorithm, input-specific perturbations,\nuniversal adversarial perturbations (UAPs), and targeted UAPs. This strategy\ntargets ML models used by both xApps and rApps within the O-RAN system, aiming\nto degrade network performance. We validate the effectiveness of the designed\nevasion attack strategy and quantify the scale of performance degradation using\na real-world O-RAN testbed and emulation environments. Evaluation is conducted\nusing the Interference Classification xApp and the Power Saving rApp as\nrepresentatives for near-RT and non-RT RICs. We also show that the attack\nstrategy is effective against prominent defense techniques for adversarial ML."}
{"id": "2510.18327", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18327", "abs": "https://arxiv.org/abs/2510.18327", "authors": ["Yunkun Wang", "Yue Zhang", "Guochang Li", "Chen Zhi", "Binhua Li", "Fei Huang", "Yongbin Li", "Shuiguang Deng"], "title": "InspectCoder: Dynamic Analysis-Enabled Self Repair through interactive LLM-Debugger Collaboration", "comment": null, "summary": "Large Language Models (LLMs) frequently generate buggy code with complex\nlogic errors that are challenging to diagnose. While existing LLM-based\nself-repair approaches conduct intensive static semantic analysis or reply on\nsuperficial execution logs, they miss the in-depth runtime behaviors that often\nexpose bug root causes-lacking the interactive dynamic analysis capabilities\nthat make human debugging effective. We present InspectCoder, the first agentic\nprogram repair system that empowers LLMs to actively conduct dynamic analysis\nvia interactive debugger control. Our dual-agent framework enables strategic\nbreakpoint placement, targeted state inspection, and incremental runtime\nexperimentation within stateful debugger sessions. Unlike existing methods that\nfollow fixed log collection procedures, InspectCoder adaptively inspects and\nperturbs relevant intermediate states at runtime, and leverages immediate\nprocess rewards from debugger feedback to guide multi-step reasoning,\ntransforming LLM debugging paradigm from blind trial-and-error into systematic\nroot cause diagnosis. We conduct comprehensive experiments on two challenging\nself-repair benchmarks: BigCodeBench-R and LiveCodeBench-R. InspectCoder\nachieves 5.10%-60.37% relative improvements in repair accuracy over the\nstrongest baseline, while delivering 1.67x-2.24x superior bug-fix efficiency\nrespectively. We also contribute InspectWare, an open-source middleware that\nabstracts debugger complexities and maintains stateful debugging sessions\nacross mainstream Python testing frameworks. Our work provides actionable\ninsight into the interactive LLM-debugger systems, demonstrating the\nsignificant potential of LLM-driven dynamic analysis for automated software\nengineering."}
{"id": "2510.18192", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.18192", "abs": "https://arxiv.org/abs/2510.18192", "authors": ["Hadis Rezaei", "Ahmed Afif Monrat", "Karl Andersson", "Francesco Flammini"], "title": "TaintSentinel: Path-Level Randomness Vulnerability Detection for Ethereum Smart Contracts", "comment": null, "summary": "The inherent determinism of blockchain technology poses a significant\nchallenge to generating secure random numbers within smart contracts, leading\nto exploitable vulnerabilities, particularly in decentralized finance (DeFi)\necosystems and blockchain-based gaming applications. From our observations, the\ncurrent state-of-the-art detection tools suffer from inadequate precision while\ndealing with random number vulnerabilities. To address this problem, we propose\nTaintSentinel, a novel path sensitive vulnerability detection system designed\nto analyze smart contracts at the execution path level and gradually analyze\ntaint with domain-specific rules. This paper discusses a solution that\nincorporates a multi-faceted approach, integrating rule-based taint analysis to\ntrack data flow, a dual stream neural network to identify complex vulnerability\nsignatures, and evidence-based parameter initialization to minimize false\npositives. The system's two-phase operation involves semantic graph\nconstruction and taint propagation analysis, followed by pattern recognition\nusing PathGNN and global structural analysis via GlobalGCN. Our experiments on\n4,844 contracts demonstrate the superior performance of TaintSentinel relative\nto existing tools, yielding an F1-score of 0.892, an AUC-ROC of 0.94, and a PRA\naccuracy of 97%."}
{"id": "2510.18430", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18430", "abs": "https://arxiv.org/abs/2510.18430", "authors": ["Tasha Settewong", "Youmei Fan", "Raula Gaikovina Kula", "Kenichi Matsumoto"], "title": "Human to Document, AI to Code: Three Case Studies of Comparing GenAI for Notebook Competitions", "comment": null, "summary": "Computational notebooks have become the preferred tool of choice for data\nscientists and practitioners to perform analyses and share results. Notebooks\nuniquely combine scripts with documentation. With the emergence of generative\nAI (GenAI) technologies, it is increasingly important, especially in\ncompetitive settings, to distinguish the characteristics of human-written\nversus GenAI.\n  In this study, we present three case studies to explore potential strengths\nof both humans and GenAI through the coding and documenting activities in\nnotebooks. We first characterize differences between 25 code and documentation\nfeatures in human-written, medal-winning Kaggle notebooks. We find that gold\nmedalists are primarily distinguished by longer and more detailed\ndocumentation. Second, we analyze the distinctions between human-written and\nGenAI notebooks. Our results show that while GenAI notebooks tend to achieve\nhigher code quality (as measured by metrics like code smells and technical\ndebt), human-written notebooks display greater structural diversity,\ncomplexity, and innovative approaches to problem-solving. Based on these\nresults, we envision the work as groundwork that highlight four agendas to\nfurther investigate how GenAI could be utilized in notebooks that maximizes the\npotential collaboration between human and AI."}
{"id": "2510.18204", "categories": ["cs.CR", "cs.LG", "cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18204", "abs": "https://arxiv.org/abs/2510.18204", "authors": ["Jiahao Shi", "Tianyi Zhang"], "title": "RESCUE: Retrieval Augmented Secure Code Generation", "comment": null, "summary": "Despite recent advances, Large Language Models (LLMs) still generate\nvulnerable code. Retrieval-Augmented Generation (RAG) has the potential to\nenhance LLMs for secure code generation by incorporating external security\nknowledge. However, the conventional RAG design struggles with the noise of raw\nsecurity-related documents, and existing retrieval methods overlook the\nsignificant security semantics implicitly embedded in task descriptions. To\naddress these issues, we propose RESCUE, a new RAG framework for secure code\ngeneration with two key innovations. First, we propose a hybrid knowledge base\nconstruction method that combines LLM-assisted cluster-then-summarize\ndistillation with program slicing, producing both high-level security\nguidelines and concise, security-focused code examples. Second, we design a\nhierarchical multi-faceted retrieval to traverse the constructed knowledge base\nfrom top to bottom and integrates multiple security-critical facts at each\nhierarchical level, ensuring comprehensive and accurate retrieval. We evaluated\nRESCUE on four benchmarks and compared it with five state-of-the-art secure\ncode generation methods on six LLMs. The results demonstrate that RESCUE\nimproves the SecurePass@1 metric by an average of 4.8 points, establishing a\nnew state-of-the-art performance for security. Furthermore, we performed\nin-depth analysis and ablation studies to rigorously validate the effectiveness\nof individual components in RESCUE."}
{"id": "2510.18448", "categories": ["cs.SE", "cs.CR"], "pdf": "https://arxiv.org/pdf/2510.18448", "abs": "https://arxiv.org/abs/2510.18448", "authors": ["Wenjing Dang", "Kaixuan Li", "Sen Chen", "Zhenwei Zhuo", "Lyuye Zhang", "Zheli Liu"], "title": "Real-World Usability of Vulnerability Proof-of-Concepts: A Comprehensive Study", "comment": null, "summary": "The Proof-of-Concept (PoC) for a vulnerability is crucial in validating its\nexistence, mitigating false positives, and illustrating the severity of the\nsecurity threat it poses. However, research on PoCs significantly lags behind\nstudies focusing on vulnerability data. This discrepancy can be directly\nattributed to several challenges, including the dispersion of real-world PoCs\nacross multiple platforms, the diversity in writing styles, and the difficulty\nassociated with PoC reproduction. To fill this gap, we conduct the first\nlarge-scale study on PoCs in the wild, assessing their report availability,\ncompleteness, reproducibility. Specifically, 1) to investigate PoC reports\navailability for CVE vulnerability, we collected an extensive dataset of\n470,921 PoCs and their reports from 13 platforms, representing the broadest\ncollection of publicly available PoCs to date. 2) To assess the completeness of\nPoC report at a fine-grained level, we proposed a component extraction method,\nwhich combines pattern-matching techniques with a fine-tuned BERT-NER model to\nextract 9 key components from PoC reports. 3) To evaluate the effectiveness of\nPoCs, we recruited 8 participants to manually reproduce 150 sampled\nvulnerabilities with 32 vulnerability types based on PoC reports, enabling an\nin-depth analysis of PoC reproducibility and the factors influencing it. Our\nfindings reveal that 78.9% of CVE vulnerabilities lack available PoCs, and\nexisting PoC reports typically miss about 30% of the essential components\nrequired for effective vulnerability understanding and reproduction, with\nvarious reasons identified for the failure to reproduce vulnerabilities using\navailable PoC reports. Finally, we proposed actionable strategies for\nstakeholders to enhance the overall usability of vulnerability PoCs in\nstrengthening software security."}
{"id": "2510.18324", "categories": ["cs.CR", "K.6.5; D.4.6; C.2.0"], "pdf": "https://arxiv.org/pdf/2510.18324", "abs": "https://arxiv.org/abs/2510.18324", "authors": ["Gyeonghoon Park", "Jaehan Kim", "Jinu Choi", "Jinwoo Kim"], "title": "CryptoGuard: Lightweight Hybrid Detection and Response to Host-based Cryptojackers in Linux Cloud Environments", "comment": "15 pages, 13 figures", "summary": "Host-based cryptomining malware, commonly known as cryptojackers, have gained\nnotoriety for their stealth and the significant financial losses they cause in\nLinux-based cloud environments. Existing solutions often struggle with\nscalability due to high monitoring overhead, low detection accuracy against\nobfuscated behavior, and lack of integrated remediation. We present\nCryptoGuard, a lightweight hybrid solution that combines detection and\nremediation strategies to counter cryptojackers. To ensure scalability,\nCryptoGuard uses sketch- and sliding window-based syscall monitoring to collect\nbehavior patterns with minimal overhead. It decomposes the classification task\ninto a two-phase process, leveraging deep learning models to identify\nsuspicious activity with high precision. To counter evasion techniques such as\nentry point poisoning and PID manipulation, CryptoGuard integrates targeted\nremediation mechanisms based on eBPF, a modern Linux kernel feature deployable\non any compatible host. Evaluated on 123 real-world cryptojacker samples, it\nachieves average F1-scores of 96.12% and 92.26% across the two phases, and\noutperforms state-of-the-art baselines in terms of true and false positive\nrates, while incurring only 0.06% CPU overhead per host."}
{"id": "2510.18456", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18456", "abs": "https://arxiv.org/abs/2510.18456", "authors": ["Cristina Martinez Montes", "Robert Feldt", "Cristina Miguel Martos", "Sofia Ouhbi", "Shweta Premanandan", "Daniel Graziotin"], "title": "Large Language Models in Thematic Analysis: Prompt Engineering, Evaluation, and Guidelines for Qualitative Software Engineering Research", "comment": null, "summary": "As artificial intelligence advances, large language models (LLMs) are\nentering qualitative research workflows, yet no reproducible methods exist for\nintegrating them into established approaches like thematic analysis (TA), one\nof the most common qualitative methods in software engineering research.\nMoreover, existing studies lack systematic evaluation of LLM-generated\nqualitative outputs against established quality criteria. We designed and\niteratively refined prompts for Phases 2-5 of Braun and Clarke's reflexive TA,\nthen tested outputs from multiple LLMs against codes and themes produced by\nexperienced researchers. Using 15 interviews on software engineers' well-being,\nwe conducted blind evaluations with four expert evaluators who applied rubrics\nderived directly from Braun and Clarke's quality criteria. Evaluators preferred\nLLM-generated codes 61% of the time, finding them analytically useful for\nanswering the research question. However, evaluators also identified\nlimitations: LLMs fragmented data unnecessarily, missed latent interpretations,\nand sometimes produced themes with unclear boundaries. Our contributions are\nthreefold. First, a reproducible approach integrating refined, documented\nprompts with an evaluation framework to operationalize Braun and Clarke's\nreflexive TA. Second, an empirical comparison of LLM- and human-generated codes\nand themes in software engineering data. Third, guidelines for integrating LLMs\ninto qualitative analysis while preserving methodological rigour, clarifying\nwhen and how LLMs can assist effectively and when human interpretation remains\nessential."}
{"id": "2510.18333", "categories": ["cs.CR", "cs.CL"], "pdf": "https://arxiv.org/pdf/2510.18333", "abs": "https://arxiv.org/abs/2510.18333", "authors": ["Yepeng Liu", "Xuandong Zhao", "Dawn Song", "Gregory W. Wornell", "Yuheng Bu"], "title": "Position: LLM Watermarking Should Align Stakeholders' Incentives for Practical Adoption", "comment": null, "summary": "Despite progress in watermarking algorithms for large language models (LLMs),\nreal-world deployment remains limited. We argue that this gap stems from\nmisaligned incentives among LLM providers, platforms, and end users, which\nmanifest as four key barriers: competitive risk, detection-tool governance,\nrobustness concerns and attribution issues. We revisit three classes of\nwatermarking through this lens. \\emph{Model watermarking} naturally aligns with\nLLM provider interests, yet faces new challenges in open-source ecosystems.\n\\emph{LLM text watermarking} offers modest provider benefit when framed solely\nas an anti-misuse tool, but can gain traction in narrowly scoped settings such\nas dataset de-contamination or user-controlled provenance. \\emph{In-context\nwatermarking} (ICW) is tailored for trusted parties, such as conference\norganizers or educators, who embed hidden watermarking instructions into\ndocuments. If a dishonest reviewer or student submits this text to an LLM, the\noutput carries a detectable watermark indicating misuse. This setup aligns\nincentives: users experience no quality loss, trusted parties gain a detection\ntool, and LLM providers remain neutral by simply following watermark\ninstructions. We advocate for a broader exploration of incentive-aligned\nmethods, with ICW as an example, in domains where trusted parties need reliable\ntools to detect misuse. More broadly, we distill design principles for\nincentive-aligned, domain-specific watermarking and outline future research\ndirections. Our position is that the practical adoption of LLM watermarking\nrequires aligning stakeholder incentives in targeted application domains and\nfostering active community engagement."}
{"id": "2510.18471", "categories": ["cs.SE", "cs.AI", "cs.CL"], "pdf": "https://arxiv.org/pdf/2510.18471", "abs": "https://arxiv.org/abs/2510.18471", "authors": ["Xue Jiang", "Yihong Dong", "Mengyang Liu", "Hongyi Deng", "Tian Wang", "Yongding Tao", "Rongyu Cao", "Binhua Li", "Zhi Jin", "Wenpin Jiao", "Fei Huang", "Yongbin Li", "Ge Li"], "title": "CodeRL+: Improving Code Generation via Reinforcement with Execution Semantics Alignment", "comment": null, "summary": "While Large Language Models (LLMs) excel at code generation by learning from\nvast code corpora, a fundamental semantic gap remains between their training on\ntextual patterns and the goal of functional correctness, which is governed by\nformal execution semantics. Reinforcement Learning with Verifiable Rewards\n(RLVR) approaches attempt to bridge this gap using outcome rewards from\nexecuting test cases. However, solely relying on binary pass/fail signals is\ninefficient for establishing a well-aligned connection between the textual\nrepresentation of code and its execution semantics, especially for subtle\nlogical errors within the code. In this paper, we propose CodeRL+, a novel\napproach that integrates execution semantics alignment into the RLVR training\npipeline for code generation. CodeRL+ enables the model to infer variable-level\nexecution trajectory, providing a direct learning signal of execution\nsemantics. CodeRL+ can construct execution semantics alignment directly using\nexisting on-policy rollouts and integrates seamlessly with various RL\nalgorithms. Extensive experiments demonstrate that CodeRL+ outperforms\npost-training baselines (including RLVR and Distillation), achieving a 4.6%\naverage relative improvement in pass@1. CodeRL+ generalizes effectively to\nother coding tasks, yielding 15.5% and 4.4% higher accuracy on code-reasoning\nand test-output-generation benchmarks, respectively. CodeRL+ shows strong\napplicability across diverse RL algorithms and LLMs. Furthermore, probe\nanalyses provide compelling evidence that CodeRL+ strengthens the alignment\nbetween code's textual representations and its underlying execution semantics."}
{"id": "2510.18394", "categories": ["cs.CR", "cs.IR", "cs.NI", "cs.SI"], "pdf": "https://arxiv.org/pdf/2510.18394", "abs": "https://arxiv.org/abs/2510.18394", "authors": ["Yong Zhang", "Nishanth Sastry"], "title": "Censorship Chokepoints: New Battlegrounds for Regional Surveillance, Censorship and Influence on the Internet", "comment": "15 pages, 2 figures", "summary": "Undoubtedly, the Internet has become one of the most important conduits to\ninformation for the general public. Nonetheless, Internet access can be and has\nbeen limited systematically or blocked completely during political events in\nnumerous countries and regions by various censorship mechanisms. Depending on\nwhere the core filtering component is situated, censorship techniques have been\nclassified as client-based, server-based, or network-based. However, as the\nInternet evolves rapidly, new and sophisticated censorship techniques have\nemerged, which involve techniques that cut across locations and involve new\nforms of hurdles to information access. We argue that modern censorship can be\nbetter understood through a new lens that we term chokepoints, which identifies\nbottlenecks in the content production or delivery cycle where efficient new\nforms of large-scale client-side surveillance and filtering mechanisms have\nemerged."}
{"id": "2510.18509", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18509", "abs": "https://arxiv.org/abs/2510.18509", "authors": ["Valtteri Ala-Salmi", "Zeeshan Rasheed", "Abdul Malik Sami", "Muhammad Waseem", "Kai-Kristian Kemell", "Jussi Rasku", "Mika Saari", "Pekka Abrahamsson"], "title": "VAPU: System for Autonomous Legacy Code Modernization", "comment": "Table 13, figure 2", "summary": "In this study, we present a solution for the modernization of legacy\napplications, an area of code generation where LLM-based multi-agent systems\nare proving essential for complex multi-phased tasks. Legacy applications often\ncontain deprecated components that create compatibility, security, and\nreliability risks, but high resource costs make companies hesitate to update.\nWe take a step forward to integrate an LLM-based multi-agent system as part of\na legacy web application update to provide a cost-effective solution to update\nlegacy applications autonomously. We propose a multi-agent system named a\nVerifying Agent Pipeline Updater (VAPU), which is designed to update code files\nin phases while simulating different roles in a software development team. In\nour previous study, we evaluated the system for legacy version updates by using\nsix legacy web application view files by resulting errors and accomplished\nrequirements. This study extends the previous evaluation of a multi-agent\npipeline system by extending the evaluation of VAPU from a single LLM to five\nLLMs and using the temperature parameter in both 0 to 1 settings. Additionally,\nwe tested the system with 20 open-source Python GitHub projects. The results of\nthe evaluation were compared to Zero-Shot Learning (ZSL) and One-Shot Learning\n(OSL) prompts. The extended evaluation of VAPU showed that particularly in a\nlow-temperature VAPU can get similar level of error count compared to the\nZSL/OSL prompts but with a higher level of fulfilled requirements, depending on\nthe LLM. VAPU showed up to 22.5% increase in the succeeding Python file update\nrequirements compared to ZSL/OSL prompts. The study indicates that an LLM-based\nmulti-agent system is a capable solution to update components of a legacy\napplication autonomously."}
{"id": "2510.18438", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.18438", "abs": "https://arxiv.org/abs/2510.18438", "authors": ["Yixuan Liu", "Xinlei Li", "Yi Li"], "title": "DeepTx: Real-Time Transaction Risk Analysis via Multi-Modal Features and LLM Reasoning", "comment": "Accepted to ASE'25", "summary": "Phishing attacks in Web3 ecosystems are increasingly sophisticated,\nexploiting deceptive contract logic, malicious frontend scripts, and token\napproval patterns. We present DeepTx, a real-time transaction analysis system\nthat detects such threats before user confirmation. DeepTx simulates pending\ntransactions, extracts behavior, context, and UI features, and uses multiple\nlarge language models (LLMs) to reason about transaction intent. A consensus\nmechanism with self-reflection ensures robust and explainable decisions.\nEvaluated on our phishing dataset, DeepTx achieves high precision and recall\n(demo video: https://youtu.be/4OfK9KCEXUM)."}
{"id": "2510.18519", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18519", "abs": "https://arxiv.org/abs/2510.18519", "authors": ["Md Arafat Hossain", "Jun Han", "Muhammad Ashad Kabir", "Steve Versteeg", "Jean-Guy Schneider", "Jiaojiao Jiang"], "title": "Mining Service Behavior for Stateful Service Emulation", "comment": "19 pages", "summary": "Enterprise software systems are increasingly integrating with diverse\nservices to meet expanding business demands. Testing these highly\ninterconnected systems presents a challenge due to the need for access to the\nconnected services. Service virtualization has emerged as a widely used\ntechnique to derive service models from recorded interactions, for service\nresponse generation during system testing. Various methods have been proposed\nto emulate actual service behavior based on these interactions, but most fail\nto account for the service's state, which reduces the accuracy of service\nemulation and the realism of the testing environment, especially when dealing\nwith stateful services. This paper proposes an approach to deriving service\nmodels from service interactions, which enhance the accuracy of response\ngeneration by considering service state. This is achieved by uncovering\ncontextual dependencies among interaction messages and analyzing the\nrelationships between message data values. The approach is evaluated using\ninteraction traces collected from both stateful and stateless services, and the\nresults reveal notable enhancements in accuracy and efficiency over existing\napproaches in service response generation."}
{"id": "2510.18465", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.18465", "abs": "https://arxiv.org/abs/2510.18465", "authors": ["Spencer King", "Irfan Ozen", "Karthika Subramani", "Saranyan Senthivel", "Phani Vadrevu", "Roberto Perdisci"], "title": "PP3D: An In-Browser Vision-Based Defense Against Web Behavior Manipulation Attacks", "comment": "17 pages total (including references and appendices), 5 figures, 8\n  tables, and 1 algorithm. To appear in the Proceedings of the 41st Annual\n  Computer Security Applications Conference (ACSAC 2025). Camera-ready version\n  formatted in IEEE two-column style. Code, pretrained models, and dataset\n  available at: https://github.com/NISLabUGA/PixelPatrol3D_Code", "summary": "Web-based behavior-manipulation attacks (BMAs) - such as scareware, fake\nsoftware downloads, tech support scams, etc. - are a class of social\nengineering (SE) attacks that exploit human decision-making vulnerabilities.\nThese attacks remain under-studied compared to other attacks such as\ninformation harvesting attacks (e.g., phishing) or malware infections. Prior\ntechnical work has primarily focused on measuring BMAs, offering little in the\nway of generic defenses.\n  To address this gap, we introduce Pixel Patrol 3D (PP3D), the first\nend-to-end browser framework for discovering, detecting, and defending against\nbehavior-manipulating SE attacks in real time. PP3D consists of a visual\ndetection model implemented within a browser extension, which deploys the model\nclient-side to protect users across desktop and mobile devices while preserving\nprivacy.\n  Our evaluation shows that PP3D can achieve above 99% detection rate at 1%\nfalse positives, while maintaining good latency and overhead performance across\ndevices. Even when faced with new BMA samples collected months after training\nthe detection model, our defense system can still achieve above 97% detection\nrate at 1% false positives. These results demonstrate that our framework offers\na practical, effective, and generalizable defense against a broad and evolving\nclass of web behavior-manipulation attacks."}
{"id": "2510.18534", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18534", "abs": "https://arxiv.org/abs/2510.18534", "authors": ["Uraz Odyurt", "Richard Loendersloot", "Tiedo Tinga"], "title": "Demonstrators for Industrial Cyber-Physical System Research: A Requirements Hierarchy Driven by Software-Intensive Design", "comment": null, "summary": "One of the challenges apparent in the organisation of research projects is\nthe uncertainties around the subject of demonstrators. A precise and detailed\nelicitation of the coverage for project demonstrators is often an afterthought\nand not sufficiently detailed during proposal writing. This practice leads to\ncontinuous confusion and a mismatch between targeted and achievable\ndemonstration of results, hindering progress. The reliance on the TRL scale as\na loose descriptor does not help either. We propose a demonstrator requirements\nelaboration framework aiming to evaluate the feasibility of targeted\ndemonstrations, making realistic adjustments, and assist in describing\nrequirements. In doing so, we define 5 hierarchical levels of demonstration,\nclearly connected to expectations, e.g., work package interaction, and also\nconnected to the project's industrial use-cases. The considered application\nscope in this paper is the domain of software-intensive systems and industrial\ncyber-physical systems. A complete validation is not accessible, as it would\nrequire application of our framework at the start of a project and observing\nthe results at the end, taking 4-5 years. Nonetheless, we have applied it to\ntwo research projects from our portfolio, one at the early and another at the\nfinal stages, revealing its effectiveness."}
{"id": "2510.18484", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.18484", "abs": "https://arxiv.org/abs/2510.18484", "authors": ["Oleksandr Adamov", "Anders Carlsson"], "title": "The Attribution Story of WhisperGate: An Academic Perspective", "comment": "Virus Bulletin Conference 2025", "summary": "This paper explores the challenges of cyberattack attribution, specifically\nAPTs, applying the case study approach for the WhisperGate cyber operation of\nJanuary 2022 executed by the Russian military intelligence service (GRU) and\ntargeting Ukrainian government entities. The study provides a detailed review\nof the threat actor identifiers and taxonomies used by leading cybersecurity\nvendors, focusing on the evolving attribution from Microsoft, ESET, and\nCrowdStrike researchers. Once the attribution to Ember Bear (GRU Unit 29155) is\nestablished through technical and intelligence reports, we use both traditional\nmachine learning classifiers and a large language model (ChatGPT) to analyze\nthe indicators of compromise (IoCs), tactics, and techniques to statistically\nand semantically attribute the WhisperGate attack. Our findings reveal\noverlapping indicators with the Sandworm group (GRU Unit 74455) but also strong\nevidence pointing to Ember Bear, especially when the LLM is fine-tuned or\ncontextually augmented with additional intelligence. Thus, showing how AI/GenAI\nwith proper fine-tuning are capable of solving the attribution challenge."}
{"id": "2510.18557", "categories": ["cs.SE", "quant-ph"], "pdf": "https://arxiv.org/pdf/2510.18557", "abs": "https://arxiv.org/abs/2510.18557", "authors": ["Jianjun Zhao"], "title": "When Abstraction Breaks Physics: Rethinking Modular Design in Quantum Software", "comment": "Accepted at the NIER track of the 40th IEEE/ACM International\n  Conference on Automated Software Engineering (ASE 2025)", "summary": "Abstraction is a fundamental principle in classical software engineering,\nwhich enables modularity, reusability, and scalability. However, quantum\nprograms adhere to fundamentally different semantics, such as unitarity,\nentanglement, the no-cloning theorem, and the destructive nature of\nmeasurement, which introduce challenges to the safe use of classical\nabstraction mechanisms. This paper identifies a fundamental conflict in quantum\nsoftware engineering: abstraction practices that are syntactically valid may\nviolate the physical constraints of quantum computation. We present three\nclasses of failure cases where naive abstraction breaks quantum semantics and\npropose a set of design principles for physically sound abstraction mechanisms.\nWe further propose research directions, including quantum-specific type\nsystems, effect annotations, and contract-based module design. Our goal is to\ninitiate a systematic rethinking of abstraction in quantum software\nengineering, based on quantum semantics and considering engineering\nscalability."}
{"id": "2510.18493", "categories": ["cs.CR", "cs.AI", "cs.HC", "68M25", "I.2.7"], "pdf": "https://arxiv.org/pdf/2510.18493", "abs": "https://arxiv.org/abs/2510.18493", "authors": ["Kangzhong Wang", "Zitong Shen", "Youqian Zhang", "Michael MK Cheung", "Xiapu Luo", "Grace Ngai", "Eugene Yujun Fu"], "title": "One Size Fits All? A Modular Adaptive Sanitization Kit (MASK) for Customizable Privacy-Preserving Phone Scam Detection", "comment": "9 pages", "summary": "Phone scams remain a pervasive threat to both personal safety and financial\nsecurity worldwide. Recent advances in large language models (LLMs) have\ndemonstrated strong potential in detecting fraudulent behavior by analyzing\ntranscribed phone conversations. However, these capabilities introduce notable\nprivacy risks, as such conversations frequently contain sensitive personal\ninformation that may be exposed to third-party service providers during\nprocessing. In this work, we explore how to harness LLMs for phone scam\ndetection while preserving user privacy. We propose MASK (Modular Adaptive\nSanitization Kit), a trainable and extensible framework that enables dynamic\nprivacy adjustment based on individual preferences. MASK provides a pluggable\narchitecture that accommodates diverse sanitization methods - from traditional\nkeyword-based techniques for high-privacy users to sophisticated neural\napproaches for those prioritizing accuracy. We also discuss potential modeling\napproaches and loss function designs for future development, enabling the\ncreation of truly personalized, privacy-aware LLM-based detection systems that\nbalance user trust and detection effectiveness, even beyond phone scam context."}
{"id": "2510.18560", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.18560", "abs": "https://arxiv.org/abs/2510.18560", "authors": ["Chunyang Li", "Yilun Zheng", "Xinting Huang", "Tianqing Fang", "Jiahao Xu", "Yangqiu Song", "Lihui Chen", "Han Hu"], "title": "WebDevJudge: Evaluating (M)LLMs as Critiques for Web Development Quality", "comment": null, "summary": "The paradigm of LLM-as-a-judge is emerging as a scalable and efficient\nalternative to human evaluation, demonstrating strong performance on\nwell-defined tasks. However, its reliability in open-ended tasks with dynamic\nenvironments and complex interactions remains unexplored. To bridge the gap, we\nintroduce WebDevJudge, a systematic benchmark for assessing LLM-as-a-judge\nperformance in web development, with support for both non-interactive\nevaluation based on static observations and continuous interactive evaluation\nwith a dynamic web environment. WebDevJudge comprises human preference labels\nover paired web implementations, annotated with structured and query-grounded\nrubrics to ensure high-quality ground truth. Using this benchmark, we\ncomprehensively evaluate various evaluators, including LLMs, MLLMs, and agentic\nworkflows. We systematically investigate the impact of different paradigms and\nguidance mechanisms. Our experiments reveal a significant gap between LLM\njudges and human experts. In-depth analysis indicates this gap stems from\nfundamental model limitations, including failures in recognizing functional\nequivalence, verifying task feasibility, and mitigating bias. Overall,\nWebDevJudge presents a significant challenge to LLM-as-a-judge, offering\ninsights to guide future research toward developing more reliable and capable\nautomated evaluators for complicated scenarios. Code and data are available at\nhttps://github.com/lcy2723/WebDevJudge."}
{"id": "2510.18508", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.18508", "abs": "https://arxiv.org/abs/2510.18508", "authors": ["Osama Al Haddad", "Muhammad Ikram", "Ejaz Ahmed", "Young Lee"], "title": "Prompting the Priorities: A First Look at Evaluating LLMs for Vulnerability Triage and Prioritization", "comment": "19 pages, 8 figures", "summary": "Security analysts face increasing pressure to triage large and complex\nvulnerability backlogs. Large Language Models (LLMs) offer a potential aid by\nautomating parts of the interpretation process. We evaluate four models\n(ChatGPT, Claude, Gemini, and DeepSeek) across twelve prompting techniques to\ninterpret semi-structured and unstructured vulnerability information. As a\nconcrete use case, we test each model's ability to predict decision points in\nthe Stakeholder-Specific Vulnerability Categorization (SSVC) framework:\nExploitation, Automatable, Technical Impact, and Mission and Wellbeing.\n  Using 384 real-world vulnerabilities from the VulZoo dataset, we issued more\nthan 165,000 queries to assess performance under prompting styles including\none-shot, few-shot, and chain-of-thought. We report F1 scores for each SSVC\ndecision point and Cohen's kappa (weighted and unweighted) for the final SSVC\ndecision outcomes. Gemini consistently ranked highest, leading on three of four\ndecision points and yielding the most correct recommendations. Prompting with\nexemplars generally improved accuracy, although all models struggled on some\ndecision points. Only DeepSeek achieved fair agreement under weighted metrics,\nand all models tended to over-predict risk.\n  Overall, current LLMs do not replace expert judgment. However, specific LLM\nand prompt combinations show moderate effectiveness for targeted SSVC\ndecisions. When applied with care, LLMs can support vulnerability\nprioritization workflows and help security teams respond more efficiently to\nemerging threats."}
{"id": "2510.18590", "categories": ["cs.SE", "cs.HC", "D.2.2; D.2.11; K.6.3"], "pdf": "https://arxiv.org/pdf/2510.18590", "abs": "https://arxiv.org/abs/2510.18590", "authors": ["Antonio Lamanna"], "title": "A Structured Evaluation Framework for Low-Code Platform Selection: A Multi-Criteria Decision Model for Enterprise Digital Transformation", "comment": "15 pages, 1 figure. PDF-only submission (XeLaTeX)", "summary": "The rapid adoption of Low-Code Development Platforms (LCDPs) has created a\ncritical need for systematic evaluation methodologies that enable organizations\nto make informed platform selection decisions. This paper presents a\ncomprehensive evaluation framework based on five key criteria: Business Process\nOrchestration, UI/UX Customization, Integration and Interoperability,\nGovernance and Security, and AI-Enhanced Automation. We propose a weighted\nscoring model that allows organizations to quantitatively assess and compare\ndifferent low-code platforms based on their specific requirements and strategic\npriorities. The framework addresses the gap between marketing-driven platform\ncomparisons and rigorous, context-specific evaluation methodologies. Through\nempirical validation in enterprise environments, we demonstrate how this\nstructured approach can significantly improve decision-making outcomes and\nreduce the risk of platform lock-in or inadequate solution selection."}
{"id": "2510.18553", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.18553", "abs": "https://arxiv.org/abs/2510.18553", "authors": ["Abdullah Al-Khatib", "Albert Gergus", "Muneeb Ul Hassan", "Abdelmajid Khelil", "Klaus Mossner", "Holger Timinger"], "title": "Deep Q-Learning Assisted Bandwidth Reservation for Multi-Operator Time-Sensitive Vehicular Networking", "comment": "14 pages, 15 figures", "summary": "Very few available individual bandwidth reservation schemes provide efficient\nand cost-effective bandwidth reservation that is required for safety-critical\nand time-sensitive vehicular networked applications. These schemes allow\nvehicles to make reservation requests for the required resources. Accordingly,\na Mobile Network Operator (MNO) can allocate and guarantee bandwidth resources\nbased on these requests. However, due to uncertainty in future reservation time\nand bandwidth costs, the design of an optimized reservation strategy is\nchallenging. In this article, we propose a novel multi-objective bandwidth\nreservation update approach with an optimal strategy based on Double Deep\nQ-Network (DDQN). The key design objectives are to minimize the reservation\ncost with multiple MNOs and to ensure reliable resource provisioning in\nuncertain situations by solving scenarios such as underbooked and overbooked\nreservations along the driving path. The enhancements and advantages of our\nproposed strategy have been demonstrated through extensive experimental results\nwhen compared to other methods like greedy update or other deep reinforcement\nlearning approaches. Our strategy demonstrates a 40% reduction in bandwidth\ncosts across all investigated scenarios and simultaneously resolves uncertain\nsituations in a cost-effective manner."}
{"id": "2510.18596", "categories": ["cs.SE", "cs.CV"], "pdf": "https://arxiv.org/pdf/2510.18596", "abs": "https://arxiv.org/abs/2510.18596", "authors": ["Haojia Lin", "Xiaoyu Tan", "Yulei Qin", "Zihan Xu", "Yuchen Shi", "Zongyi Li", "Gang Li", "Shaofei Cai", "Siqi Cai", "Chaoyou Fu", "Ke Li", "Xing Sun"], "title": "CUARewardBench: A Benchmark for Evaluating Reward Models on Computer-using Agent", "comment": "24 pages, 6 figures", "summary": "Computer-using agents (CUAs) enable task completion through natural\ninteraction with operating systems and software interfaces. While script-based\nverifiers are widely adopted for evaluation, they suffer from limited\nscalability and inability to provide step-wise assessment. Reward models offer\npromising alternatives, but their effectiveness on CUA evaluation remains\nlargely underexplored. To address this gap, we present CUARewardBench,\ncomprising four key contributions: (1) First-ever Comprehensive CUA Reward\nBenchmark: We introduce the first benchmark for evaluating both outcome reward\nmodels (ORM) and process reward models (PRM) on CUA tasks, enabling systematic\nassessment across trajectory-level and step-level evaluation. (2) Diverse,\nPractical and Reliable Dataset: CUARewardBench encompasses trajectories from 10\nsoftware categories and 7 agent architectures with varying performance levels\n(25.9%-50.8% success rates). All trajectories are expertly annotated through\ncarefully designed protocols, with rigorous quality control to ensure\nreliability and practical applicability. (3) Comprehensive Analysis and\nInsights: Through extensive experiments across 7 vision-language models and 3\nprompt templates, we reveal critical limitations of current CUA RMs, including\ninsufficient visual reasoning capabilities, knowledge deficiencies, and the\nsuperiority of general VLMs over specialized CUA models for reward evaluation.\n(4) Unanimous Prompt Ensemble (UPE): Based on the insights from our\ncomprehensive analysis, we propose UPE, a novel ensemble method that\nsignificantly enhances reward model reliability through strict unanimous voting\nand strategic prompt-template configurations. UPE achieves 89.8% precision and\n93.3% NPV for ORM, and 81.7% precision and 85.1% NPV for PRM, substantially\noutperforming single VLMs and traditional ensemble approaches."}
{"id": "2510.18563", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.18563", "abs": "https://arxiv.org/abs/2510.18563", "authors": ["Zijie Xu", "Minfeng Qi", "Shiqing Wu", "Lefeng Zhang", "Qiwen Wei", "Han He", "Ningran Li"], "title": "The Trust Paradox in LLM-Based Multi-Agent Systems: When Collaboration Becomes a Security Vulnerability", "comment": null, "summary": "Multi-agent systems powered by large language models are advancing rapidly,\nyet the tension between mutual trust and security remains underexplored. We\nintroduce and empirically validate the Trust-Vulnerability Paradox (TVP):\nincreasing inter-agent trust to enhance coordination simultaneously expands\nrisks of over-exposure and over-authorization. To investigate this paradox, we\nconstruct a scenario-game dataset spanning 3 macro scenes and 19 sub-scenes,\nand run extensive closed-loop interactions with trust explicitly parameterized.\nUsing Minimum Necessary Information (MNI) as the safety baseline, we propose\ntwo unified metrics: Over-Exposure Rate (OER) to detect boundary violations,\nand Authorization Drift (AD) to capture sensitivity to trust levels. Results\nacross multiple model backends and orchestration frameworks reveal consistent\ntrends: higher trust improves task success but also heightens exposure risks,\nwith heterogeneous trust-to-risk mappings across systems. We further examine\ndefenses such as Sensitive Information Repartitioning and Guardian-Agent\nenablement, both of which reduce OER and attenuate AD. Overall, this study\nformalizes TVP, establishes reproducible baselines with unified metrics, and\ndemonstrates that trust must be modeled and scheduled as a first-class security\nvariable in multi-agent system design."}
{"id": "2510.18711", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18711", "abs": "https://arxiv.org/abs/2510.18711", "authors": ["Bertha Ngereja", "Magne Jørgensen"], "title": "An overview of the use of alternative funding and contracting approaches relevant for agile software development: A systematic review of real-life experiences", "comment": "48 pages, 6 tables, 6 figures and 3 appendices", "summary": "Agile software development emphasizes flexibility and iterative processes,\nwhich may conflict with the more linear, rigid, and time-consuming traditional\nfunding and contracting approaches. This review synthesizes real-life\nexperiences of using alternative (non-traditional) contracting and funding\napproaches. The focus is on identifying approaches that align better with agile\nprinciples and understanding the motivations, benefits, and challenges these\nalternatives present. A systematic literature review was conducted in SCOPUS,\nWeb of Science, and Google Scholar, where we identified 38 relevant\npeer-reviewed empirical studies from private and public sector contexts. Four\nalternative funding and four alternative contracting approaches were\nidentified. Organizations were motivated to adopt these alternative approaches\nbecause traditional approaches often proved too rigid, conflicted with agile\nprinciples, hindered effective client-contractor collaboration, and limited\nprofitability. The benefits of these alternatives included higher client\nsatisfaction, reduced contractor risk, and more efficient resource utilization.\nAdopting alternative funding and contracting approaches may promote flexibility\nand efficiency in agile projects but also presents cultural and structural\nchallenges, increases the risk of scope creep and analysis paralysis, and\nrequires additional effort in terms of time and resources. The context of the\norganization matters highly in selecting a suitable approach, such as the\norganizational readiness in terms of its leaders, people, and systems. Thus,\ninstead of wholly adopting alternative approaches and introducing changes\nabruptly, organizations may benefit from starting with hybrid approaches that\nbalance flexibility and control and progressively transition to fully flexible\napproaches tailored to their needs"}
{"id": "2510.18568", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.18568", "abs": "https://arxiv.org/abs/2510.18568", "authors": ["Behnam Rezaei Bezanjani", "Seyyed Hamid Ghafouri", "Reza Gholamrezaei"], "title": "Privacy-Preserving Healthcare Data in IoT: A Synergistic Approach with Deep Learning and Blockchain", "comment": "30 pages", "summary": "The integration of Internet of Things (IoT) devices in healthcare has\nrevolutionized patient care by enabling real-time monitoring, personalized\ntreatments, and efficient data management. However, this technological\nadvancement introduces significant security risks, particularly concerning the\nconfidentiality, integrity, and availability of sensitive medical data.\nTraditional security measures are often insufficient to address the unique\nchallenges posed by IoT environments, such as heterogeneity, resource\nconstraints, and the need for real-time processing. To tackle these challenges,\nwe propose a comprehensive three-phase security framework designed to enhance\nthe security and reliability of IoT-enabled healthcare systems. In the first\nphase, the framework assesses the reliability of IoT devices using a\nreputation-based trust estimation mechanism, which combines device behavior\nanalytics with off-chain data storage to ensure scalability. The second phase\nintegrates blockchain technology with a lightweight proof-of-work mechanism,\nensuring data immutability, secure communication, and resistance to\nunauthorized access. The third phase employs a lightweight Long Short-Term\nMemory (LSTM) model for anomaly detection and classification, enabling\nreal-time identification of cyber threats. Simulation results demonstrate that\nthe proposed framework outperforms existing methods, achieving a 2% increase in\nprecision, accuracy, and recall, a 5% higher attack detection rate, and a 3%\nreduction in false alarm rate. These improvements highlight the framework's\nability to address critical security concerns while maintaining scalability and\nreal-time performance."}
{"id": "2510.18719", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.18719", "abs": "https://arxiv.org/abs/2510.18719", "authors": ["Chengwen Du", "Tao Chen"], "title": "Causally Perturbed Fairness Testing", "comment": "accepted by TOSEM", "summary": "To mitigate unfair and unethical discrimination over sensitive features\n(e.g., gender, age, or race), fairness testing plays an integral role in\nengineering systems that leverage AI models to handle tabular data. A key\nchallenge therein is how to effectively reveal fairness bugs under an\nintractable sample size using perturbation. Much current work has been focusing\non designing the test sample generators, ignoring the valuable knowledge about\ndata characteristics that can help guide the perturbation and hence limiting\ntheir full potential. In this paper, we seek to bridge such a gap by proposing\na generic framework of causally perturbed fairness testing, dubbed CausalFT.\nThrough causal inference, the key idea of CausalFT is to extract the most\ndirectly and causally relevant non-sensitive feature to its sensitive\ncounterpart, which can jointly influence the prediction of the label. Such a\ncausal relationship is then seamlessly injected into the perturbation to guide\na test sample generator. Unlike existing generator-level work, CausalFT serves\nas a higher-level framework that can be paired with diverse base generators.\nExtensive experiments on 1296 cases confirm that CausalFT can considerably\nimprove arbitrary base generators in revealing fairness bugs over 93% of the\ncases with acceptable extra runtime overhead. Compared with a state-of-the-art\napproach that ranks the non-sensitive features solely based on correlation,\nCausalFT performs significantly better on 64% cases while being much more\nefficient. Further, CausalFT can better improve bias resilience in nearly all\ncases."}
{"id": "2510.18572", "categories": ["cs.CR", "cs.NI"], "pdf": "https://arxiv.org/pdf/2510.18572", "abs": "https://arxiv.org/abs/2510.18572", "authors": ["Maynard Koch", "Florian Dolzmann", "Thomas C. Schmidt", "Matthias Wählisch"], "title": "Forward to Hell? On the Potentials of Misusing Transparent DNS Forwarders in Reflective Amplification Attacks", "comment": null, "summary": "The DNS infrastructure is infamous for facilitating reflective amplification\nattacks. Various countermeasures such as server shielding, access control, rate\nlimiting, and protocol restrictions have been implemented. Still, the threat\nremains throughout the deployment of DNS servers. In this paper, we report on\nand evaluate the often unnoticed threat that derives from transparent DNS\nforwarders, a widely deployed, incompletely functional set of DNS components.\nTransparent DNS forwarders transfer DNS requests without rebuilding packets\nwith correct source addresses. As such, transparent forwarders feed DNS\nrequests into (mainly powerful and anycasted) open recursive resolvers, which\nthereby can be misused to participate unwillingly in distributed reflective\namplification attacks. We show how transparent forwarders raise severe threats\nto the Internet infrastructure. They easily circumvent rate limiting and\nachieve an additional, scalable impact via the DNS anycast infrastructure. We\nempirically verify this scaling behavior up to a factor of 14. Transparent\nforwarders can also assist in bypassing firewall rules that protect recursive\nresolvers, making these shielded infrastructure entities part of the global DNS\nattack surface."}
{"id": "2510.18787", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18787", "abs": "https://arxiv.org/abs/2510.18787", "authors": ["Quim Motger", "Carlota Catot", "Xavier Franch"], "title": "ShaRE your Data! Characterizing Datasets for LLM-based Requirements Engineering", "comment": "Under review", "summary": "[Context] Large Language Models (LLMs) rely on domain-specific datasets to\nachieve robust performance across training and inference stages. However, in\nRequirements Engineering (RE), data scarcity remains a persistent limitation\nreported in surveys and mapping studies. [Question/Problem] Although there are\nmultiple datasets supporting LLM-based RE tasks (LLM4RE), they are fragmented\nand poorly characterized, limiting reuse and comparability. This research\naddresses the limited visibility and characterization of datasets used in\nLLM4RE. We investigate which public datasets are employed, how they can be\nsystematically characterized, and which RE tasks and dataset descriptors remain\nunder-represented. [Ideas/Results] To address this, we conduct a systematic\nmapping study to identify and analyse datasets used in LLM4RE research. A total\nof 62 publicly available datasets are referenced across 43 primary studies.\nEach dataset is characterized along descriptors such as artifact type,\ngranularity, RE stage, task, domain, and language. Preliminary findings show\nmultiple research gaps, including limited coverage for elicitation tasks,\nscarce datasets for management activities beyond traceability, and limited\nmultilingual availability. [Contribution] This research preview offers a public\ncatalogue and structured characterization scheme to support dataset selection,\ncomparison, and reuse in LLM4RE research. Future work will extend the scope to\ngrey literature, as well as integration with open dataset and benchmark\nrepositories."}
{"id": "2510.18585", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.18585", "abs": "https://arxiv.org/abs/2510.18585", "authors": ["Fouad Trad", "Ali Chehab"], "title": "CLASP: Cost-Optimized LLM-based Agentic System for Phishing Detection", "comment": "Accepted in the 5th International Conference on Electrical, Computer,\n  and Energy Technologies (ICECET2025)", "summary": "Phishing websites remain a significant cybersecurity threat, necessitating\naccurate and cost-effective detection mechanisms. In this paper, we present\nCLASP, a novel system that effectively identifies phishing websites by\nleveraging multiple intelligent agents, built using large language models\n(LLMs), to analyze different aspects of a web resource. The system processes\nURLs or QR codes, employing specialized LLM-based agents that evaluate the URL\nstructure, webpage screenshot, and HTML content to predict potential phishing\nthreats. To optimize performance while minimizing operational costs, we\nexperimented with multiple combination strategies for agent-based analysis,\nultimately designing a strategic combination that ensures the per-website\nevaluation expense remains minimal without compromising detection accuracy. We\ntested various LLMs, including Gemini 1.5 Flash and GPT-4o mini, to build these\nagents and found that Gemini 1.5 Flash achieved the best performance with an F1\nscore of 83.01% on a newly curated dataset. Also, the system maintained an\naverage processing time of 2.78 seconds per website and an API cost of around\n$3.18 per 1,000 websites. Moreover, CLASP surpasses leading previous solutions,\nachieving over 40% higher recall and a 20% improvement in F1 score for phishing\ndetection on the collected dataset. To support further research, we have made\nour dataset publicly available, supporting the development of more advanced\nphishing detection systems."}
{"id": "2510.18799", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18799", "abs": "https://arxiv.org/abs/2510.18799", "authors": ["Max Tiessler", "Quim Motger"], "title": "FeClustRE: Hierarchical Clustering and Semantic Tagging of App Features from User Reviews", "comment": "Under review", "summary": "[Context and motivation.] Extracting features from mobile app reviews is\nincreasingly important for multiple requirements engineering (RE) tasks.\nHowever, existing methods struggle to turn noisy, ambiguous feedback into\ninterpretable insights. [Question/problem.] Syntactic approaches lack semantic\ndepth, while large language models (LLMs) often miss fine-grained features or\nfail to structure them coherently. In addition, existing methods output flat\nlists of features without semantic organization, limiting interpretation and\ncomparability. Consequently, current feature extraction approaches do not\nprovide structured, meaningful representations of app features. As a result,\npractitioners face fragmented information that hinder requirement analysis,\nprioritization, and cross-app comparison, among other use cases. [Principal\nideas/results.] In this context, we propose FeClustRE, a framework integrating\nhybrid feature extraction, hierarchical clustering with auto-tuning and\nLLM-based semantic labelling. FeClustRE combines syntactic parsing with LLM\nenrichment, organizes features into clusters, and automatically generates\nmeaningful taxonomy labels. We evaluate FeClustRE on public benchmarks for\nextraction correctness and on a sample study of generative AI assistant app\nreviews for clustering quality, semantic coherence, and interpretability.\n[Contribution.] Overall, FeClustRE delivers (1) a hybrid framework for feature\nextraction and taxonomy generation, (2) an auto-tuning mechanism with a\ncomprehensive evaluation methodology, and (3) open-source and replicable\nimplementation. These contributions bridge user feedback and feature\nunderstanding, enabling deeper insights into current and emerging requirements."}
{"id": "2510.18601", "categories": ["cs.CR", "cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18601", "abs": "https://arxiv.org/abs/2510.18601", "authors": ["Marco Alecci", "Jordan Samhi", "Tegawendé F. Bissyandé", "Jacques Klein"], "title": "Evaluating Large Language Models in detecting Secrets in Android Apps", "comment": null, "summary": "Mobile apps often embed authentication secrets, such as API keys, tokens, and\nclient IDs, to integrate with cloud services. However, developers often\nhardcode these credentials into Android apps, exposing them to extraction\nthrough reverse engineering. Once compromised, adversaries can exploit secrets\nto access sensitive data, manipulate resources, or abuse APIs, resulting in\nsignificant security and financial risks. Existing detection approaches, such\nas regex-based analysis, static analysis, and machine learning, are effective\nfor identifying known patterns but are fundamentally limited: they require\nprior knowledge of credential structures, API signatures, or training data.\n  In this paper, we propose SecretLoc, an LLM-based approach for detecting\nhardcoded secrets in Android apps. SecretLoc goes beyond pattern matching; it\nleverages contextual and structural cues to identify secrets without relying on\npredefined patterns or labeled training sets. Using a benchmark dataset from\nthe literature, we demonstrate that SecretLoc detects secrets missed by regex-,\nstatic-, and ML-based methods, including previously unseen types of secrets. In\ntotal, we discovered 4828 secrets that were undetected by existing approaches,\ndiscovering more than 10 \"new\" types of secrets, such as OpenAI API keys,\nGitHub Access Tokens, RSA private keys, and JWT tokens, and more.\n  We further extend our analysis to newly crawled apps from Google Play, where\nwe uncovered and responsibly disclosed additional hardcoded secrets. Across a\nset of 5000 apps, we detected secrets in 2124 apps (42.5%), several of which\nwere confirmed and remediated by developers after we contacted them. Our\nresults reveal a dual-use risk: if analysts can uncover these secrets with\nLLMs, so can attackers. This underscores the urgent need for proactive secret\nmanagement and stronger mitigation practices across the mobile ecosystem."}
{"id": "2510.18861", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18861", "abs": "https://arxiv.org/abs/2510.18861", "authors": ["Pedro Luís Fonseca", "Bruno Lima", "João Pascoal Faria"], "title": "Streamlining Acceptance Test Generation for Mobile Applications Through Large Language Models: An Industrial Case Study", "comment": null, "summary": "Mobile acceptance testing remains a bottleneck in modern software\ndevelopment, particularly for cross-platform mobile development using\nframeworks like Flutter. While developers increasingly rely on automated\ntesting tools, creating and maintaining acceptance test artifacts still demands\nsignificant manual effort. To help tackle this issue, we introduce AToMIC, an\nautomated framework leveraging specialized Large Language Models to generate\nGherkin scenarios, Page Objects, and executable UI test scripts directly from\nrequirements (JIRA tickets) and recent code changes. Applied to BMW's MyBMW\napp, covering 13 real-world issues in a 170+ screen codebase, AToMIC produced\nexecutable test artifacts in under five minutes per feature on standard\nhardware. The generated artifacts were of high quality: 93.3% of Gherkin\nscenarios were syntactically correct upon generation, 78.8% of PageObjects ran\nwithout manual edits, and 100% of generated UI tests executed successfully. In\na survey, all practitioners reported time savings (often a full developer-day\nper feature) and strong confidence in adopting the approach. These results\nconfirm AToMIC as a scalable, practical solution for streamlining acceptance\ntest creation and maintenance in industrial mobile projects."}
{"id": "2510.18612", "categories": ["cs.CR", "cs.AR"], "pdf": "https://arxiv.org/pdf/2510.18612", "abs": "https://arxiv.org/abs/2510.18612", "authors": ["Muhammad Hassan", "Maria Mushtaq", "Jaan Raik", "Tara Ghasempouri"], "title": "DRsam: Detection of Fault-Based Microarchitectural Side-Channel Attacks in RISC-V Using Statistical Preprocessing and Association Rule Mining", "comment": null, "summary": "RISC-V processors are becoming ubiquitous in critical applications, but their\nsusceptibility to microarchitectural side-channel attacks is a serious concern.\nDetection of microarchitectural attacks in RISC-V is an emerging research topic\nthat is relatively underexplored, compared to x86 and ARM. The first line of\nwork to detect flush+fault-based microarchitectural attacks in RISC-V leverages\nMachine Learning (ML) models, yet it leaves several practical aspects that need\nfurther investigation. To address overlooked issues, we leveraged gem5 and\npropose a new detection method combining statistical preprocessing and\nassociation rule mining having reconfiguration capabilities to generalize the\ndetection method for any microarchitectural attack. The performance comparison\nwith state-of-the-art reveals that the proposed detection method achieves up to\n5.15% increase in accuracy, 7% rise in precision, and 3.91% improvement in\nrecall under the cryptographic, computational, and memory-intensive workloads\nalongside its flexibility to detect new variant of flush+fault attack.\nMoreover, as the attack detection relies on association rules, their\nhuman-interpretable nature provides deep insight to understand\nmicroarchitectural behavior during the execution of attack and benign\napplications."}
{"id": "2510.18863", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18863", "abs": "https://arxiv.org/abs/2510.18863", "authors": ["Yanlin Wang", "Rongyi Ou", "Yanli Wang", "Mingwei Liu", "Jiachi Chen", "Ensheng Shi", "Xilin Liu", "Yuchi Ma", "Zibin Zheng"], "title": "EffiReasonTrans: RL-Optimized Reasoning for Code Translation", "comment": null, "summary": "Code translation is a crucial task in software development and maintenance.\nWhile recent advancements in large language models (LLMs) have improved\nautomated code translation accuracy, these gains often come at the cost of\nincreased inference latency, hindering real-world development workflows that\ninvolve human-in-the-loop inspection. To address this trade-off, we propose\nEffiReasonTrans, a training framework designed to improve translation accuracy\nwhile balancing inference latency. We first construct a high-quality\nreasoning-augmented dataset by prompting a stronger language model,\nDeepSeek-R1, to generate intermediate reasoning and target translations. Each\n(source code, reasoning, target code) triplet undergoes automated syntax and\nfunctionality checks to ensure reliability. Based on this dataset, we employ a\ntwo-stage training strategy: supervised fine-tuning on reasoning-augmented\nsamples, followed by reinforcement learning to further enhance accuracy and\nbalance inference latency. We evaluate EffiReasonTrans on six translation\npairs. Experimental results show that it consistently improves translation\naccuracy (up to +49.2% CA and +27.8% CodeBLEU compared to the base model) while\nreducing the number of generated tokens (up to -19.3%) and lowering inference\nlatency in most cases (up to -29.0%). Ablation studies further confirm the\ncomplementary benefits of the two-stage training framework. Additionally,\nEffiReasonTrans demonstrates improved translation accuracy when integrated into\nagent-based frameworks. Our code and data are available at\nhttps://github.com/DeepSoftwareAnalytics/EffiReasonTrans."}
{"id": "2510.18614", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.18614", "abs": "https://arxiv.org/abs/2510.18614", "authors": ["René Coignard", "Anton Rygin"], "title": "Qatsi: Stateless Secret Generation via Hierarchical Memory-Hard Key Derivation", "comment": null, "summary": "We present Qatsi, a hierarchical key derivation scheme using Argon2id that\ngenerates reproducible cryptographic secrets without persistent storage. The\nsystem eliminates vault-based attack surfaces by deriving all secrets\ndeterministically from a single high-entropy master secret and contextual\nlayers. Outputs achieve 103-312 bits of entropy through memory-hard derivation\n(64-128 MiB, 16-32 iterations) and provably uniform rejection sampling over\n7776-word mnemonics or 90-character passwords. We formalize the hierarchical\nconstruction, prove output uniformity, and quantify GPU attack costs: $2.4\n\\times 10^{16}$ years for 80-bit master secrets on single-GPU adversaries under\nParanoid parameters (128 MiB memory). The implementation in Rust provides\nautomatic memory zeroization, compile-time wordlist integrity verification, and\ncomprehensive test coverage. Reference benchmarks on Apple M1 Pro (2021)\ndemonstrate practical usability with 544 ms Standard mode and 2273 ms Paranoid\nmode single-layer derivations. Qatsi targets air-gapped systems and master\ncredential generation where stateless reproducibility outweighs rotation\nflexibility."}
{"id": "2510.17848", "categories": ["cs.CR", "cs.SE"], "pdf": "https://arxiv.org/pdf/2510.17848", "abs": "https://arxiv.org/abs/2510.17848", "authors": ["Dan Lin", "Yanli Ding", "Weipeng Zou", "Jiachi Chen", "Xiapu Luo", "Jiajing Wu", "Zibin Zheng"], "title": "RiskTagger: An LLM-based Agent for Automatic Annotation of Web3 Crypto Money Laundering Behaviors", "comment": "8 pages(not including appendix), 11 figures", "summary": "While the rapid growth of Web3 has driven the development of decentralized\nfinance, user anonymity and cross-chain asset flows make on-chain laundering\nbehaviors more covert and complex. In this context, constructing high-quality\nanti-money laundering(AML) datasets has become essential for risk-control\nsystems and on-chain forensic analysis, yet current practices still rely\nheavily on manual efforts with limited efficiency and coverage. In this paper,\nwe introduce RiskTagger, a large-language-model-based agent for the automatic\nannotation of crypto laundering behaviors in Web3. RiskTagger is designed to\nreplace or complement human annotators by addressing three key challenges:\nextracting clues from complex unstructured reports, reasoning over multichain\ntransaction paths, and producing auditor-friendly explanations. RiskTagger\nimplements an end-to-end multi-module agent, integrating a key-clue extractor,\na multichain fetcher with a laundering-behavior reasoner, and a data explainer,\nforming a data annotation pipeline. Experiments on the real case Bybit Hack\n(with the highest stolen asset value) demonstrate that RiskTagger achieves 100%\naccuracy in clue extraction, 84.1% consistency with expert judgment, and 90%\ncoverage in explanation generation. Overall, RiskTagger automates laundering\nbehavior annotation while improving transparency and scalability in AML\nresearch."}
{"id": "2510.18674", "categories": ["cs.CR", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.18674", "abs": "https://arxiv.org/abs/2510.18674", "authors": ["Alexander Nemecek", "Zebin Yun", "Zahra Rahmani", "Yaniv Harel", "Vipin Chaudhary", "Mahmood Sharif", "Erman Ayday"], "title": "Exploring Membership Inference Vulnerabilities in Clinical Large Language Models", "comment": "Accepted at the 1st IEEE Workshop on Healthcare and Medical Device\n  Security, Privacy, Resilience, and Trust (IEEE HMD-SPiRiT)", "summary": "As large language models (LLMs) become progressively more embedded in\nclinical decision-support, documentation, and patient-information systems,\nensuring their privacy and trustworthiness has emerged as an imperative\nchallenge for the healthcare sector. Fine-tuning LLMs on sensitive electronic\nhealth record (EHR) data improves domain alignment but also raises the risk of\nexposing patient information through model behaviors. In this work-in-progress,\nwe present an exploratory empirical study on membership inference\nvulnerabilities in clinical LLMs, focusing on whether adversaries can infer if\nspecific patient records were used during model training. Using a\nstate-of-the-art clinical question-answering model, Llemr, we evaluate both\ncanonical loss-based attacks and a domain-motivated paraphrasing-based\nperturbation strategy that more realistically reflects clinical adversarial\nconditions. Our preliminary findings reveal limited but measurable membership\nleakage, suggesting that current clinical LLMs provide partial resistance yet\nremain susceptible to subtle privacy risks that could undermine trust in\nclinical AI adoption. These results motivate continued development of\ncontext-aware, domain-specific privacy evaluations and defenses such as\ndifferential privacy fine-tuning and paraphrase-aware training, to strengthen\nthe security and trustworthiness of healthcare AI systems."}
{"id": "2510.17862", "categories": ["cs.CR", "cs.SE"], "pdf": "https://arxiv.org/pdf/2510.17862", "abs": "https://arxiv.org/abs/2510.17862", "authors": ["Yibo Peng", "James Song", "Lei Li", "Xinyu Yang", "Mihai Christodorescu", "Ravi Mangal", "Corina Pasareanu", "Haizhong Zheng", "Beidi Chen"], "title": "When \"Correct\" Is Not Safe: Can We Trust Functionally Correct Patches Generated by Code Agents?", "comment": null, "summary": "Code agents are increasingly trusted to autonomously fix bugs on platforms\nsuch as GitHub, yet their security evaluation focuses almost exclusively on\nfunctional correctness. In this paper, we reveal a novel type of threat to\nreal-world code agents: Functionally Correct yet Vulnerable (FCV) patches,\nwhich pass all test cases but contain vulnerable code. With our proposed\nFCV-Attack, which can be deliberately crafted by malicious attackers or\nimplicitly introduced by benign developers, we show that SOTA LLMs (e.g.,\nChatGPT and Claude) and agent scaffolds (e.g., SWE-agent and OpenHands) are all\nvulnerable to this FCV threat; across 12 agent-model combinations on SWE-Bench,\nthe attack only requires black-box access and a single query to the code agent\nto perform the attack. For example, for CWE-538 (information exposure\nvulnerability), the FCV-Attack attains an attack success rate of $40.7\\%$ on\nGPT-5 Mini + OpenHands. Our results reveal an important security threat\noverlooked by current evaluation paradigms and urge the development of\nsecurity-aware defenses for code agents."}
{"id": "2510.18715", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.18715", "abs": "https://arxiv.org/abs/2510.18715", "authors": ["Katherine Zhang", "Arjun Arunasalam", "Pubali Datta", "Z. Berkay Celik"], "title": "International Students and Scams: At Risk Abroad", "comment": "Accepted to IEEE Symposium on Security and Privacy 2026", "summary": "International students (IntlS) in the US refer to foreign students who\nacquire student visas to study in the US, primarily in higher education. As\nIntlS arrive in the US, they face several challenges, such as adjusting to a\nnew country and culture, securing housing remotely, and arranging finances for\ntuition and personal expenses. These experiences, coupled with recent events\nsuch as visa revocations and the cessation of new visas, compound IntlS' risk\nof being targeted by and falling victim to online scams. While prior work has\ninvestigated IntlS' security and privacy, as well as general end users'\nreactions to online scams, research on how IntlS are uniquely impacted by scams\nremains largely absent.\n  To address this gap, we conduct a two-phase user study comprising surveys\n(n=48) and semi-structured interviews (n=9). We investigate IntlS' exposure and\ninteractions with scams, post-exposure actions such as reporting, and their\nperceptions of the usefulness of existing prevention resources and the barriers\nto following prevention advice. We find that IntlS are often targeted by scams\n(e.g., attackers impersonating government officials) and fear legal\nimplications or deportation, which directly impacts their interactions with\nscams (e.g., they may prolong engagement with a scammer due to a sense of\nurgency). Interestingly, we also find that IntlS may lack awareness of - or\naccess to - reliable resources that inform them about scams or guide them in\nreporting incidents to authorities. In fact, they may also face unique barriers\nin enacting scam prevention advice, such as avoiding reporting financial\nlosses, since IntlS are required to demonstrate financial ability to stay in\nthe US. The findings produced by our study help synthesize guidelines for\nstakeholders to better aid IntlS in reacting to scams."}
{"id": "2510.18204", "categories": ["cs.CR", "cs.LG", "cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18204", "abs": "https://arxiv.org/abs/2510.18204", "authors": ["Jiahao Shi", "Tianyi Zhang"], "title": "RESCUE: Retrieval Augmented Secure Code Generation", "comment": null, "summary": "Despite recent advances, Large Language Models (LLMs) still generate\nvulnerable code. Retrieval-Augmented Generation (RAG) has the potential to\nenhance LLMs for secure code generation by incorporating external security\nknowledge. However, the conventional RAG design struggles with the noise of raw\nsecurity-related documents, and existing retrieval methods overlook the\nsignificant security semantics implicitly embedded in task descriptions. To\naddress these issues, we propose RESCUE, a new RAG framework for secure code\ngeneration with two key innovations. First, we propose a hybrid knowledge base\nconstruction method that combines LLM-assisted cluster-then-summarize\ndistillation with program slicing, producing both high-level security\nguidelines and concise, security-focused code examples. Second, we design a\nhierarchical multi-faceted retrieval to traverse the constructed knowledge base\nfrom top to bottom and integrates multiple security-critical facts at each\nhierarchical level, ensuring comprehensive and accurate retrieval. We evaluated\nRESCUE on four benchmarks and compared it with five state-of-the-art secure\ncode generation methods on six LLMs. The results demonstrate that RESCUE\nimproves the SecurePass@1 metric by an average of 4.8 points, establishing a\nnew state-of-the-art performance for security. Furthermore, we performed\nin-depth analysis and ablation studies to rigorously validate the effectiveness\nof individual components in RESCUE."}
{"id": "2510.18728", "categories": ["cs.CR", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.18728", "abs": "https://arxiv.org/abs/2510.18728", "authors": ["Sidhant Narula", "Javad Rafiei Asl", "Mohammad Ghasemigol", "Eduardo Blanco", "Daniel Takabi"], "title": "HarmNet: A Framework for Adaptive Multi-Turn Jailbreak Attacks on Large Language Models", "comment": "This paper has been accepted for presentation at the Conference on\n  Applied Machine Learning in Information Security (CAMLIS 2025)", "summary": "Large Language Models (LLMs) remain vulnerable to multi-turn jailbreak\nattacks. We introduce HarmNet, a modular framework comprising ThoughtNet, a\nhierarchical semantic network; a feedback-driven Simulator for iterative query\nrefinement; and a Network Traverser for real-time adaptive attack execution.\nHarmNet systematically explores and refines the adversarial space to uncover\nstealthy, high-success attack paths. Experiments across closed-source and\nopen-source LLMs show that HarmNet outperforms state-of-the-art methods,\nachieving higher attack success rates. For example, on Mistral-7B, HarmNet\nachieves a 99.4% attack success rate, 13.9% higher than the best baseline.\nIndex terms: jailbreak attacks; large language models; adversarial framework;\nquery refinement."}
{"id": "2510.18601", "categories": ["cs.CR", "cs.SE"], "pdf": "https://arxiv.org/pdf/2510.18601", "abs": "https://arxiv.org/abs/2510.18601", "authors": ["Marco Alecci", "Jordan Samhi", "Tegawendé F. Bissyandé", "Jacques Klein"], "title": "Evaluating Large Language Models in detecting Secrets in Android Apps", "comment": null, "summary": "Mobile apps often embed authentication secrets, such as API keys, tokens, and\nclient IDs, to integrate with cloud services. However, developers often\nhardcode these credentials into Android apps, exposing them to extraction\nthrough reverse engineering. Once compromised, adversaries can exploit secrets\nto access sensitive data, manipulate resources, or abuse APIs, resulting in\nsignificant security and financial risks. Existing detection approaches, such\nas regex-based analysis, static analysis, and machine learning, are effective\nfor identifying known patterns but are fundamentally limited: they require\nprior knowledge of credential structures, API signatures, or training data.\n  In this paper, we propose SecretLoc, an LLM-based approach for detecting\nhardcoded secrets in Android apps. SecretLoc goes beyond pattern matching; it\nleverages contextual and structural cues to identify secrets without relying on\npredefined patterns or labeled training sets. Using a benchmark dataset from\nthe literature, we demonstrate that SecretLoc detects secrets missed by regex-,\nstatic-, and ML-based methods, including previously unseen types of secrets. In\ntotal, we discovered 4828 secrets that were undetected by existing approaches,\ndiscovering more than 10 \"new\" types of secrets, such as OpenAI API keys,\nGitHub Access Tokens, RSA private keys, and JWT tokens, and more.\n  We further extend our analysis to newly crawled apps from Google Play, where\nwe uncovered and responsibly disclosed additional hardcoded secrets. Across a\nset of 5000 apps, we detected secrets in 2124 apps (42.5%), several of which\nwere confirmed and remediated by developers after we contacted them. Our\nresults reveal a dual-use risk: if analysts can uncover these secrets with\nLLMs, so can attackers. This underscores the urgent need for proactive secret\nmanagement and stronger mitigation practices across the mobile ecosystem."}
{"id": "2510.18756", "categories": ["cs.CR", "cs.AR", "cs.DC", "cs.NI", "cs.OS"], "pdf": "https://arxiv.org/pdf/2510.18756", "abs": "https://arxiv.org/abs/2510.18756", "authors": ["Marcin Chrapek", "Meni Orenbach", "Ahmad Atamli", "Marcin Copik", "Fritz Alder", "Torsten Hoefler"], "title": "sNVMe-oF: Secure and Efficient Disaggregated Storage", "comment": null, "summary": "Disaggregated storage with NVMe-over-Fabrics (NVMe-oF) has emerged as the\nstandard solution in modern data centers, achieving superior performance,\nresource utilization, and power efficiency. Simultaneously, confidential\ncomputing (CC) is becoming the de facto security paradigm, enforcing stronger\nisolation and protection for sensitive workloads. However, securing\nstate-of-the-art storage with traditional CC methods struggles to scale and\ncompromises performance or security. To address these issues, we introduce\nsNVMe-oF, a storage management system extending the NVMe-oF protocol and\nadhering to the CC threat model by providing confidentiality, integrity, and\nfreshness guarantees. sNVMe-oF offers an appropriate control path and novel\nconcepts such as counter-leasing. sNVMe-oF also optimizes data path performance\nby leveraging NVMe metadata, introducing a new disaggregated Hazel Merkle Tree\n(HMT), and avoiding redundant IPSec protections. We achieve this without\nmodifying the NVMe-oF protocol. To prevent excessive resource usage while\ndelivering line rate, sNVMe-oF also uses accelerators of CC-capable smart NICs.\nWe prototype sNVMe-oF on an NVIDIA BlueField-3 and demonstrate how it can\nachieve as little as 2% performance degradation for synthetic patterns and AI\ntraining."}
{"id": "2510.18448", "categories": ["cs.SE", "cs.CR"], "pdf": "https://arxiv.org/pdf/2510.18448", "abs": "https://arxiv.org/abs/2510.18448", "authors": ["Wenjing Dang", "Kaixuan Li", "Sen Chen", "Zhenwei Zhuo", "Lyuye Zhang", "Zheli Liu"], "title": "Real-World Usability of Vulnerability Proof-of-Concepts: A Comprehensive Study", "comment": null, "summary": "The Proof-of-Concept (PoC) for a vulnerability is crucial in validating its\nexistence, mitigating false positives, and illustrating the severity of the\nsecurity threat it poses. However, research on PoCs significantly lags behind\nstudies focusing on vulnerability data. This discrepancy can be directly\nattributed to several challenges, including the dispersion of real-world PoCs\nacross multiple platforms, the diversity in writing styles, and the difficulty\nassociated with PoC reproduction. To fill this gap, we conduct the first\nlarge-scale study on PoCs in the wild, assessing their report availability,\ncompleteness, reproducibility. Specifically, 1) to investigate PoC reports\navailability for CVE vulnerability, we collected an extensive dataset of\n470,921 PoCs and their reports from 13 platforms, representing the broadest\ncollection of publicly available PoCs to date. 2) To assess the completeness of\nPoC report at a fine-grained level, we proposed a component extraction method,\nwhich combines pattern-matching techniques with a fine-tuned BERT-NER model to\nextract 9 key components from PoC reports. 3) To evaluate the effectiveness of\nPoCs, we recruited 8 participants to manually reproduce 150 sampled\nvulnerabilities with 32 vulnerability types based on PoC reports, enabling an\nin-depth analysis of PoC reproducibility and the factors influencing it. Our\nfindings reveal that 78.9% of CVE vulnerabilities lack available PoCs, and\nexisting PoC reports typically miss about 30% of the essential components\nrequired for effective vulnerability understanding and reproduction, with\nvarious reasons identified for the failure to reproduce vulnerabilities using\navailable PoC reports. Finally, we proposed actionable strategies for\nstakeholders to enhance the overall usability of vulnerability PoCs in\nstrengthening software security."}
