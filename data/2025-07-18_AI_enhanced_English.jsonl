{"id": "2507.12472", "categories": ["cs.SE", "cs.CL"], "pdf": "https://arxiv.org/pdf/2507.12472", "abs": "https://arxiv.org/abs/2507.12472", "authors": ["Lingzhe Zhang", "Tong Jia", "Mengxi Jia", "Yifan Wu", "Aiwei Liu", "Yong Yang", "Zhonghai Wu", "Xuming Hu", "Philip S. Yu", "Ying Li"], "title": "A Survey of AIOps in the Era of Large Language Models", "comment": "Accepted By CSUR, an extended version of \"A Survey of AIOps for\n  Failure Management in the Era of Large Language Models\" [arXiv:2406.11213]", "summary": "As large language models (LLMs) grow increasingly sophisticated and\npervasive, their application to various Artificial Intelligence for IT\nOperations (AIOps) tasks has garnered significant attention. However, a\ncomprehensive understanding of the impact, potential, and limitations of LLMs\nin AIOps remains in its infancy. To address this gap, we conducted a detailed\nsurvey of LLM4AIOps, focusing on how LLMs can optimize processes and improve\noutcomes in this domain. We analyzed 183 research papers published between\nJanuary 2020 and December 2024 to answer four key research questions (RQs). In\nRQ1, we examine the diverse failure data sources utilized, including advanced\nLLM-based processing techniques for legacy data and the incorporation of new\ndata sources enabled by LLMs. RQ2 explores the evolution of AIOps tasks,\nhighlighting the emergence of novel tasks and the publication trends across\nthese tasks. RQ3 investigates the various LLM-based methods applied to address\nAIOps challenges. Finally, RQ4 reviews evaluation methodologies tailored to\nassess LLM-integrated AIOps approaches. Based on our findings, we discuss the\nstate-of-the-art advancements and trends, identify gaps in existing research,\nand propose promising directions for future exploration.", "AI": {"tldr": "This paper reviews 183 LLM4AIOps studies (2020-2024) to analyze their impact on AIOps through four research questions: failure data sources, task evolution, LLM-based methods, and evaluation methodologies, while identifying research gaps and suggesting future directions.", "motivation": "Despite growing use of large language models (LLMs) in AIOps, understanding their potential, limitations, and tailored applications remains underdeveloped.", "method": "The authors performed a systematic survey of 183 published research papers between 2020 and 2024, addressing four research questions through analysis of data sources, task evolution, LLM application methods, and evaluation frameworks.", "result": "The study provides insights into 1) LLM processing of legacy/new failure data sources, 2) emerging AIOps tasks and publication trends, 3) LLM-based methodologies addressing AIOps challenges, and 4) evaluation approaches for LLM-integrated systems.", "conclusion": "The paper establishes a foundation for understanding LLMs' role in AIOps, highlights current advancements, identifies underexplored areas, and proposes promising trajectories for future research in the field."}}
{"id": "2507.12480", "categories": ["cs.SE", "cs.AI", "cs.ET"], "pdf": "https://arxiv.org/pdf/2507.12480", "abs": "https://arxiv.org/abs/2507.12480", "authors": ["Nazanin Siavash", "Armin Moin"], "title": "LLM-Powered Quantum Code Transpilation", "comment": "IEEE International Conference on Quantum Computing and Engineering\n  (QCE) 2025 - Extended Abstract", "summary": "There exist various Software Development Kits (SDKs) tailored to different\nquantum computing platforms. These are known as Quantum SDKs (QSDKs). Examples\ninclude but are not limited to Qiskit, Cirq, and PennyLane. However, this\ndiversity presents significant challenges for interoperability and\ncross-platform development of hybrid quantum-classical software systems.\nTraditional rule-based transpilers for translating code between QSDKs are\ntime-consuming to design and maintain, requiring deep expertise and rigid\nmappings in the source and destination code. In this study, we explore the use\nof Large Language Models (LLMs) as a flexible and automated solution.\nLeveraging their pretrained knowledge and contextual reasoning capabilities, we\nposition LLMs as programming language-agnostic transpilers capable of\nconverting quantum programs from one QSDK to another while preserving\nfunctional equivalence. Our approach eliminates the need for manually defined\ntransformation rules and offers a scalable solution to quantum software\nportability. This work represents a step toward enabling intelligent,\ngeneral-purpose transpilation in the quantum computing ecosystem.", "AI": {"tldr": "This paper proposes using Large Language Models (LLMs) as automated, language-agnostic transpilers for quantum SDKs (QSDKs), enabling functional code conversion across quantum computing platforms without requiring manual rule creation.", "motivation": "Quantum development kits (QSDKs) exhibit significant diversity, making cross-platform quantum-classical software interoperability difficult. Traditional rule-based transpilers for QSDKs require expert knowledge, rigid mappings, and extensive maintenance.", "method": "Leverages LLMs' pretrained knowledge and contextual reasoning capabilities to perform code translations between QSDKs, using their natural language processing abilities to learn patterns from code samples and facilitate functional equivalence preservation during transpilation.", "result": "Demonstrated that LLMs can eliminate the need for manual transformation rules while maintaining program functionality when converting between different quantum programming frameworks, offering a scalable solution for QSDK interoperability.", "conclusion": "LLMs provide a promising foundation for intelligent, general-purpose quantum program translation, addressing critical portability challenges in hybrid quantum-classical software development ecosystems."}}
{"id": "2507.12482", "categories": ["cs.SE", "cs.AI", "cs.CE", "cs.LG", "68N30, 68T05, 68T50", "D.2.5; D.2.7; F.3.2; I.2.6; I.2.7"], "pdf": "https://arxiv.org/pdf/2507.12482", "abs": "https://arxiv.org/abs/2507.12482", "authors": ["Ishraq Khan", "Assad Chowdary", "Sharoz Haseeb", "Urvish Patel"], "title": "Kodezi Chronos: A Debugging-First Language Model for Repository-Scale, Memory-Driven Code Understanding", "comment": "10 pages, 10 figures, 7 tables, IEEE Conference format, Q4 2025 model\n  release, Q1 2026 Kodezi OS deployment", "summary": "Large Language Models (LLMs) have advanced code generation and software\nautomation, but are fundamentally constrained by limited inference-time context\nand lack of explicit code structure reasoning. We introduce Kodezi Chronos, a\nnext-generation architecture for autonomous code understanding, debugging, and\nmaintenance, designed to operate across ultra-long contexts comprising entire\ncodebases, histories, and documentation, all without fixed window limits.\nKodezi Chronos leverages a multi-level embedding memory engine, combining\nvector and graph-based indexing with continuous code-aware retrieval. This\nenables efficient and accurate reasoning over millions of lines of code,\nsupporting repository-scale comprehension, multi-file refactoring, and\nreal-time self-healing actions. Our evaluation introduces a novel Multi Random\nRetrieval benchmark, specifically tailored to the software engineering domain.\nUnlike classical retrieval benchmarks, this method requires the model to\nresolve arbitrarily distant and obfuscated associations across code artifacts,\nsimulating realistic tasks such as variable tracing, dependency migration, and\nsemantic bug localization. Chronos outperforms prior LLMs and code models,\ndemonstrating a 23% improvement in real-world bug detection and reducing\ndebugging cycles by up to 40% compared to traditional sequence-based\napproaches. By natively interfacing with IDEs and CI/CD workflows, Chronos\nenables seamless, autonomous software maintenance, elevating code reliability\nand productivity while reducing manual effort. These results mark a critical\nadvance toward self-sustaining, continuously optimized software ecosystems.", "AI": {"tldr": "Kodezi Chronos is a next-gen architecture for autonomous code tasks that operates across ultra-long contexts, using a multi-level embedding memory engine to handle entire codebases and reduce debugging cycles by 40%.", "motivation": "Current LLMs face challenges with limited inference-time context and lack of explicit code structure reasoning, restricting their effectiveness in comprehensive code understanding and maintenance tasks.", "method": "Chronos employs a multi-level embedding memory engine integrating vector/graph-based indexing with continuous code-aware retrieval, enabling efficient reasoning over millions of code lines and supporting repository-scale operations.", "result": "Chronos outperforms prior models with 23% better real-world bug detection and a 40% reduction in debugging cycles, validated by a novel Multi Random Retrieval benchmark for software engineering tasks like variable tracing and semantic bug localization.", "conclusion": "The introduction of Chronos represents a significant step toward self-sustaining software ecosystems, offering autonomous maintenance through native IDE and CI/CD integration to enhance reliability and productivity."}}
{"id": "2507.12483", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.12483", "abs": "https://arxiv.org/abs/2507.12483", "authors": ["Dong Wang", "Hanmo You", "Lingwei Zhu", "Kaiwei Lin", "Zheng Chen", "Chen Yang", "Junji Yu", "Zan Wang", "Junjie Chen"], "title": "A Survey of Reinforcement Learning for Software Engineering", "comment": null, "summary": "Reinforcement Learning (RL) has emerged as a powerful paradigm for sequential\ndecision-making and has attracted growing interest across various domains,\nparticularly following the advent of Deep Reinforcement Learning (DRL) in 2015.\nSimultaneously, the rapid advancement of Large Language Models (LLMs) has\nfurther fueled interest in integrating RL with LLMs to enable more adaptive and\nintelligent systems. In the field of software engineering (SE), the increasing\ncomplexity of systems and the rising demand for automation have motivated\nresearchers to apply RL to a broad range of tasks, from software design and\ndevelopment to quality assurance and maintenance. Despite growing research in\nRL-for-SE, there remains a lack of a comprehensive and systematic survey of\nthis evolving field. To address this gap, we reviewed 115 peer-reviewed studies\npublished across 22 premier SE venues since the introduction of DRL. We\nconducted a comprehensive analysis of publication trends, categorized SE topics\nand RL algorithms, and examined key factors such as dataset usage, model design\nand optimization, and evaluation practices. Furthermore, we identified open\nchallenges and proposed future research directions to guide and inspire ongoing\nwork in this evolving area. To summarize, this survey offers the first\nsystematic mapping of RL applications in software engineering, aiming to\nsupport both researchers and practitioners in navigating the current landscape\nand advancing the field. Our artifacts are publicly available:\nhttps://github.com/KaiWei-Lin-lanina/RL4SE.", "AI": {"tldr": "This paper presents the first systematic mapping of RL applications in software engineering, analyzing 115 studies to identify trends, challenges, and future research directions.", "motivation": "The increasing complexity of software systems and automation demands motivate integrating RL into SE, but no comprehensive survey of this field exists.", "method": "A systematic review of 115 peer-reviewed SE papers across 22 top venues since DRL's introduction in 2015, analyzing trends, algorithms, datasets, model design, and evaluation practices.", "result": "Identified RL4SE application categories, algorithm trends, and evaluation challenges; provided insights into dataset usage and model optimization.", "conclusion": "This survey establishes a foundational framework for RL in SE, highlights open challenges, and offers future directions to advance research and practice."}}
{"id": "2507.12568", "categories": ["cs.CR", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.12568", "abs": "https://arxiv.org/abs/2507.12568", "authors": ["Sheng Liu", "Panos Papadimitratos"], "title": "Safeguarding Federated Learning-based Road Condition Classification", "comment": "Accepted by IEEE Conference on Communications and Network Security\n  (CNS) 2025", "summary": "Federated Learning (FL) has emerged as a promising solution for\nprivacy-preserving autonomous driving, specifically camera-based Road Condition\nClassification (RCC) systems, harnessing distributed sensing, computing, and\ncommunication resources on board vehicles without sharing sensitive image data.\nHowever, the collaborative nature of FL-RCC frameworks introduces new\nvulnerabilities: Targeted Label Flipping Attacks (TLFAs), in which malicious\nclients (vehicles) deliberately alter their training data labels to compromise\nthe learned model inference performance. Such attacks can, e.g., cause a\nvehicle to mis-classify slippery, dangerous road conditions as pristine and\nexceed recommended speed. However, TLFAs for FL-based RCC systems are largely\nmissing. We address this challenge with a threefold contribution: 1) we\ndisclose the vulnerability of existing FL-RCC systems to TLFAs; 2) we introduce\na novel label-distance-based metric to precisely quantify the safety risks\nposed by TLFAs; and 3) we propose FLARE, a defensive mechanism leveraging\nneuron-wise analysis of the output layer to mitigate TLFA effects. Extensive\nexperiments across three RCC tasks, four evaluation metrics, six baselines, and\nthree deep learning models demonstrate both the severity of TLFAs on FL-RCC\nsystems and the effectiveness of FLARE in mitigating the attack impact.", "AI": {"tldr": "This paper highlights the vulnerability of Federated Learning (FL) based Road Condition Classification (RCC) systems to Targeted Label Flipping Attacks (TLFAs) and proposes FLARE, a neuron-wise analysis defense mechanism, to mitigate these threats.", "motivation": "Existing FL-RCC systems are exposed to TLFAs where malicious clients manipulate training labels to degrade road condition safety inference, risking autonomous vehicles misjudging dangerous conditions due to privacy-preserving data non-sharing.", "method": "The authors (1) analyzed existing FL-RCC vulnerabilities to TLFAs, (2) developed a label-distance-based metric to quantify safety risks, and (3) designed FLARE using output layer neuron-wise analysis for attack mitigation.", "result": "Experiments over three RCC tasks, four metrics, six baselines, and three models demonstrated the effectiveness of FLARE in reducing TLFAs impact while confirming the severity of these attacks on FL-RCC systems.", "conclusion": "TLFAs present critical safety risks for FL-based RCC systems in autonomous driving, and FLARE provides a robust defense solution to address these vulnerabilities through neuron-wise analysis."}}
{"id": "2507.12558", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.12558", "abs": "https://arxiv.org/abs/2507.12558", "authors": ["Tien P. T. Le", "Anh M. T. Bui", "Huy N. D. Pham", "Alessio Bucaioni", "Phuong T. Nguyen"], "title": "When Retriever Meets Generator: A Joint Model for Code Comment Generation", "comment": "The paper has been peer-reviewed and accepted for publication in the\n  proceedings of the 19th ACM/IEEE International Symposium on Empirical\n  Software Engineering and Measurement (ESEM 2025)", "summary": "Automatically generating concise, informative comments for source code can\nlighten documentation effort and accelerate program comprehension.\nRetrieval-augmented approaches first fetch code snippets with existing comments\nand then synthesize a new comment, yet retrieval and generation are typically\noptimized in isolation, allowing irrelevant neighbors topropagate noise\ndownstream. To tackle the issue, we propose a novel approach named RAGSum with\nthe aim of both effectiveness and efficiency in recommendations. RAGSum is\nbuilt on top offuse retrieval and generation using a single CodeT5 backbone. We\nreport preliminary results on a unified retrieval-generation framework built on\nCodeT5. A contrastive pre-training phase shapes code embeddings for\nnearest-neighbor search; these weights then seed end-to-end training with a\ncomposite loss that (i) rewards accurate top-k retrieval; and (ii) minimizes\ncomment-generation error. More importantly, a lightweight self-refinement loop\nis deployed to polish the final output. We evaluated theframework on three\ncross-language benchmarks (Java, Python, C), and compared it with three\nwell-established baselines. The results show that our approach substantially\noutperforms thebaselines with respect to BLEU, METEOR, and ROUTE-L. These\nfindings indicate that tightly coupling retrieval and generationcan raise the\nceiling for comment automation and motivateforthcoming replications and\nqualitative developer studies.", "AI": {"tldr": "RAGSum is a retrieval-augmented code comment generation framework that tightly couples retrieval and generation using a CodeT5 backbone model and a composite loss function, achieving state-of-the-art performance across three programming languages.", "motivation": "Existing retrieval-augmented code comment generation methods optimize retrieval and generation processes separately, leading to noise propagation from irrelevant code snippet neighbors. This decoupling limits effectiveness and efficiency in comment automation.", "method": "RAGSum uses a single CodeT5 model for both retrieval and generation. It first pre-trains code embeddings with contrastive learning for better nearest-neighbor search, then employs end-to-end training with a composite loss that (1) rewards accurate top-k retrieval and (2) minimizes generation error. A lightweight self-refinement loop further optimizes output quality.", "result": "On cross-language benchmarks (Java, Python, C), RAGSum outperformed three established baselines by significant margins in BLEU, METEOR, and ROUTE-L metrics.", "conclusion": "Tightly coupling retrieval and generation through shared model parameters and joint optimization lifts the performance ceiling for code comment automation. This approach warrants further replication and qualitative studies with developers."}}
{"id": "2507.12670", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2507.12670", "abs": "https://arxiv.org/abs/2507.12670", "authors": ["Shogo Murasaki", "Kazumasa Omote", "Keita Emura"], "title": "On the Consideration of Vanity Address Generation via Identity-Based Signatures", "comment": null, "summary": "An address is indicated as an identifier of the user on the blockchain, and\nis defined by a hash value of the ECDSA verification key. A vanity address is\nan address that embeds custom characters such as a name. To generate a vanity\naddress, a classical try-and-error method is employed, and thus the number of\ncharacters to be embedded is limited. In this paper, we focus on the\nfunctionality of identity-based signatures (IBS) where any strings can be\nemployed as a verification key, and explore whether IBS can be used for\ngenerating a vanity address. We attach importance to the fact that it is not\nrealistic to replace ECDSA with key recovery, which is currently employed for\nissuing transactions in Ethereum, to an IBS scheme. Even if this replacement is\npossible, it is not a reasonable price for the ease of the vanity address\ngeneration. Thus, we pay attention to a generic construction of IBS from\nsignatures, and construct an IBS scheme from ECDSA with key recovery. Though we\ncannot directly generate a vanity address due to the key recovery functionality\nof the underlying ECDSA, we can connect any string with an address due to the\nfunctionality of IBS that can give additional meaning to the address. We\nimplement our system by Solidity, and demonstrate that the gas cost is almost\nsame as that of the ECDSA signature verification.", "AI": {"tldr": "This paper explores using identity-based signatures (IBS) with Ethereum's ECDSA key recovery to generate vanity blockchain addresses efficiently while maintaining compatibility and low gas costs.", "motivation": "Vanity addresses are limited by inefficient try-and-error generation methods, and replacing ECDSA with traditional IBS in Ethereum is impractical due to cost and compatibility constraints.", "method": "The authors investigate a generic IBS construction from signatures and adapt ECDSA key recovery functionality to enable custom string association with addresses in Solidity.", "result": "They implement an IBS-based system compatible with Ethereum, demonstrating gas costs comparable to standard ECDSA signature verification for vanity address generation.", "conclusion": "IBS can enhance address customization without requiring full ECDSA replacement, offering a practical balance between vanity address flexibility and Ethereum's existing cost structure."}}
{"id": "2507.12561", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.12561", "abs": "https://arxiv.org/abs/2507.12561", "authors": ["Samal Nursapa", "Anastassiya Samuilova", "Alessio Bucaioni. Phuong T. Nguyen"], "title": "ROSE: Transformer-Based Refactoring Recommendation for Architectural Smells", "comment": "The paper has been peer-reviewed and accepted for publication in the\n  proceedings of the 19th ACM/IEEE International Symposium on Empirical\n  Software Engineering and Measurement (ESEM 2025)", "summary": "Architectural smells such as God Class, Cyclic Dependency, and Hub-like\nDependency degrade software quality and maintainability. Existing tools detect\nsuch smells but rarely suggest how to fix them. This paper explores the use of\npre-trained transformer models--CodeBERT and CodeT5--for recommending suitable\nrefactorings based on detected smells. We frame the task as a three-class\nclassification problem and fine-tune both models on over 2 million refactoring\ninstances mined from 11,149 open-source Java projects. CodeT5 achieves 96.9%\naccuracy and 95.2% F1, outperforming CodeBERT and traditional baselines. Our\nresults show that transformer-based models can effectively bridge the gap\nbetween smell detection and actionable repair, laying the foundation for future\nrefactoring recommendation systems. We release all code, models, and data under\nan open license to support reproducibility and further research.", "AI": {"tldr": "The paper uses CodeBERT and CodeT5 to recommend refactorings for architectural smells in Java code, achieving high accuracy with CodeT5.", "motivation": "Existing tools detect architectural smells but rarely suggest fixes. Automated refactoring recommendations could improve software maintainability and address this gap.", "method": "Frame smell refactoring as a three-class classification task. Fine-tuned CodeBERT/CodeT5 on 2+ million instances from 11,149 open-source Java projects, evaluating via accuracy/F1 metrics.", "result": "CodeT5 achieved 96.9% accuracy and 95.2% F1 score, outperforming CodeBERT and traditional baselines in refactoring recommendation effectiveness.", "conclusion": "Transformer models effectively connect smell detection to actionable fixes. Open licensing of code/models/data supports reproducibility and future research in automated refactoring systems."}}
{"id": "2507.12919", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2507.12919", "abs": "https://arxiv.org/abs/2507.12919", "authors": ["Victoria Childress", "Josh Collyer", "Jodie Knapp"], "title": "Architectural Backdoors in Deep Learning: A Survey of Vulnerabilities, Detection, and Defense", "comment": "35 pages, Under review for ACM Computing Surveys", "summary": "Architectural backdoors pose an under-examined but critical threat to deep\nneural networks, embedding malicious logic directly into a model's\ncomputational graph. Unlike traditional data poisoning or parameter\nmanipulation, architectural backdoors evade standard mitigation techniques and\npersist even after clean retraining. This survey systematically consolidates\nresearch on architectural backdoors, spanning compiler-level manipulations,\ntainted AutoML pipelines, and supply-chain vulnerabilities. We assess emerging\ndetection and defense strategies, including static graph inspection, dynamic\nfuzzing, and partial formal verification, and highlight their limitations\nagainst distributed or stealth triggers. Despite recent progress, scalable and\npractical defenses remain elusive. We conclude by outlining open challenges and\nproposing directions for strengthening supply-chain security, cryptographic\nmodel attestations, and next-generation benchmarks. This survey aims to guide\nfuture research toward comprehensive defenses against structural backdoor\nthreats in deep learning systems.", "AI": {"tldr": "This survey analyzes architectural backdoors in deep learning systems, highlighting their unique threat beyond traditional attacks and current limitations in detection/defense while proposing future research directions.", "motivation": "Architectural backdoors represent a critical, under-examined threat to neural networks that persist after retraining and evade conventional mitigation techniques, requiring urgent attention.", "method": "Systematic literature review spanning compiler manipulations, AutoML pipeline attacks, supply-chain vulnerabilities; evaluation of emergence detection strategies (static/dynamic analysis, formal verification) and their limitations against stealthy triggers.", "result": "Surveys reveal detection methods struggle with distributed/stealth triggers, and practical scalable defenses remain unstudied despite some progress in the field.", "conclusion": "Highlights open challenges in supply-chain security, proposes improving cryptographic attestation methods, and suggests developing next-gen benchmarks to enable comprehensive defense strategies against structural backdoors."}}
{"id": "2507.12642", "categories": ["cs.SE", "cs.AI", "quant-ph"], "pdf": "https://arxiv.org/pdf/2507.12642", "abs": "https://arxiv.org/abs/2507.12642", "authors": ["Kiana Kheiri", "Aamna Aamir", "Andriy Miranskyy", "Chen Ding"], "title": "QSpark: Towards Reliable Qiskit Code Generation", "comment": null, "summary": "Quantum circuits must be error-resilient, yet LLMs like Granite-20B-Code and\nStarCoder often output flawed Qiskit code. We fine-tuned a 32 B model with two\nRL methods, Group Relative Policy Optimization (GRPO) and Odds-Ratio Preference\nOptimization (ORPO), using a richly annotated synthetic dataset. On the Qiskit\nHumanEval benchmark, ORPO reaches 56.29\\% Pass@1 ($\\approx+10$ pp over\nGranite-8B-QK) and GRPO hits 49\\%, both beating all general-purpose baselines;\non the original HumanEval they score 65.90\\% and 63.00\\%. GRPO excels on basic\ntasks (42/54), ORPO on intermediate ones (41/68), and neither solves the five\nadvanced tasks, highlighting clear gains yet room for progress in AI-assisted\nquantum programming.", "AI": {"tldr": "Fine-tuning a 32B model with GRPO and ORPO improves Qiskit code quality compared to existing LLMs, achieving 56.29% and 49% on Qiskit HumanEval respectively.", "motivation": "Quantum circuits require error-resilient code, but current LLMs like Granite-20B-Code and StarCoder produce flawed Qiskit code.", "method": "The authors fine-tuned a 32B model using Group Relative Policy Optimization (GRPO) and Odds-Ratio Preference Optimization (ORPO) with a synthetic dataset for quantum programming tasks.", "result": "ORPO achieves 56.29% (\u2248+10 pp over Granite-8B-QK) on Qiskit HumanEval and 65.90% on original HumanEval, while GRPO gets 49% and 63.00% respectively, excelling in basic and intermediate tasks but neither handles advanced ones.", "conclusion": "GRPO and ORPO show significant improvements in quantum code generation but face challenges with advanced tasks, indicating progression in AI-assisted quantum programming with remaining gaps."}}
{"id": "2507.12937", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2507.12937", "abs": "https://arxiv.org/abs/2507.12937", "authors": ["Zhuohan Cui", "Zikun Song"], "title": "Enterprise Security Incident Analysis and Countermeasures Based on the T-Mobile Data Breach", "comment": null, "summary": "This paper presents a comprehensive analysis of T-Mobile's critical data\nbreaches in 2021 and 2023, alongside a full-spectrum security audit targeting\nits systems, infrastructure, and publicly exposed endpoints. By combining\ncase-based vulnerability assessments with active ethical hacking\ntechniques--including Shodan reconnaissance, API misuse simulations, VNC\nbrute-forcing, firmware reverse engineering, and web application scans--we\nuncover structural weaknesses persisting beyond the initial breach events.\nBuilding on these findings, we propose a multi-layered defensive strategy\nencompassing Zero Trust Architecture, granular role-based access control,\nnetwork segmentation, firmware encryption using AES with integrity checks, and\nAPI rate limiting and token lifecycle control. Financial modelling demonstrates\nthat a five-year investment yields less than 1.1% of expected breach losses,\nvalidating the cost-effectiveness of proactive security measures. Our work\nbridges post-incident forensic analysis with hands-on security evaluation,\nproviding an actionable blueprint for large-scale telecoms seeking operational\nresilience, regulatory compliance, and cross-domain threat readiness.", "AI": {"tldr": "The paper analyzes T-Mobile's data breaches (2021-2023) via case-based vulnerability assessments and ethical hacking techniques, then proposes a cost-effective multi-layered defensive strategy validated by financial modeling.", "motivation": "Post-breach vulnerabilities in telecom systems remain a critical risk, necessitating proactive measures to prevent losses and ensure compliance with regulations.", "method": "Combined forensic analysis of breaches with active security testing (Shodan reconnaissance, API misuse simulations, VNC brute-forcing, firmware reverse engineering, and web application scans) to identify structural weaknesses.", "result": "Exposed persistent vulnerabilities beyond breaches, implemented defenses (Zero Trust, RBAC, network segmentation, AES firmware encryption, API rate limiting), and proved defense costs (1.1% of 5-year breach losses) for telecom resilience.", "conclusion": "Proactive multi-layered security strategies are validated as cost-effective for telecoms, offering actionable resilience against evolving threats while achieving regulatory compliance."}}
{"id": "2507.12649", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.12649", "abs": "https://arxiv.org/abs/2507.12649", "authors": ["Christine van Stiphoudt", "Sergio Potenciano Menci", "Gilbert Fridgen"], "title": "A Three-Phase Evaluation Approach for new Information and Data Models in the Smart Grid Domain", "comment": null, "summary": "The ongoing digitalisation of the smart grid is resulting in an increase in\nautomated information exchanges across distributed energy systems. This process\nhas led to the development of new information and data models when the existing\nones fall short. To prevent potential disruptions caused by flaws in the newly\ndesigned information and data models, it is essential to evaluate them during\nthe design process before they are implemented in operation.\n  Currently, general explicit evaluation approaches outside the smart grid\ndomain stay at a high level without defining clear steps. Meanwhile, implicit\nevaluation approaches in the smart grid domain focus on testing systems that\nutilise information and data models already in use for functionality in terms\nof conformance and interoperability. Notably, no combination of explicit and\nimplicit evaluation approaches for newly designed information and data models\noffers a clearly defined set of steps during their design process in the smart\ngrid context.\n  Consequently, we design a three-phase evaluation approach using design\nscience research to address this gap. Our evaluation approach combines explicit\nand implicit evaluation methods and is applicable when developing new\ninformation and data models. We use the development of an information model and\ndata model focused on industrial flexibility descriptions to refine our\nevaluation approach. Additionally, we provide lessons learned from our\nexperience.", "AI": {"tldr": "The paper presents a three-phase evaluation approach combining explicit and implicit methods to assess newly designed information and data models in smart grids, addressing the lack of clear design phase evaluations in existing practices.", "motivation": "Digitalisation of smart grids necessitates robust evaluation of new information/data models during design to prevent operational disruptions. Existing approaches are either too high-level (explicit) or focus on operational testing (implicit), with no hybrid method providing clear design-phase steps.", "method": "Design science research is used to develop a three-phase evaluation approach. The method integrates both explicit (theoretical) and implicit (practical testing) techniques, tested and refined through the development of an industrial flexibility model.", "result": "The proposed hybrid approach is validated through application to an industrial flexibility model, with documented lessons learned on improving evaluation clarity and applicability during the design process.", "conclusion": "The three-phase hybrid evaluation method fills a critical gap in smart grid model design by aligning theoretical rigor with practical validation, offering a replicable framework for future model development."}}
{"id": "2507.13023", "categories": ["cs.CR", "q-fin.TR"], "pdf": "https://arxiv.org/pdf/2507.13023", "abs": "https://arxiv.org/abs/2507.13023", "authors": ["Fei Wu", "Danning Sui", "Thomas Thiery", "Mallesh Pai"], "title": "Measuring CEX-DEX Extracted Value and Searcher Profitability: The Darkest of the MEV Dark Forest", "comment": "Accepted by AFT 2025", "summary": "This paper provides a comprehensive empirical analysis of the economics and\ndynamics behind arbitrages between centralized and decentralized exchanges\n(CEX-DEX) on Ethereum. We refine heuristics to identify arbitrage transactions\nfrom on-chain data and introduce a robust empirical framework to estimate\narbitrage revenue without knowing traders' actual behaviors on CEX. Leveraging\nan extensive dataset spanning 19 months from August 2023 to March 2025, we\nestimate a total of 233.8M USD extracted by 19 major CEX-DEX searchers from\n7,203,560 identified CEX-DEX arbitrages. Our analysis reveals increasing\ncentralization trends as three searchers captured three-quarters of both volume\nand extracted value. We also demonstrate that searchers' profitability is tied\nto their integration level with block builders and uncover exclusive\nsearcher-builder relationships and their market impact. Finally, we correct the\npreviously underestimated profitability of block builders who vertically\nintegrate with a searcher. These insights illuminate the darkest corner of the\nMEV landscape and highlight the critical implications of CEX-DEX arbitrages for\nEthereum's decentralization.", "AI": {"tldr": "The paper empirically analyzes CEX-DEX arbitrage dynamics on Ethereum, revealing centralization trends, searcher-builder profitability linkages, and underestimated builder profits, with implications for decentralization.", "motivation": "To illuminate the economic mechanisms and decentralization implications of cross-exchange arbitrage in Ethereum's MEV ecosystem by creating a framework to estimate arbitrage revenue from on-chain data alone.", "method": "Combined refined on-chain arbitrage identification heuristics with a novel empirical framework analyzing 19 months (Aug 2023-Mar 2025) of transaction data to estimate searcher revenue and market impact.", "result": "Identified 7.2M CEX-DEX arbitrages totaling $233.8M in profits, showed top 3 searchers captured 75% of volume/value, demonstrated searcher profitability depends on block builder integration, and corrected builder profit estimates for vertical integration.", "conclusion": "Uncovers systemic centralization risks in Ethereum's MEV landscape through CEX-DEX arbitrage activities, challenges previous profitability assessments of block builders, and highlights potential regulatory and protocol design implications for decentralized exchange markets."}}
{"id": "2507.12653", "categories": ["cs.SE", "cs.CL", "H.4.m"], "pdf": "https://arxiv.org/pdf/2507.12653", "abs": "https://arxiv.org/abs/2507.12653", "authors": ["Jo\u00e3o Granja-Correia", "Remedios Hern\u00e1ndez-Linares", "Luca Ferranti", "Arm\u00e9nio Rego"], "title": "A Fuzzy Approach to Project Success: Measuring What Matters", "comment": "3 pages, 1 figure, presented at FUZZ-IEEE 2025", "summary": "This paper introduces a novel approach to project success evaluation by\nintegrating fuzzy logic into an existing construct. Traditional Likert-scale\nmeasures often overlook the context-dependent and multifaceted nature of\nproject success. The proposed hierarchical Type-1 Mamdani fuzzy system\nprioritizes sustained positive impact for end-users, reducing emphasis on\nsecondary outcomes like stakeholder satisfaction and internal project success.\nThis dynamic approach may provide a more accurate measure of project success\nand could be adaptable to complex evaluations. Future research will focus on\nempirical testing and broader applications of fuzzy logic in social science.", "AI": {"tldr": "The paper proposes a hierarchical Type-1 Mamdani fuzzy system to evaluate project success, prioritizing sustained user impact over traditional metrics like stakeholder satisfaction.", "motivation": "Traditional Likert-scale project success measures fail to account for the context-dependent, multifaceted nature of success and over-emphasize secondary outcomes.", "method": "Integrated fuzzy logic into an existing project success framework using a hierarchical Type-1 Mamdani system to prioritize enduring positive user outcomes dynamically.", "result": "The approach is theorized to provide a more accurate, context-sensitive evaluation of project success with potential adaptability for complex assessments.", "conclusion": "The fuzzy logic method offers promising advantages for project success evaluation and merits empirical validation alongside exploration of applications in social science research."}}
{"id": "2507.13028", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2507.13028", "abs": "https://arxiv.org/abs/2507.13028", "authors": ["Niklas Busch", "Philip Klostermeyer", "Jan H. Klemmer", "Yasemin Acar", "Sascha Fahl"], "title": "From Paranoia to Compliance: The Bumpy Road of System Hardening Practices on Stack Exchange", "comment": "14 pages, 5 figures", "summary": "Hardening computer systems against cyberattacks is crucial for security.\nHowever, past incidents illustrated, that many system operators struggle with\neffective system hardening. Hence, many computer systems and applications\nremain insecure. So far, the research community lacks an in-depth understanding\nof system operators motivation, practices, and challenges around system\nhardening. With a focus on practices and challenges, we qualitatively analyzed\n316 Stack Exchange (SE) posts related to system hardening. We find that access\ncontrol and deployment-related issues are the most challenging, and system\noperators suffer from misconceptions and unrealistic expectations. Most\nfrequently, posts focused on operating systems and server applications. System\noperators were driven by the fear of their systems getting attacked or by\ncompliance reasons. Finally, we discuss our research questions, make\nrecommendations for future system hardening, and illustrate the implications of\nour work.", "AI": {"tldr": "A study analyzing system hardening practices and challenges faced by operators through Stack Exchange posts.", "motivation": "Past cyberattacks reveal ineffective system hardening practices by operators, creating a need for understanding motivations, challenges, and misconceptions in this domain.", "method": "Qualitative analysis of 316 Stack Exchange posts related to system hardening.", "result": "Access control and deployment issues are most challenging; operators frequently focus on OS/server hardening, act out of fear or compliance, and hold misconceptions about hardening effectiveness.", "conclusion": "Researchers should consider operator motivations and challenges when designing hardening tools, while organizations need to address the identified misconceptions and realistic expectations for security practices."}}
{"id": "2507.12665", "categories": ["cs.SE", "cs.AI", "cs.HC"], "pdf": "https://arxiv.org/pdf/2507.12665", "abs": "https://arxiv.org/abs/2507.12665", "authors": ["Salvador D. Escobedo"], "title": "Single Conversation Methodology: A Human-Centered Protocol for AI-Assisted Software Development", "comment": "Style reviewed by a LLM for improving clarity and English syntax", "summary": "We propose the Single Conversation Methodology (SCM), a novel and pragmatic\napproach to software development using large language models (LLMs). In\ncontrast to ad hoc interactions with generative AI, SCM emphasizes a structured\nand persistent development dialogue, where all stages of a project - from\nrequirements to architecture and implementation - unfold within a single,\nlong-context conversation. The methodology is grounded on principles of\ncognitive clarity, traceability, modularity, and documentation. We define its\nphases, best practices, and philosophical stance, while arguing that SCM offers\na necessary correction to the passive reliance on LLMs prevalent in current\npractices. We aim to reassert the active role of the developer as architect and\nsupervisor of the intelligent tool.", "AI": {"tldr": "The Single Conversation Methodology (SCM) introduces a structured, persistent dialogue framework for software development with LLMs, emphasizing developer control over ad hoc generative AI interactions. It focuses on cognitive clarity, traceability, and modularity across project stages.", "motivation": "Current software development practices using LLMs often rely on fragmented, ad hoc interactions which may lead to reduced developer agency and maintainability. SCM addresses this by providing a coherent, traceable, and modular approach within a single conversation.", "method": "SCM operationalizes software development through six sequential phases (requirements gathering to deployment) within a long-context LLM conversation. Each phase integrates specific best practices for documentation, modularity, error tracking, and iterative refinement.", "result": "The authors present SCM's formal process structure and demonstrate its advantages through hypothetical project examples. They show how a continuous conversation enhances context awareness and reduces knowledge fragmentation in LLM-assisted development.", "conclusion": "SCM repositions developers as architects and supervisors rather than passive users of LLM tools, offering a principled alternative to disorganized workflows while maintaining the benefits of generative AI in software development."}}
{"id": "2507.13038", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2507.13038", "abs": "https://arxiv.org/abs/2507.13038", "authors": ["Yu Cui", "Hongyang Du"], "title": "MAD-Spear: A Conformity-Driven Prompt Injection Attack on Multi-Agent Debate Systems", "comment": null, "summary": "Multi-agent debate (MAD) systems leverage collaborative interactions among\nlarge language models (LLMs) agents to improve reasoning capabilities. While\nrecent studies have focused on increasing the accuracy and scalability of MAD\nsystems, their security vulnerabilities have received limited attention. In\nthis work, we introduce MAD-Spear, a targeted prompt injection attack that\ncompromises a small subset of agents but significantly disrupts the overall MAD\nprocess. Manipulated agents produce multiple plausible yet incorrect responses,\nexploiting LLMs' conformity tendencies to propagate misinformation and degrade\nconsensus quality. Furthermore, the attack can be composed with other\nstrategies, such as communication attacks, to further amplify its impact by\nincreasing the exposure of agents to incorrect responses. To assess MAD's\nresilience under attack, we propose a formal definition of MAD fault-tolerance\nand develop a comprehensive evaluation framework that jointly considers\naccuracy, consensus efficiency, and scalability. Extensive experiments on five\nbenchmark datasets with varying difficulty levels demonstrate that MAD-Spear\nconsistently outperforms the baseline attack in degrading system performance.\nAdditionally, we observe that agent diversity substantially improves MAD\nperformance in mathematical reasoning tasks, which challenges prior work\nsuggesting that agent diversity has minimal impact on performance. These\nfindings highlight the urgent need to improve the security in MAD design.", "AI": {"tldr": "This paper introduces MAD-Spear, a targeted prompt injection attack on multi-agent debate (MAD) systems that exploits LLM conformity tendencies to propagate misinformation. The study proposes a fault-tolerance definition and evaluation framework, demonstrating MAD-Spear's superior effectiveness in degrading system performance. It also challenges prior assumptions by showing agent diversity significantly improves mathematical reasoning in MAD systems.", "motivation": "Existing research on multi-agent debate systems focuses on improving accuracy and scalability but overlooks critical security risks, necessitating systematic investigation of vulnerabilities like prompt injection attacks.", "method": "1) MAD-Spear attack design: Compromises a small subset of agents to produce plausible yet incorrect responses, leveraging LLM conformity. 2) Attack composition with communication strategies to amplify misinformation exposure. 3) Formal definition of MAD fault-tolerance and evaluation framework combining accuracy, consensus efficiency, and scalability. 4) Experiments on five benchmark datasets with varying difficulty levels.", "result": "MAD-Spear consistently outperformed baseline attacks in degrading system performance. Agent diversity was found to substantially improve mathematical reasoning performance in MAD systems (contrary to prior claims that diversity had minimal impact).", "conclusion": "Security vulnerabilities in MAD systems like prompt injection attacks pose significant risks despite demonstrated benefits of agent diversity for mathematical reasoning. The work underscores the urgent need to incorporate security by design principles for robust MAD implementations."}}
{"id": "2507.13035", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.13035", "abs": "https://arxiv.org/abs/2507.13035", "authors": ["Keila Lucas", "Rohit Gheyi", "M\u00e1rcio Ribeiro", "Fabio Palomba", "Luana Martins", "Elvys Soares"], "title": "Investigating the Performance of Small Language Models in Detecting Test Smells in Manual Test Cases", "comment": "7 pages, Accepted at Insightful Ideas and Emerging Results (IIER)\n  Track of the Brazilian Symposium on Software Engineering (SBES 2025)", "summary": "Manual testing, in which testers follow natural language instructions to\nvalidate system behavior, remains crucial for uncovering issues not easily\ncaptured by automation. However, these test cases often suffer from test\nsmells, quality issues such as ambiguity, redundancy, or missing checks that\nreduce test reliability and maintainability. While detection tools exist, they\ntypically require manual rule definition and lack scalability. This study\ninvestigates the potential of Small Language Models (SLMs) for automatically\ndetecting test smells. We evaluate Gemma3, Llama3.2, and Phi-4 on 143\nreal-world Ubuntu test cases, covering seven types of test smells. Phi-4\nachieved the best results, reaching a pass@2 of 97% in detecting sentences with\ntest smells, while Gemma3 and Llama3.2 reached approximately 91%. Beyond\ndetection, SLMs autonomously explained issues and suggested improvements, even\nwithout explicit prompt instructions. They enabled low-cost, concept-driven\nidentification of diverse test smells without relying on extensive rule\ndefinitions or syntactic analysis. These findings highlight the potential of\nSLMs as efficient tools that preserve data privacy and can improve test quality\nin real-world scenarios.", "AI": {"tldr": "This paper explores using Small Language Models (SLMs) like Phi-4, Gemma3, and Llama3.2 to detect test smells in manual test cases. Phi-4 outperforms others with a 97% pass@2 accuracy, enabling efficient and privacy-preserving test quality improvement.", "motivation": "Manual test cases often contain test smells (e.g., ambiguity, redundancy) that reduce test quality, but existing detection tools lack scalability and require labor-intensive rule definitions. Automated solutions are needed to address these limitations effectively.", "method": "The authors evaluated three SLMs (Gemma3, Llama3.2, Phi-4) on 143 real-world Ubuntu test cases, targeting seven types of test smells. They measured detection accuracy using pass@2 metrics and analyzed the models' ability to autonomously explain issues and suggest fixes without explicit prompts.", "result": "Phi-4 achieved a 97% pass@2 accuracy in identifying test smells. Gemma3 and Llama3.2 reached ~91%. All models could autonomously explain detected flaws and propose actionable improvements, reducing reliance on manual rules and syntactic analysis.", "conclusion": "SLMs demonstrate strong potential for efficient, cost-effective test smell detection and improvement, enabling test maintainability while preserving data privacy. This approach offers a scalable alternative to traditional rule-based or syntactic tools for enhancing test case quality in real-world settings."}}
{"id": "2507.13042", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2507.13042", "abs": "https://arxiv.org/abs/2507.13042", "authors": ["Taki Eddine Djidjekh", "Ga\u00ebl Loubet", "Alexandru Takacs"], "title": "Backscattering-Based Security in Wireless Power Transfer Applied to Battery-Free BLE Sensors", "comment": null, "summary": "The integration of security and energy efficiency in Internet of Things\nsystems remains a critical challenge, particularly for battery-free and\nresource-constrained devices. This paper explores the scalability and\nprotocol-agnostic nature of a backscattering-based security mechanism by\nintegrating it into Bluetooth Low Energy battery-free Wireless Sensor Network.\nThe proposed approach leverages the Wireless Power Transfer link, traditionally\nused for energy harvesting, to generate additional identification signals\nwithout increasing energy consumption or computational demands. Experimental\nvalidation demonstrates the solution's functionality using compact, low-gain\nantenna, ensuring compatibility with size-constrained applications such as\nStructural Health Monitoring and smart transport. Furthermore, this work\naddresses the challenges associated with backscattering dynamic range and\nmulti-node Wireless Sensor Network scenarios, discussing potential collisions\nbetween identification signals and proposing future improvements to enhance\ngeneralizability and scalability. The findings underscore the potential of the\nbackscattering-based security mechanism for creating secure, sustainable, and\nscalable IoT deployments across diverse protocols and applications.", "AI": {"tldr": "This paper investigates a backscattering-based security mechanism for Bluetooth Low Energy battery-free Wireless Sensor Networks, demonstrating its scalability, protocol-agnostic nature, and energy efficiency using compact antennas.", "motivation": "Balancing security and energy efficiency is critical for battery-free IoT devices, which face limitations in power and computational resources. Existing solutions often fail to integrate both requirements effectively.", "method": "The proposed method uses Wireless Power Transfer links for energy harvesting to generate additional identification signals through backscattering, ensuring security without increasing energy consumption or computational demands. A compact, low-gain antenna is employed for validation.", "result": "Experiments validated functionality with size-constrained applications like Structural Health Monitoring and smart transport. Challenges in backscattering dynamic range and multi-node signal collisions were identified, along with potential improvements.", "conclusion": "The backscattering-based approach shows promise for secure, sustainable IoT deployments, particularly for battery-free devices. Further enhancements could improve scalability and compatibility with multi-node networks."}}
{"id": "2507.13081", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.13081", "abs": "https://arxiv.org/abs/2507.13081", "authors": ["Dongming Jin", "Weisong Sun", "Jiangping Huang", "Peng Liang", "Jifeng Xuan", "Yang Liu", "Zhi Jin"], "title": "iReDev: A Knowledge-Driven Multi-Agent Framework for Intelligent Requirements Development", "comment": "22pages, 4 figures", "summary": "Requirements development is a critical phase as it is responsible for\nproviding a clear understanding of what stakeholders need. It involves\ncollaboration among stakeholders to extract explicit requirements and address\npotential conflicts, which is time-consuming and labor-intensive. Recently,\nmulti-agent systems for software development have attracted much attention.\nHowever, existing research provides limited support for requirements\ndevelopment and overlooks the injection of human knowledge into agents and the\nhuman-agent collaboration. % To address these issues, this paper proposes a\nknowledge-driven multi-agent framework for intelligent requirement development,\nnamed iReDev. iReDev features: iReDev consists of six knowledge-driven agents\nto support the entire requirements development. They collaboratively perform\nvarious tasks to produce a software requirements specification. iReDev focuses\non integrating human knowledge for agents, enabling them to simulate real-world\nstakeholders. iReDev uses an event-driven communication mechanism based on an\nartifact pool. Agents continuously monitor the pool and autonomously trigger\nthe next action based on its changes, enabling iReDev to handle new\nrequirements quickly. iReDev introduces a human-in-the-loop mechanism to\nsupport human-agent collaboration, ensuring that the generated artifacts align\nwith the expectations of stakeholders. We evaluated the generated artifacts and\nresults show that iReDev outperforms existing baselines in multiple aspects. We\nfurther envision three key directions and hope this work can facilitate the\ndevelopment of intelligent requirements development.", "AI": {"tldr": "The paper proposes iReDev, a knowledge-driven multi-agent framework for intelligent requirements development that supports stakeholder collaboration, human knowledge integration, and event-driven operations with a human-in-the-loop mechanism, demonstrating superior performance over existing baselines.", "motivation": "Traditional requirements development is time-consuming and labor-intensive, while existing multi-agent systems provide limited support for this phase by neglecting human knowledge injection and human-agent collaboration.", "method": "iReDev uses six knowledge-driven agents, an artifact pool-based event-driven communication mechanism, and a human-in-the-loop design to simulate stakeholder interactions and autonomously handle new requirements.", "result": "Evaluation results show that iReDev outperforms existing baselines in generating software requirements specifications across multiple dimensions.", "conclusion": "The paper establishes iReDev as an effective framework for intelligent requirements development and proposes three key future research directions to advance the field."}}
{"id": "2507.13169", "categories": ["cs.CR", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.13169", "abs": "https://arxiv.org/abs/2507.13169", "authors": ["Jeremy McHugh", "Kristina \u0160ekrst", "Jon Cefalu"], "title": "Prompt Injection 2.0: Hybrid AI Threats", "comment": null, "summary": "Prompt injection attacks, where malicious input is designed to manipulate AI\nsystems into ignoring their original instructions and following unauthorized\ncommands instead, were first discovered by Preamble, Inc. in May 2022 and\nresponsibly disclosed to OpenAI. Over the last three years, these attacks have\ncontinued to pose a critical security threat to LLM-integrated systems. The\nemergence of agentic AI systems, where LLMs autonomously perform multistep\ntasks through tools and coordination with other agents, has fundamentally\ntransformed the threat landscape. Modern prompt injection attacks can now\ncombine with traditional cybersecurity exploits to create hybrid threats that\nsystematically evade traditional security controls. This paper presents a\ncomprehensive analysis of Prompt Injection 2.0, examining how prompt injections\nintegrate with Cross-Site Scripting (XSS), Cross-Site Request Forgery (CSRF),\nand other web security vulnerabilities to bypass traditional security measures.\nWe build upon Preamble's foundational research and mitigation technologies,\nevaluating them against contemporary threats, including AI worms, multi-agent\ninfections, and hybrid cyber-AI attacks. Our analysis incorporates recent\nbenchmarks that demonstrate how traditional web application firewalls, XSS\nfilters, and CSRF tokens fail against AI-enhanced attacks. We also present\narchitectural solutions that combine prompt isolation, runtime security, and\nprivilege separation with novel threat detection capabilities.", "AI": {"tldr": "This paper analyzes advanced prompt injection attacks (Prompt Injection 2.0) that integrate with web vulnerabilities like XSS/CSRF, demonstrating how traditional security measures fail and proposing architectural solutions combining AI-specific defenses. The study evaluates hybrid cyber-AI threats and updates Preamble's research for modern agentic AI systems.", "motivation": "The emergence of agentic AI systems and hybrid threats combining prompt injection with traditional web exploits necessitates updated security approaches as legacy safeguards (e.g., WAFs, XSS filters) are shown to be insufficient against AI-enhanced attacks.", "method": "Comprehensive analysis of prompt injection integration with XSS, CSRF, and other web vulnerabilities. Evaluation of existing mitigation technologies via benchmarks against contemporary threats (AI worms, multi-agent infections). Development of architectural solutions with prompt isolation, runtime security, and privilege separation enhanced by novel threat detection mechanisms.", "result": "Demonstrated failures of traditional security measures against hybrid attacks through new benchmarks. Validated architectural solutions that effectively address prompt injection 2.0 and multi-agent threats with enhanced detection capabilities.", "conclusion": "Prompt Injection 2.0 requires rethinking security for agentic AI systems by combining traditional controls with AI-specific defenses (prompt isolation, runtime monitoring). Legacy web security architectures are inadequate for emerging multi-step, coordination-based hybrid cyber-AI threats."}}
{"id": "2507.13095", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.13095", "abs": "https://arxiv.org/abs/2507.13095", "authors": ["Dongming Jin", "Zhi Jin", "Linyu Li", "Xiaohong Chen"], "title": "A Conceptual Framework for Requirements Engineering of Pretrained-Model-Enabled Systems", "comment": "5pages, 1 figure", "summary": "Recent advances in large pretrained models have led to their widespread\nintegration as core components in modern software systems. The trend is\nexpected to continue in the foreseeable future. Unlike traditional software\nsystems governed by deterministic logic, systems powered by pretrained models\nexhibit distinctive and emergent characteristics, such as ambiguous capability\nboundaries, context-dependent behavior, and continuous evolution. These\nproperties fundamentally challenge long-standing assumptions in requirements\nengineering, including functional decomposability and behavioral\npredictability. This paper investigates this problem and advocates for a\nrethinking of existing requirements engineering methodologies. We propose a\nconceptual framework tailored to requirements engineering of\npretrained-model-enabled software systems and outline several promising\nresearch directions within this framework. This vision helps provide a guide\nfor researchers and practitioners to tackle the emerging challenges in\nrequirements engineering of pretrained-model-enabled systems.", "AI": {"tldr": "This paper explores the challenges of requirements engineering in software systems using large pretrained models and proposes a new conceptual framework along with research directions to address these challenges.", "motivation": "Pretrained models challenge traditional assumptions in requirements engineering (functional decomposability and behavioral predictability) due to their ambiguous capability boundaries, context-dependent behavior, and continuous evolution.", "method": "The authors investigate the emergent characteristics of pretrained-model-enabled systems and propose a conceptual framework tailored to their requirements engineering, supported by three pillars and research directions.", "result": "The paper outlines three promising research directions: model-specific requirements engineering techniques, contextual modeling for system behavior, and continuous evolution management strategies for requirements.", "conclusion": "The proposed framework provides a vision for rethinking requirements engineering methodologies to support future software systems incorporating pretrained models, guiding both researchers and practitioners."}}
{"id": "2507.13313", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2507.13313", "abs": "https://arxiv.org/abs/2507.13313", "authors": ["Chao Feng", "Alberto Huertas Celdran", "Jing Han", "Heqing Ren", "Xi Cheng", "Zien Zeng", "Lucas Krauter", "Gerome Bovet", "Burkhard Stiller"], "title": "A Crowdsensing Intrusion Detection Dataset For Decentralized Federated Learning Models", "comment": null, "summary": "This paper introduces a dataset and experimental study for decentralized\nfederated learning (DFL) applied to IoT crowdsensing malware detection. The\ndataset comprises behavioral records from benign and eight malware families. A\ntotal of 21,582,484 original records were collected from system calls, file\nsystem activities, resource usage, kernel events, input/output events, and\nnetwork records. These records were aggregated into 30-second windows,\nresulting in 342,106 features used for model training and evaluation.\nExperiments on the DFL platform compare traditional machine learning (ML),\ncentralized federated learning (CFL), and DFL across different node counts,\ntopologies, and data distributions. Results show that DFL maintains competitive\nperformance while preserving data locality, outperforming CFL in most settings.\nThis dataset provides a solid foundation for studying the security of IoT\ncrowdsensing environments.", "AI": {"tldr": "This paper presents a dataset and experimental comparison of decentralized federated learning (DFL) for IoT malware detection, demonstrating DFL's effectiveness in preserving data locality while maintaining competitive performance against traditional machine learning and centralized federated learning approaches.", "motivation": "The study is motivated by the growing need for privacy-preserving malware detection solutions in IoT crowdsensing environments, where data distribution across devices poses security and privacy challenges.", "method": "The authors collected 21.58 million behavioral records (system calls, file activities, etc.) from benign and malicious IoT workloads, aggregated them into 30-second windows to create 342k features, and conducted experiments comparing traditional ML, centralized federated learning (CFL), and DFL under varying node counts, topologies, and data distributions.", "result": "DFL maintained comparable performance to non-decentralized methods while outperforming CFL in most scenarios, successfully preserving data locality (no global server), and establishing a benchmark dataset for this domain.", "conclusion": "The dataset and results provide a foundational resource for studying DFL in IoT security, showing it as a viable alternative to CFL for distributed malware detection with privacy advantages."}}
{"id": "2507.13117", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.13117", "abs": "https://arxiv.org/abs/2507.13117", "authors": ["Andreas Pointner", "Josef Pichler", "Herbert Pr\u00e4hofer"], "title": "Inferring Attributed Grammars from Parser Implementations", "comment": "Accepted to ICSME 2025", "summary": "Software systems that process structured inputs often lack complete and\nup-to-date specifications, which specify the input syntax and the semantics of\ninput processing. While grammar mining techniques have focused on recovering\nsyntactic structures, the semantics of input processing remains largely\nunexplored. In this work, we introduce a novel approach for inferring\nattributed grammars from parser implementations. Given an input grammar, our\ntechnique dynamically analyzes the implementation of recursive descent parsers\nto reconstruct the semantic aspects of input handling, resulting in\nspecifications in the form of attributed grammars. By observing program\nexecutions and mapping the program's runtime behavior to the grammar, we\nsystematically extract and embed semantic actions into the grammar rules. This\nenables comprehensive specification recovery. We demonstrate the feasibility of\nour approach using an initial set of programs, showing that it can accurately\nreproduce program behavior through the generated attributed grammars.", "AI": {"tldr": "The paper presents a method to infer attributed grammars from parser implementations by dynamically analyzing recursive descent parsers, enabling the recovery of both syntactic and semantic input processing specifications.", "motivation": "Incomplete or outdated specifications in software systems that handle structured inputs leave the semantic processing aspects under-specified, limiting the effectiveness of grammar mining techniques that recover only syntactic structures.", "method": "The approach dynamically analyzes recursive descent parser implementations while following a given input grammar, mapping runtime behavior to grammar rules to extract and embed semantic actions as attributed grammars.", "result": "The technique was validated on an initial set of programs, showing accurate reproduction of their input processing behavior through generated attributed grammars.", "conclusion": "This method enables comprehensive specification recovery by systematically linking program behavior to grammar rules, providing a practical solution for documenting complex input processing semantics."}}
{"id": "2507.13123", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.13123", "abs": "https://arxiv.org/abs/2507.13123", "authors": ["Xin Yin", "Xinrui Li", "Chao Ni", "Xiaodan Xu", "Xiaohu Yang"], "title": "Detecting LLM-generated Code with Subtle Modification by Adversarial Training", "comment": null, "summary": "With the rapid development of Large Language Models (LLMs), their powerful\ncode-generation capabilities have been widely applied in tasks like code\ncompletion and automated development, demonstrating the value of improving\ncoding efficiency. However, the extensive use of LLM-generated code also raises\nseveral new challenges. On the one hand, issues such as the regulation of code\nprovenance, copyright disputes, and code quality have become increasingly\nconcerning. How to effectively detect LLM-generated code and ensure its\ncompliant and responsible use has become a critical and urgent issue. On the\nother hand, in practical applications, LLM-generated code is often subject to\nmanual modifications, such as variable renaming or structural adjustments.\nAlthough some recent studies have proposed training-based and zero-shot methods\nfor detecting LLM-generated code, these approaches show insufficient robustness\nwhen facing modified LLM-generated code, and there is a lack of an effective\nsolution. To address the real-world scenario where LLM-generated code may\nundergo minor modifications, we propose CodeGPTSensor+, an enhanced version of\nCodeGPTSensor, which employs adversarial training to improve robustness against\ninput perturbations. CodeGPTSensor+ integrates an adversarial sample generation\nmodule, Multi-objective Identifier and Structure Transformation (MIST), which\nsystematically generates both high-quality and representative adversarial\nsamples. This module effectively enhances the model's resistance against\ndiverse adversarial attacks. Experimental results on the HMCorp dataset\ndemonstrate that CodeGPTSensor+ significantly improves detection accuracy on\nthe adversarial test set while maintaining high accuracy on the original test\nset, showcasing superior robustness compared to CodeGPTSensor.", "AI": {"tldr": "CodeGPTSensor+ enhances adversarial robustness for detecting LLM-generated code under minor modifications, achieved through the MIST module for adversarial training.", "motivation": "Existing detection methods lack robustness against modified LLM-generated code, which is crucial for addressing real-world compliance and copyright issues.", "method": "The approach uses adversarial training with a novel MIST module to generate structured adversarial samples, improving model resilience to code alterations like variable renaming and structural adjustments.", "result": "CodeGPTSensor+ achieves significantly higher detection accuracy on adversarial test sets (HMCorp dataset) while maintaining high performance on original code compared to prior methods.", "conclusion": "CodeGPTSensor+ provides a robust solution for LLM code detection in practical scenarios, advancing responsible AI usage in software development."}}
