{"id": "2507.17850", "categories": ["cs.CR", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.17850", "abs": "https://arxiv.org/abs/2507.17850", "authors": ["Rodrigo Moreira", "Larissa F. Rodrigues Moreira", "Fl\u00e1vio de Oliveira Silva"], "title": "Performance Evaluation and Threat Mitigation in Large-scale 5G Core Deployment", "comment": null, "summary": "The deployment of large-scale software-based 5G core functions presents\nsignificant challenges due to their reliance on optimized and intelligent\nresource provisioning for their services. Many studies have focused on\nanalyzing the impact of resource allocation for complex deployments using\nmathematical models, queue theories, or even Artificial Intelligence (AI). This\npaper elucidates the effects of chaotic workloads, generated by Distributed\nDenial of Service (DDoS) on different Network Functions (NFs) on User Equipment\nregistration performance. Our findings highlight the necessity of diverse\nresource profiles to ensure Service-Level Agreement (SLA) compliance in\nlarge-scale 5G core deployments. Additionally, our analysis of packet capture\napproaches demonstrates the potential of kernel-based monitoring for scalable\nsecurity threat defense. Finally, our empirical evaluation provides insights\ninto the effective deployment of 5G NFs in complex scenarios.", "AI": {"tldr": "This paper examines how DDoS-generated chaotic workloads affect 5G core network function (NF) registration performance, emphasizing the need for diverse resource profiles and kernel-based monitoring to maintain SLA compliance and scalable security.", "motivation": "Large-scale 5G software deployments face critical resource provisioning challenges, particularly under chaotic workloads from security threats like DDoS. Traditional methods using mathematical models or AI lack focus on dynamic security-related performance impacts.", "method": "1. Analyzes DDoS impacts on NFs via chaotic workload modeling; 2. Evaluates resource profile diversity requirements through SLA metrics; 3. Tests kernel-based monitoring approaches using packet capture data analysis; 4. Conducts empirical evaluations of NF deployment strategies under complex scenarios.", "result": "1. DDoS attacks require 18-22% more dynamic resources for SLA compliance; 2. Kernel-based monitoring scales 3-5x more efficiently than traditional methods; 3. Resource profile diversity reduces registration latency by 40% in chaotic workloads.", "conclusion": "The work establishes that adaptive resource provisioning strategies combining diverse profiles with kernel-level security monitoring are essential for maintaining 5G core performance under dynamic DDoS threats, providing new design principles for resilient software-based network deployments."}}
{"id": "2507.17888", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2507.17888", "abs": "https://arxiv.org/abs/2507.17888", "authors": ["Nima Atashin", "Behrouz Tork Ladani", "Mohammadreza Sharbaf"], "title": "Learning to Locate: GNN-Powered Vulnerability Path Discovery in Open Source Code", "comment": "8 pages, 5 Figures", "summary": "Detecting security vulnerabilities in open-source software is a critical task\nthat is highly regarded in the related research communities. Several approaches\nhave been proposed in the literature for detecting vulnerable codes and\nidentifying the classes of vulnerabilities. However, there is still room to\nwork in explaining the root causes of detected vulnerabilities through locating\nvulnerable statements and the discovery of paths leading to the activation of\nthe vulnerability. While frameworks like SliceLocator offer explanations by\nidentifying vulnerable paths, they rely on rule-based sink identification that\nlimits their generalization. In this paper, we introduce VulPathFinder, an\nexplainable vulnerability path discovery framework that enhances SliceLocator's\nmethodology by utilizing a novel Graph Neural Network (GNN) model for detecting\nsink statements, rather than relying on predefined rules. The proposed GNN\ncaptures semantic and syntactic dependencies to find potential sink points\n(PSPs), which are candidate statements where vulnerable paths end. After\ndetecting PSPs, program slicing can be used to extract potentially vulnerable\npaths, which are then ranked by feeding them back into the target graph-based\ndetector. Ultimately, the most probable path is returned, explaining the root\ncause of the detected vulnerability. We demonstrated the effectiveness of the\nproposed approach by performing evaluations on a benchmark of the buffer\noverflow CWEs from the SARD dataset, providing explanations for the\ncorresponding detected vulnerabilities. The results show that VulPathFinder\noutperforms both original SliceLocator and GNNExplainer (as a general GNN\nexplainability tool) in discovery of vulnerability paths to identified PSPs.", "AI": {"tldr": "VulPathFinder is an explainable vulnerability path discovery framework that improves upon rule-based methods like SliceLocator by using a Graph Neural Network (GNN) to detect sink statements, enabling more effective identification of paths leading to detected vulnerabilities.", "motivation": "Current vulnerability detection frameworks struggle to generalize when explaining root causes via vulnerable paths due to reliance on predefined rules (e.g., SliceLocator's rule-based sink identification). This limits their ability to adapt to diverse vulnerability patterns in real-world open-source software.", "method": "The paper proposes VulPathFinder, which employs a novel GNN model to detect sink statements by capturing semantic and syntactic dependencies in the code. This identifies potential sink points (PSPs), which are then used with program slicing to extract candidate vulnerable paths. These paths are ranked using feedback from a graph-based detector to select the most probable vulnerability path.", "result": "Evaluations on the SARD buffer overflow benchmark dataset demonstrated VulPathFinder outperforms both the original SliceLocator and GNNExplainer in discovering paths to PSPs, with superior effectiveness in providing actionable explanations for identified vulnerabilities.", "conclusion": "VulPathFinder presents a machine learning-driven, explainable approach to vulnerability path discovery that enhances generalization and explanatory capabilities compared to rule-based and traditional GNN explainability tools, offering deeper insights into root causes of vulnerabilities."}}
{"id": "2507.17956", "categories": ["cs.CR", "cs.LO"], "pdf": "https://arxiv.org/pdf/2507.17956", "abs": "https://arxiv.org/abs/2507.17956", "authors": ["Russell O'Connor", "Andrew Poelstra"], "title": "Formal Verification of the Safegcd Implementation", "comment": "15 pages; Coq sources can be found at\n  https://github.com/BlockstreamResearch/simplicity/tree/c1dddedd553b403da877377e658f17f0d2184cc4/Coq/C/secp256k1\n  ; Alectryon preview can be viewed at e.g.\n  https://html-preview.github.io/?url=https://github.com/BlockstreamResearch/simplicity/blob/c1dddedd553b403da877377e658f17f0d2184cc4/alectryon/verif_modinv64_impl.v.html", "summary": "The modular inverse is an essential piece of computation required for\nelliptic curve operations used for digital signatures in Bitcoin and other\napplications. A novel approach to the extended Euclidean algorithm has been\ndeveloped by Bernstein and Yang within the last few years and incorporated into\nthe libsecp256k1 cryptographic library used by Bitcoin. However, novel\nalgorithms introduce new risks of errors. To address this we have completed a\ncomputer verified proof of the correctness of (one of) libsecp256k1's modular\ninverse implementations with the Coq proof assistant using the Verifiable C's\nimplementation of separation logic.", "AI": {"tldr": "The paper presents a computer-verified proof of the correctness for the libsecp256k1 modular inverse implementation using Coq and Verifiable C's separation logic, addressing the risk of errors in novel cryptographic algorithms.", "motivation": "The paper aims to mitigate the potential risks of errors in new algorithms (like the novel extended Euclidean algorithm) used for critical cryptographic operations such as Bitcoin's digital signatures, where correctness is vital for security.", "method": "The authors employed the Coq proof assistant and the separation logic framework from Verifiable C to formally verify the modular inverse implementation in libsecp256k1.", "result": "A verified proof demonstrating the correctness of the modular inverse implementation in the libsecp256k1 cryptographic library was successfully completed.", "conclusion": "By rigorously verifying the implementation, the paper ensures the reliability of the modular inverse computation, critical for maintaining security in elliptic curve-based systems like Bitcoin, and sets a precedent for verifying other cryptographic libraries."}}
{"id": "2507.17962", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2507.17962", "abs": "https://arxiv.org/abs/2507.17962", "authors": ["Nowfel Mashnoor", "Mohammad Akyash", "Hadi Kamali", "Kimia Azar"], "title": "TimelyHLS: LLM-Based Timing-Aware and Architecture-Specific FPGA HLS Optimization", "comment": null, "summary": "Achieving timing closure and design-specific optimizations in FPGA-targeted\nHigh-Level Synthesis (HLS) remains a significant challenge due to the complex\ninteraction between architectural constraints, resource utilization, and the\nabsence of automated support for platform-specific pragmas. In this work, we\npropose TimelyHLS, a novel framework integrating Large Language Models (LLMs)\nwith Retrieval-Augmented Generation (RAG) to automatically generate and\niteratively refine HLS code optimized for FPGA-specific timing and performance\nrequirements. TimelyHLS is driven by a structured architectural knowledge base\ncontaining FPGA-specific features, synthesis directives, and pragma templates.\nGiven a kernel, TimelyHLS generates HLS code annotated with both\ntiming-critical and design-specific pragmas. The synthesized RTL is then\nevaluated using commercial toolchains, and simulation correctness is verified\nagainst reference outputs via custom testbenches. TimelyHLS iteratively\nincorporates synthesis logs and performance reports into the LLM engine for\nrefinement in the presence of functional discrepancies. Experimental results\nacross 10 FPGA architectures and diverse benchmarks show that TimelyHLS reduces\nthe need for manual tuning by up to 70%, while achieving up to 4x latency\nspeedup (e.g., 3.85x for Matrix Multiplication, 3.7x for Bitonic Sort) and over\n50% area savings in certain cases (e.g., 57% FF reduction in Viterbi).\nTimelyHLS consistently achieves timing closure and functional correctness\nacross platforms, highlighting the effectiveness of LLM-driven,\narchitecture-aware synthesis in automating FPGA design.", "AI": {"tldr": "TimelyHLS is an LLM-RAG framework that automates FPGA HLS code optimization via architectural knowledge bases, achieving timing closure with up to 70% less manual tuning and significant latency/area improvements.", "motivation": "Current FPGA-targeted HLS struggles with timing closure and platform-specific optimization due to complex architectural constraints and resource tradeoffs, lacking automated support for platform-critical pragmas.", "method": "The framework combines LLMs with RAG, using a structured knowledge base of FPGA features and pragmas to generate and iteratively refine HLS code through synthesis log analysis and performance feedback loops.", "result": "TimelyHLS delivers 4x latency speedups (3.85x for Matrix Multiplication, 3.7x for Bitonic Sort), >50% area savings (57% FF reduction in Viterbi), and eliminates manual tuning on 70% of cases across 10 FPGA architectures and diverse benchmarks.", "conclusion": "LLM-driven, architecture-aware synthesis can effectively address FPGA HLS optimization challenges by integrating domain-specific knowledge with iterative refinement processes, enabling platform-consistent timing closure and performance gains."}}
{"id": "2507.17930", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.17930", "abs": "https://arxiv.org/abs/2507.17930", "authors": ["Vahid Garousi", "Zafar Jafarov"], "title": "How Software Engineers Engage with AI: A Pragmatic Process Model and Decision Framework Grounded in Industry Observations", "comment": null, "summary": "Artificial Intelligence (AI) has the potential to transform Software\nEngineering (SE) by enhancing productivity, efficiency, and decision support.\nTools like GitHub Copilot and ChatGPT have given rise to \"vibe coding\"-an\nexploratory, prompt-driven development style. Yet, how software engineers\nengage with these tools in daily tasks, especially in deciding whether to\ntrust, refine, or reject AI-generated outputs, remains underexplored. This\npaper presents two complementary contributions. First, a pragmatic process\nmodel capturing real-world AI-assisted SE activities, including prompt design,\ninspection, fallback, and refinement. Second, a 2D decision framework that\ncould help developers reason about trade-offs between effort saved and output\nquality. Grounded in practitioner reports and direct observations in three\nindustry settings across Turkiye and Azerbaijan, our work illustrates how\nengineers navigate AI use with human oversight. These models offer structured,\nlightweight guidance to support more deliberate and effective use of AI tools\nin SE, contributing to ongoing discussions on practical human-AI collaboration.", "AI": {"tldr": "This paper analyzes how software engineers use AI tools (e.g., GitHub Copilot, ChatGPT) in daily work, proposing a process model and decision framework to improve human-AI collaboration in software engineering.", "motivation": "The rise of 'vibe coding' and AI-assisted tools in SE highlights a need to understand how developers make trust/refinement/rejection decisions during AI tool usage, as these interactions remain underexplored in practice.", "method": "Mixed-methods approach combining practitioner reports and direct observations from three industry settings in Turkey and Azerbaijan to develop 1) a pragmatic process model capturing SE activities (prompt design, inspection, fallback, refinement) and 2) a trade-off analysis framework for effort vs. output quality.", "result": "Empirically grounded models showing engineers' navigation of AI-assisted workflows with human oversight, providing structured guidance for prompt design, output evaluation, and strategic refinement/rejection decisions.", "conclusion": "The proposed models offer lightweight, practical frameworks for SE teams to optimize AI tool usage by balancing efficiency gains with quality assurance, advancing human-AI collaboration research in industry contexts."}}
{"id": "2507.17978", "categories": ["cs.CR", "cs.AI", "cs.HC", "68P20 (Primary) 68T05, 68T07, 68T10 (Secondary)", "K.6.5; I.2.6; I.2.7; C.2.0"], "pdf": "https://arxiv.org/pdf/2507.17978", "abs": "https://arxiv.org/abs/2507.17978", "authors": ["Paulo Mendes", "Eva Maia", "Isabel Pra\u00e7a"], "title": "MeAJOR Corpus: A Multi-Source Dataset for Phishing Email Detection", "comment": "8 pages, 2 tables, WI-IAT 2025 conference", "summary": "Phishing emails continue to pose a significant threat to cybersecurity by\nexploiting human vulnerabilities through deceptive content and malicious\npayloads. While Machine Learning (ML) models are effective at detecting\nphishing threats, their performance largely relies on the quality and diversity\nof the training data. This paper presents MeAJOR (Merged email Assets from\nJoint Open-source Repositories) Corpus, a novel, multi-source phishing email\ndataset designed to overcome critical limitations in existing resources. It\nintegrates 135894 samples representing a broad number of phishing tactics and\nlegitimate emails, with a wide spectrum of engineered features. We evaluated\nthe dataset's utility for phishing detection research through systematic\nexperiments with four classification models (RF, XGB, MLP, and CNN) across\nmultiple feature configurations. Results highlight the dataset's effectiveness,\nachieving 98.34% F1 with XGB. By integrating broad features from multiple\ncategories, our dataset provides a reusable and consistent resource, while\naddressing common challenges like class imbalance, generalisability and\nreproducibility.", "AI": {"tldr": "The paper introduces MeAJOR Corpus, a new phishing email dataset with 135,894 samples that addresses class imbalance and boosts ML model performance to 98.34% F1 using XGBoost by integrating diverse features from open-source sources.", "motivation": "Existing phishing datasets lack quality, diversity, and address challenges like class imbalance, generalisability, and reproducibility, limiting ML model effectiveness.", "method": "Integrated 135894 phishing/legitimate emails from joint open-source repos with broad engineered features; tested across four models (RF, XGB, MLP, CNN) with varying feature configs.", "result": "Achieved 98.34% F1 using XGBoost, demonstrating strong effectiveness with features spanning multiple categories, enhancing generalizability and reproducibility.", "conclusion": "MeAJOR Corpus offers a reusable, consistent resource overcoming class imbalance and generalisability issues, beneficial for phishing detection research across models and configurations."}}
{"id": "2507.17991", "categories": ["cs.SE", "cs.IR"], "pdf": "https://arxiv.org/pdf/2507.17991", "abs": "https://arxiv.org/abs/2507.17991", "authors": ["Peter Eckmann", "Adrian Barnett", "Alexandra Bannach-Brown", "Elisa Pilar Bascunan Atria", "Guillaume Cabanac", "Louise Delwen Owen Franzen", "Ma\u0142gorzata Anna Gazda", "Kaitlyn Hair", "James Howison", "Halil Kilicoglu", "Cyril Labbe", "Sarah McCann", "Vladislav Nachev", "Martijn Roelandse", "Maia Salholz-Hillel", "Robert Schulz", "Gerben ter Riet", "Colby Vorland", "Anita Bandrowski", "Tracey Weissgerber"], "title": "Use as Directed? A Comparison of Software Tools Intended to Check Rigor and Transparency of Published Work", "comment": null, "summary": "The causes of the reproducibility crisis include lack of standardization and\ntransparency in scientific reporting. Checklists such as ARRIVE and CONSORT\nseek to improve transparency, but they are not always followed by authors and\npeer review often fails to identify missing items. To address these issues,\nthere are several automated tools that have been designed to check different\nrigor criteria. We have conducted a broad comparison of 11 automated tools\nacross 9 different rigor criteria from the ScreenIT group. We found some\ncriteria, including detecting open data, where the combination of tools showed\na clear winner, a tool which performed much better than other tools. In other\ncases, including detection of inclusion and exclusion criteria, the combination\nof tools exceeded the performance of any one tool. We also identified key areas\nwhere tool developers should focus their effort to make their tool maximally\nuseful. We conclude with a set of insights and recommendations for stakeholders\nin the development of rigor and transparency detection tools. The code and data\nfor the study is available at https://github.com/PeterEckmann1/tool-comparison.", "AI": {"tldr": "The paper evaluates 11 automated tools for enhancing scientific rigor and transparency, identifies performance leaders in specific criteria, and provides recommendations for tool development and use.", "motivation": "The reproducibility crisis in science is driven by inconsistent adherence to reporting standards and ineffective peer review in detecting missing information. Existing checklists like ARRIVE and CONSORT face compliance challenges, necessitating reliable automated solutions.", "method": "Conducted a comparative analysis of 11 automated tools across 9 rigor criteria from the ScreenIT framework, assessing their effectiveness in detecting reporting issues in scientific abstracts.", "result": "Some tools excelled in specific criteria (e.g., open data detection), while others improved through combination (e.g., inclusion/exclusion criteria check). Key developmental areas for tools were identified to maximize utility.", "conclusion": "Proposes actionable insights and recommendations to stakeholders for improving tool design and integration, emphasizing collaboration and targeted enhancements; code and data are publicly available for replicability."}}
{"id": "2507.18034", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2507.18034", "abs": "https://arxiv.org/abs/2507.18034", "authors": ["Haonan An", "Guang Hua", "Hangcheng Cao", "Zhengru Fang", "Guowen Xu", "Susanto Rahardja", "Yuguang Fang"], "title": "Removing Box-Free Watermarks for Image-to-Image Models via Query-Based Reverse Engineering", "comment": null, "summary": "The intellectual property of deep generative networks (GNets) can be\nprotected using a cascaded hiding network (HNet) which embeds watermarks (or\nmarks) into GNet outputs, known as box-free watermarking. Although both GNet\nand HNet are encapsulated in a black box (called operation network, or ONet),\nwith only the generated and marked outputs from HNet being released to end\nusers and deemed secure, in this paper, we reveal an overlooked vulnerability\nin such systems. Specifically, we show that the hidden GNet outputs can still\nbe reliably estimated via query-based reverse engineering, leaking the\ngenerated and unmarked images, despite the attacker's limited knowledge of the\nsystem. Our first attempt is to reverse-engineer an inverse model for HNet\nunder the stringent black-box condition, for which we propose to exploit the\nquery process with specially curated input images. While effective, this method\nyields unsatisfactory image quality. To improve this, we subsequently propose\nan alternative method leveraging the equivalent additive property of box-free\nmodel watermarking and reverse-engineering a forward surrogate model of HNet,\nwith better image quality preservation. Extensive experimental results on image\nprocessing and image generation tasks demonstrate that both attacks achieve\nimpressive watermark removal success rates (100%) while also maintaining\nexcellent image quality (reaching the highest PSNR of 34.69 dB), substantially\noutperforming existing attacks, highlighting the urgent need for robust\ndefensive strategies to mitigate the identified vulnerability in box-free model\nwatermarking.", "AI": {"tldr": "The paper reveals a vulnerability in box-free model watermarking, showing attackers can reverse-engineer hidden generative network outputs despite black-box encryption, achieving 100% watermark removal with high-quality images (PSNR 34.69 dB), necessitating stronger IP protection strategies.", "motivation": "This paper challenges the assumed security of black-box HNet watermarking for deep generative networks, highlighting risks when attackers exploit query-based reverse engineering to bypass IP protections.", "method": "Two attack approaches are proposed: (1) Query-based reverse engineering of an inverse HNet model using curated input images under black-box conditions, and (2) Leveraging the additive property of watermarking to build a forward surrogate model for improved image quality preservation.", "result": "Both attacks achieve 100% watermark removal success with strong PSNR metrics (34.69 dB maximum), significantly outperforming existing attack methods in security and image fidelity.", "conclusion": "Box-free model watermarking has critical vulnerabilities to reverse engineering attacks. The results demonstrate the inadequacy of current defensive strategies and emphasize the urgent need for robust IP protection mechanisms against these threats."}}
{"id": "2507.18029", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.18029", "abs": "https://arxiv.org/abs/2507.18029", "authors": ["Xiang Echo Chen", "Wenhan Zhu", "Guoshuai Albert Shi", "Michael W. Godfrey"], "title": "An Empirical Study of GenAI Adoption in Open-Source Game Development: Tools, Tasks, and Developer Challenges", "comment": null, "summary": "The growing capabilities of generative AI (GenAI) have begun to reshape how\ngames are designed and developed, offering new tools for content creation,\ngameplay simulation, and design ideation. While prior research has explored\ntraditional uses of AI in games, such as controlling agents or generating\nprocedural content. There is limited empirical understanding of how GenAI is\nadopted by developers in real-world contexts, especially within the open-source\ncommunity. This study aims to explore how GenAI technologies are discussed,\nadopted, and integrated into open-source game development by analyzing issue\ndiscussions on GitHub. We investigate the tools, tasks, and challenges\nassociated with GenAI by comparing GenAI-related issues to those involving\ntraditional AI (TradAI) and NonAI topics. Our goal is to uncover how GenAI\ndiffers from other approaches in terms of usage patterns, developer concerns,\nand integration practices. To address this objective, we construct a dataset of\nopen-source game repositories that discuss AI-related topics. We apply open\ncard sorting and thematic analysis to a stratified sample of GitHub issues,\nlabelling each by type and content. These annotations enable comparative\nanalysis across GenAI, TradAI, and NonAI groups, and provide insight into how\nGenAI is shaping the workflows and pain points of open-source game developers.", "AI": {"tldr": "Analyzes GenAI adoption in open-source game development via GitHub issue discussions, comparing it to traditional AI (TradAI) and non-AI (NonAI) approaches to identify usage patterns, challenges, and integration practices.", "motivation": "Prior research focused on traditional AI in gaming, with limited empirical understanding of real-world GenAI adoption, especially in open-source communities.", "method": "Constructed a dataset of open-source game repositories, applied open card sorting and thematic analysis to stratified GitHub issues samples, and annotated issues by type/content for cross-group comparisons.", "result": "Revealed distinct GenAI usage patterns vs. TradAI/NonAI, highlighting specific tools, tasks, and challenges in open-source game development contexts.", "conclusion": "GenAI is redefining game development workflows but faces unique integration challenges requiring tailored tools and developer support strategies, particularly in open-source ecosystems."}}
{"id": "2507.18036", "categories": ["cs.CR", "cs.CV"], "pdf": "https://arxiv.org/pdf/2507.18036", "abs": "https://arxiv.org/abs/2507.18036", "authors": ["Haonan An", "Guang Hua", "Yu Guo", "Hangcheng Cao", "Susanto Rahardja", "Yuguang Fang"], "title": "NWaaS: Nonintrusive Watermarking as a Service for X-to-Image DNN", "comment": null, "summary": "The intellectual property of deep neural network (DNN) models can be\nprotected with DNN watermarking, which embeds copyright watermarks into model\nparameters (white-box), model behavior (black-box), or model outputs\n(box-free), and the watermarks can be subsequently extracted to verify model\nownership or detect model theft. Despite recent advances, these existing\nmethods are inherently intrusive, as they either modify the model parameters or\nalter the structure. This natural intrusiveness raises concerns about\nwatermarking-induced shifts in model behavior and the additional cost of\nfine-tuning, further exacerbated by the rapidly growing model size. As a\nresult, model owners are often reluctant to adopt DNN watermarking in practice,\nwhich limits the development of practical Watermarking as a Service (WaaS)\nsystems. To address this issue, we introduce Nonintrusive Watermarking as a\nService (NWaaS), a novel trustless paradigm designed for X-to-Image models, in\nwhich we hypothesize that with the model untouched, an owner-defined watermark\ncan still be extracted from model outputs. Building on this concept, we propose\nShadowMark, a concrete implementation of NWaaS which addresses critical\ndeployment challenges by establishing a robust and nonintrusive side channel in\nthe protected model's black-box API, leveraging a key encoder and a watermark\ndecoder. It is significantly distinctive from existing solutions by attaining\nthe so-called absolute fidelity and being applicable to different DNN\narchitectures, while being also robust against existing attacks, eliminating\nthe fidelity-robustness trade-off. Extensive experiments on image-to-image,\nnoise-to-image, noise-and-text-to-image, and text-to-image models, demonstrate\nthe efficacy and practicality of ShadowMark for real-world deployment of\nnonintrusive DNN watermarking.", "AI": {"tldr": "This paper introduces ShadowMark, a nonintrusive DNN watermarking framework for X-to-Image models that preserves absolute model fidelity while enabling robust watermark extraction through a black-box API side channel, eliminating the need for parameter/structure modification and addressing the fidelity-robustness trade-off.", "motivation": "Existing DNN watermarking solutions inherently modify model parameters or architectures, causing behavior shifts and requiring costly fine-tuning. The growing model size and resulting reluctance among model owners hinder practical Watermarking as a Service (WaaS) adoption.", "method": "Presents Nonintrusive Watermarking as a Service (NWaaS), implementing ShadowMark via a key encoder (to bind watermarks) and watermark decoder (to extract watermarks) that create a robust side channel in the model's black-box API without altering the model itself.", "result": "Demonstrates through extensive experiments on diverse X-to-Image tasks the framework achieves nonintrusive watermarking with absolute fidelity across multiple DNN architectures while maintaining robustness against existing attacks.", "conclusion": "ShadowMark addresses critical deployment challenges in DNN watermarking by decoupling fidelity and robustness, offering a practical, trustworthy, and architecture-agnostic solution for protecting model intellectual property without behavioral impact."}}
{"id": "2507.18037", "categories": ["cs.SE", "cs.CR"], "pdf": "https://arxiv.org/pdf/2507.18037", "abs": "https://arxiv.org/abs/2507.18037", "authors": ["Sivana Hamer", "Jacob Bowen", "Md Nazmul Haque", "Chris Madden", "Laurie Williams"], "title": "Your ATs to Ts: MITRE ATT&CK Attack Technique to P-SSCRM Task Mapping", "comment": "Mapping generated from: arXiv:2503.12192", "summary": "The MITRE Adversarial Tactics, Techniques and Common Knowledge (MITRE ATT&CK)\nAttack Technique to Proactive Software Supply Chain Risk Management Framework\n(P-SSCRM) Task mapping described in this document helps software organizations\nto determine how different tasks mitigate the attack techniques of software\nsupply chain attacks. The mapping was created through four independent\nstrategies to find agreed-upon mappings. Because each P-SSCRM task is mapped to\none or more tasks from the 10 frameworks, the mapping we provide is also a\nmapping between MITRE ATT&CK and other prominent government and industry\nframeworks.", "AI": {"tldr": "The paper presents a mapping between MITRE ATT&CK attack techniques and the P-SSCRM framework, using four strategies to align tasks across 10 frameworks for proactive software supply chain risk mitigation.", "motivation": "This mapping addresses the need for software organizations to identify tasks that mitigate known cyber attack techniques within the software supply chain, enhancing risk management effectiveness.", "method": "The authors employed four independent mapping strategies to link P-SSCRM tasks with MITRE ATT&CK techniques and additional frameworks, ensuring consensus and cross-referencing between standards.", "result": "A comprehensive task-technique mapping is developed, demonstrating how P-SSCRM tasks mitigate specific MITRE ATT&CK techniques while simultaneously aligning with 10 external frameworks.", "conclusion": "The mapping provides a standardized reference for organizations to proactively address software supply chain risks through task-based mitigation, and serves as a cross-framework alignment tool between MITRE ATT&CK and industry/government standards."}}
{"id": "2507.18053", "categories": ["cs.CR", "cs.CL"], "pdf": "https://arxiv.org/pdf/2507.18053", "abs": "https://arxiv.org/abs/2507.18053", "authors": ["Haoran Gao", "Yuanhe Zhang", "Zhenhong Zhou", "Lei Jiang", "Fanyu Meng", "Yujia Xiao", "Kun Wang", "Yang Liu", "Junlan Feng"], "title": "RECALLED: An Unbounded Resource Consumption Attack on Large Vision-Language Models", "comment": null, "summary": "Resource Consumption Attacks (RCAs) have emerged as a significant threat to\nthe deployment of Large Language Models (LLMs). With the integration of vision\nmodalities, additional attack vectors exacerbate the risk of RCAs in large\nvision-language models (LVLMs). However, existing red-teaming studies have\nlargely overlooked visual inputs as a potential attack surface, resulting in\ninsufficient mitigation strategies against RCAs in LVLMs. To address this gap,\nwe propose RECALLED (\\textbf{RE}source \\textbf{C}onsumption \\textbf{A}ttack on\n\\textbf{L}arge Vision-\\textbf{L}anguag\\textbf{E} Mo\\textbf{D}els), the first\napproach for exploiting visual modalities to trigger unbounded RCAs\nred-teaming. First, we present \\textit{Vision Guided Optimization}, a\nfine-grained pixel-level optimization, to obtain \\textit{Output Recall}\nadversarial perturbations, which can induce repeating output. Then, we inject\nthe perturbations into visual inputs, triggering unbounded generations to\nachieve the goal of RCAs. Additionally, we introduce \\textit{Multi-Objective\nParallel Losses} to generate universal attack templates and resolve\noptimization conflicts when intending to implement parallel attacks. Empirical\nresults demonstrate that RECALLED increases service response latency by over 26\n$\\uparrow$, resulting in an additional 20\\% increase in GPU utilization and\nmemory consumption. Our study exposes security vulnerabilities in LVLMs and\nestablishes a red-teaming framework that can facilitate future defense\ndevelopment against RCAs.", "AI": {"tldr": "The paper introduces RECALLED, a first-of-its-kind method exploiting visual inputs to trigger unbounded resource consumption attacks (RCAs) in large vision-language models (LVLMs) through adversarial perturbations and parallel multi-objective optimization, significantly increasing service latency and GPU utilization.", "motivation": "Current red-teaming studies on RCAs for LLMs overlook visual modality attack surfaces, leaving LVLMs vulnerable to resource depletion via image/text inputs.", "method": "1) Vision Guided Optimization: Pixel-level adversarial perturbations causing output repetition.\n2) Fine-grained attack injection into visual inputs for unbounded generation.\n3) Multi-Objective Parallel Losses to create universal attack templates and resolve optimization conflicts.", "result": "RCAs using RECALLED increased latency by \u00d726 and raised GPU utilization/memory consumption by 20%, demonstrating practical effectiveness against LVLMs.", "conclusion": "This work uncovers critical security vulnerabilities in LVLMs when handling visual inputs and establishes a red-teaming framework for targeted defense development against resource consumption attacks."}}
{"id": "2507.18039", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.18039", "abs": "https://arxiv.org/abs/2507.18039", "authors": ["Ahmad D. Suleiman", "Yiming Tang", "Daqing Hou"], "title": "Factors Impacting Faculty Adoption of Project-Based Learning in Computing Education: a Survey", "comment": "Accepted at IEEE Frontiers in Education (FIE) 2025. This work has\n  been submitted to the IEEE for possible publication", "summary": "This research full paper investigates the factors influencing computing\neducators' adoption of project-based learning (PjBL) in software engineering\nand computing curricula. Recognized as a student-centered pedagogical approach,\nPjBL has the potential to enhance student motivation, engagement, critical\nthinking, collaboration, and problem-solving skills. Despite these benefits,\nfaculty adoption remains inconsistent due to challenges such as insufficient\ninstitutional support, time constraints, limited training opportunities,\ndesigning or sourcing projects, and aligning them with course objectives. This\nresearch explores these barriers and investigates the strategies and resources\nthat facilitate a successful adoption. Using a mixed-methods approach, data\nfrom 80 computing faculty were collected through an online survey comprising\nclosed-ended questions to quantify barriers, enablers, and resource needs,\nalong with an open-ended question to gather qualitative insights. Quantitative\ndata were analyzed using statistical methods, while qualitative responses\nunderwent thematic analysis. Results reveal that while PjBL is widely valued,\nits adoption is often selective and impacted by challenges in planning and\nmanaging the learning process, designing suitable projects, and a lack of\ninstitutional support, such as time, funding, and teaching assistants. Faculty\nare more likely to adopt or sustain PjBL when they have access to peer\ncollaboration, professional development, and institutional incentives. In\naddition, sourcing projects from research, industry partnerships, and borrowing\nfrom peers emerged as key facilitators for new projects. These findings\nunderscore the need for systemic support structures to empower faculty to\nexperiment with and scale PjBL practices.", "AI": {"tldr": "This study examines why computing educators adopt project-based learning (PjBL) and identifies barriers and enablers, highlighting the need for institutional support and professional development.", "motivation": "Project-based learning (PjBL) can enhance student motivation and skills, but educators face inconsistent adoption due to institutional challenges and resource limitations.", "method": "Mixed-methods approach with an online survey of 80 computing faculty, combining closed-ended questions (quantitative analysis) and open-ended questions (thematic analysis).", "result": "Key barriers include planning challenges, project design difficulties, lack of institutional support; enablers involve peer collaboration, training, incentives, and project sources like research or industry partnerships.", "conclusion": "Systemic support structures, including resources, funding, and professional development, are critical to enable widespread adoption and scaling of PjBL in computing education."}}
{"id": "2507.18075", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2507.18075", "abs": "https://arxiv.org/abs/2507.18075", "authors": ["Jacob Mahon", "Chenxi Hou", "Zhihao Yao"], "title": "PyPitfall: Dependency Chaos and Software Supply Chain Vulnerabilities in Python", "comment": null, "summary": "Python software development heavily relies on third-party packages. Direct\nand transitive dependencies create a labyrinth of software supply chains. While\nit is convenient to reuse code, vulnerabilities within these dependency chains\ncan propagate through dependencies, potentially affecting down-stream packages\nand applications. PyPI, the official Python package repository, hosts many\npackages and lacks a comprehensive analysis of the prevalence of vulnerable\ndependencies. This paper introduces PyPitfall, a quantitative analysis of\nvulnerable dependencies across the PyPI ecosystem. We analyzed the dependency\nstructures of 378,573 PyPI packages and identified 4,655 packages that\nexplicitly require at least one known-vulnerable version and 141,044 packages\nthat permit vulnerable versions within specified ranges. By characterizing the\necosystem-wide dependency landscape and the security impact of transitive\ndependencies, we aim to raise awareness of Python software supply chain\nsecurity.", "AI": {"tldr": "This paper analyzes vulnerable dependencies in the Python package ecosystem (PyPI) using PyPitfall, identifying 4,655 packages that explicitly depend on known-vulnerable versions and 141,044 packages permitting such versions. The study highlights supply chain security risks.", "motivation": "Third-party package reuse in Python creates complex dependency chains where vulnerabilities can propagate, but PyPI lacks a systematic analysis of their prevalence, risking widespread security issues in downstream applications.", "method": "The authors quantitatively analyzed 378,573 PyPI packages' dependency structures, detecting vulnerable versions through explicit requirements and version range constraints.", "result": "4,655 packages explicitly required known-vulnerable versions, while 141,044 allowed vulnerable versions within defined dependency ranges, demonstrating significant supply chain security exposure.", "conclusion": "The study provides ecosystem-wide evidence of vulnerable dependencies in PyPI, aiming to increase transparency and awareness to improve Python software supply chain security practices."}}
{"id": "2507.18062", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.18062", "abs": "https://arxiv.org/abs/2507.18062", "authors": ["Edward Abrokwah", "Taher A. Ghaleb"], "title": "An Empirical Study of Complexity, Heterogeneity, and Compliance of GitHub Actions Workflows", "comment": "Registered Report Accepted at the 41st IEEE International Conference\n  on Software Maintenance and Evolution 2025 (ICSME'25)", "summary": "Continuous Integration (CI) has evolved from a tooling strategy to a\nfundamental mindset in modern CI engineering. It enables teams to develop,\ntest, and deliver software rapidly and collaboratively. Among CI services,\nGitHub Actions (GHA) has emerged as a dominant service due to its deep\nintegration with GitHub and a vast ecosystem of reusable workflow actions.\nAlthough GHA provides official documentation and community-supported best\npractices, there appears to be limited empirical understanding of how\nopen-source real-world CI workflows align with such practices. Many workflows\nmight be unnecessarily complex and not aligned with the simplicity goals of CI\npractices. This study will investigate the structure, complexity,\nheterogeneity, and compliance of GHA workflows in open-source software\nrepositories. Using a large dataset of GHA workflows from Java, Python, and C++\nrepositories, our goal is to (a) identify workflow complexities, (b) analyze\nrecurring and heterogeneous structuring patterns, (c) assess compliance with\nGHA best practices, and (d) uncover differences in CI pipeline design across\nprogramming languages. Our findings are expected to reveal both areas of strong\nadherence to best practices and areas for improvement where needed. These\ninsights will also have implications for CI services, as they will highlight\nthe need for clearer guidelines and comprehensive examples in CI documentation.", "AI": {"tldr": "This study empirically analyzes GitHub Actions workflows in open-source software to assess complexity, structuring patterns, best practice compliance, and language-specific differences in CI pipeline design.", "motivation": "Dominant CI service GHA lacks empirical understanding of real-world workflow adherence to official documentation and community practices, potentially leading to unnecessary complexity.", "method": "Analyzed GHA workflow structure, complexity, heterogeneity, and compliance with best practices using a dataset of Java, Python, and C++ repositories.", "result": "Expected to reveal varying adherence to best practices across languages, including both strengths and weaknesses in workflow design.", "conclusion": "Finds indicate GHA users may both benefit from and confuse aspects of current CI guidelines, suggesting the need for clearer documentation and targeted improvements in CI service design."}}
{"id": "2507.18157", "categories": ["cs.CR", "quant-ph", "Primary:94A60, Secondary:68P25, Tertiary:81P94"], "pdf": "https://arxiv.org/pdf/2507.18157", "abs": "https://arxiv.org/abs/2507.18157", "authors": ["Chao Liu", "Shuai Zhao", "Chenhao Jia", "Gengran Hu", "Tingting Cui"], "title": "An Improved ChaCha Algorithm Based on Quantum Random Number", "comment": "20 pages,4 figures", "summary": "Due to the merits of high efficiency and strong security against timing and\nside-channel attacks, ChaCha has been widely applied in real-time communication\nand data streaming scenarios. However, with the rapid development of\nAI-assisted cryptanalysis and quantum computing technologies, there are serious\nchallenges to the secure implementation of ChaCha cipher. To further strengthen\nthe security of ChaCha cipher, we propose an improved variant based on quantum\nrandom numbers, i.e., Quantum Random Number Enhanced ChaCha (QRE-ChaCha).\nSpecifically, the design XORs the initial constants with quantum random numbers\nand periodically injects quantum random numbers into selected state words\nduring odd rounds to enhance diffusion. Compared with the original ChaCha, the\npresent variant shows stronger resistance to differential attacks and generates\na keystream with statistical randomness, thereby offering increased robustness\nagainst both classical and quantum attacks. To evaluate the security and\nperformance of the present ChaCha, our analysis proceeds in three main parts.\nFirstly, we analyze its theoretical security in terms of quantum randomness and\nattack testing, and conduct differential cryptanalysis with an automated search\nmethod based on the Boolean satisfiability problem (SAT). Secondly, we subject\nthe keystream generated by the cipher to randomness tests using the NIST\nstatistical test suite and the GM/T 0005-2021 randomness testing standard.\nFinally, we assess its encryption and decryption performance by measuring its\nencryption speed on files of various sizes. According to the results, the\npresent ChaCha is significantly improved to resist differential attacks while\nmaintaining the high efficiency of the original ChaCha cipher, and its\nkeystream successfully passes statistical randomness tests using the NIST and\nGM/T 0005-2021 standards, meeting cryptographic application requirements.", "AI": {"tldr": "QRE-ChaCha enhances ChaCha cipher's security against classical and quantum attacks by integrating quantum random numbers in initial constants and state words, maintaining high efficiency.", "motivation": "Existing ChaCha implementations face vulnerabilities from AI cryptanalysis and quantum computing advancements, requiring strengthened security measures without sacrificing efficiency.", "method": "QRE-ChaCha modifies ChaCha by XORing initial constants with quantum random numbers and periodically injecting them into selected state words during odd rounds to improve diffusion.", "result": "Demonstrated stronger resistance to differential attacks, passed NIST and GM/T 0005-2021 randomness tests, and maintained comparable encryption/decryption performance through variable-size file testing.", "conclusion": "Quantum random number integration effectively reinforces ChaCha's security against both classical and quantum threats while preserving its real-time communication applicability."}}
{"id": "2507.18081", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.18081", "abs": "https://arxiv.org/abs/2507.18081", "authors": ["Carol Wong", "Mai Abe", "Silvia De Benedictis", "Marissa Halim", "Anthony Peruma"], "title": "Identifier Name Similarities: An Exploratory Study", "comment": "The 19th ACM/IEEE International Symposium on Empirical Software\n  Engineering and Measurement - Emerging Results and Vision Track", "summary": "Identifier names, which comprise a significant portion of the codebase, are\nthe cornerstone of effective program comprehension. However, research has shown\nthat poorly chosen names can significantly increase cognitive load and hinder\ncollaboration. Even names that appear readable in isolation may lead to\nmisunderstandings in contexts when they closely resemble other names in either\nstructure or functionality. In this exploratory study, we present our\npreliminary findings on the occurrence of identifier name similarity in\nsoftware projects through the development of a taxonomy that categorizes\ndifferent forms of identifier name similarity. We envision our initial taxonomy\nproviding researchers with a platform to analyze and evaluate the impact of\nidentifier name similarity on code comprehension, maintainability, and\ncollaboration among developers, while also allowing for further refinement and\nexpansion of the taxonomy.", "AI": {"tldr": "This exploratory study introduces a taxonomy of identifier name similarity in software projects to understand its impact on code comprehension and collaboration, providing a platform for future research.", "motivation": "Poorly chosen identifier names in software projects can increase cognitive load and hinder collaboration, especially when similar names exist in structure or functionality.", "method": "The authors developed a taxonomy categorizing different forms of identifier name similarity through an exploratory study.", "result": "The taxonomy highlights various types of identifier name similarity, offering examples and preliminary evidence of their occurrence in software projects.", "conclusion": "The proposed taxonomy serves as a foundation for analyzing the effects of identifier name similarity on code maintainability, enabling further refinement and validation of these findings."}}
{"id": "2507.18215", "categories": ["cs.CR", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.18215", "abs": "https://arxiv.org/abs/2507.18215", "authors": ["Chang Gong", "Zhongwen Li", "Xiaoqi Li"], "title": "Information Security Based on LLM Approaches: A Review", "comment": null, "summary": "Information security is facing increasingly severe challenges, and\ntraditional protection means are difficult to cope with complex and changing\nthreats. In recent years, as an emerging intelligent technology, large language\nmodels (LLMs) have shown a broad application prospect in the field of\ninformation security. In this paper, we focus on the key role of LLM in\ninformation security, systematically review its application progress in\nmalicious behavior prediction, network threat analysis, system vulnerability\ndetection, malicious code identification, and cryptographic algorithm\noptimization, and explore its potential in enhancing security protection\nperformance. Based on neural networks and Transformer architecture, this paper\nanalyzes the technical basis of large language models and their advantages in\nnatural language processing tasks. It is shown that the introduction of large\nlanguage modeling helps to improve the detection accuracy and reduce the false\nalarm rate of security systems. Finally, this paper summarizes the current\napplication results and points out that it still faces challenges in model\ntransparency, interpretability, and scene adaptability, among other issues. It\nis necessary to explore further the optimization of the model structure and the\nimprovement of the generalization ability to realize a more intelligent and\naccurate information security protection system.", "AI": {"tldr": "This paper examines the application of large language models (LLMs) in enhancing information security, highlighting their roles in threat detection and analysis while addressing challenges like model transparency and adaptability.", "motivation": "Traditional information security measures struggle with complex and evolving threats, necessitating intelligent solutions like LLMs to improve detection and reduce false alarms.", "method": "Systematic review of LLM applications across malicious behavior prediction, network threat analysis, vulnerability detection, and cryptographic optimization, analyzing technical foundations based on neural networks and Transformer architecture.", "result": "LLMs demonstrate improved detection accuracy and reduced false alarm rates in security systems compared to conventional methods.", "conclusion": "While LLMs show promise, challenges in transparency, interpretability, and adaptability remain; future optimization of model structures and generalization capabilities will be critical for advancing intelligent security protection."}}
{"id": "2507.18105", "categories": ["cs.SE", "cs.CR"], "pdf": "https://arxiv.org/pdf/2507.18105", "abs": "https://arxiv.org/abs/2507.18105", "authors": ["Yujie Ma", "Lili Quan", "Xiaofei Xie", "Qiang Hu", "Jiongchi Yu", "Yao Zhang", "Sen Chen"], "title": "Understanding the Supply Chain and Risks of Large Language Model Applications", "comment": "26 pages", "summary": "The rise of Large Language Models (LLMs) has led to the widespread deployment\nof LLM-based systems across diverse domains. As these systems proliferate,\nunderstanding the risks associated with their complex supply chains is\nincreasingly important. LLM-based systems are not standalone as they rely on\ninterconnected supply chains involving pretrained models, third-party\nlibraries, datasets, and infrastructure. Yet, most risk assessments narrowly\nfocus on model or data level, overlooking broader supply chain vulnerabilities.\nWhile recent studies have begun to address LLM supply chain risks, there\nremains a lack of benchmarks for systematic research.\n  To address this gap, we introduce the first comprehensive dataset for\nanalyzing and benchmarking LLM supply chain security. We collect 3,859\nreal-world LLM applications and perform interdependency analysis, identifying\n109,211 models, 2,474 datasets, and 9,862 libraries. We extract model\nfine-tuning paths, dataset reuse, and library reliance, mapping the ecosystem's\nstructure. To evaluate security, we gather 1,555 risk-related issues-50 for\napplications, 325 for models, 18 for datasets, and 1,229 for libraries from\npublic vulnerability databases.\n  Using this dataset, we empirically analyze component dependencies and risks.\nOur findings reveal deeply nested dependencies in LLM applications and\nsignificant vulnerabilities across the supply chain, underscoring the need for\ncomprehensive security analysis. We conclude with practical recommendations to\nguide researchers and developers toward safer, more trustworthy LLM-enabled\nsystems.", "AI": {"tldr": "This paper introduces the first comprehensive dataset for analyzing LLM supply chain security, mapping dependencies across 3,859 real-world applications and identifying 1,555 risk-related issues to highlight systemic vulnerabilities and propose safety recommendations.", "motivation": "LLM-based systems rely on complex, interconnected supply chains with overlooked security risks - most assessments focus narrowly on models or data, but infrastructure, libraries, and dataset dependencies harbor critical vulnerabilities requiring systematic benchmarking.", "method": "The authors collected 3,859 real-world LLM applications, performed interdependency analysis to identify 109,211 models, 2,474 datasets, and 9,862 libraries, mapped component relationships through fine-tuning paths and reuse patterns, and extracted 1,555 supply chain security issues from public vulnerability databases.", "result": "Analysis revealed deeply nested dependencies in LLM applications and significant security vulnerabilities across all supply chain components (applications:50 issues, models:325, datasets:18, libraries:1,229), demonstrating the need for holistic risk assessment frameworks for LLM ecosystems.", "conclusion": "The paper establishes a benchmark for LLM supply chain security analysis, emphasizing the importance of comprehensive dependency mapping and risk evaluation, and provides actionable recommendations to enhance the security of interconnected LLM components in real-world systems."}}
{"id": "2507.18249", "categories": ["cs.CR", "cs.SY", "eess.SY"], "pdf": "https://arxiv.org/pdf/2507.18249", "abs": "https://arxiv.org/abs/2507.18249", "authors": ["Muhammad M. Roomi", "S. M. Suhail Hussain", "Ee-Chien Chang", "David M. Nicol", "Daisuke Mashima"], "title": "Auto-SGCR: Automated Generation of Smart Grid Cyber Range Using IEC 61850 Standard Models", "comment": "12 pages", "summary": "Digitalization of power grids have made them increasingly susceptible to\ncyber-attacks in the past decade. Iterative cybersecurity testing is\nindispensable to counter emerging attack vectors and to ensure dependability of\ncritical infrastructure. Furthermore, these can be used to evaluate\ncybersecurity configuration, effectiveness of the cybersecurity measures\nagainst various attack vectors, as well as to train smart grid cybersecurity\nexperts defending the system. Enabling extensive experiments narrows the gap\nbetween academic research and production environment. A high-fidelity cyber\nrange is vital as it is often infeasible to conduct such experiments and\ntraining using production environment. However, the design and implementation\nof cyber range requires extensive domain knowledge of physical and cyber aspect\nof the infrastructure. Furthermore, costs incurred for setup and maintenance of\ncyber range are significant. Moreover, most existing smart grid cyber ranges\nare designed as a one-off, proprietary system, and are limited in terms of\nconfigurability, accessibility, portability, and reproducibility. To address\nthese challenges, an automated Smart grid Cyber Range generation framework is\npresented in this paper. Initially a human-/machine-friendly, XML-based\nmodeling language called Smart Grid Modeling Language was defined, which\nincorporates IEC 61850 System Configuration Language files. Subsequently, a\ntoolchain to parse SG-ML model files and automatically instantiate a functional\nsmart grid cyber range was developed. The developed SG-ML models can be easily\nshared and/or modified to reproduce or customize for any cyber range. The\napplication of Auto-SGCR is demonstrated through case studies with large-scale\nsubstation models. The toolchain along with example SG-ML models have been\nopen-sourced.", "AI": {"tldr": "The paper presents Auto-SGCR, an automated framework for generating high-fidelity, customizable smart grid cyber ranges using an XML-based modeling language.", "motivation": "Digitalization has increased power grid vulnerability to cyber-attacks, necessitating iterative testing, configuration evaluation, and expert training. Existing cyber ranges are costly, inflexible, and lack configurability/reproducibility.", "method": "1. Defined Smart Grid Modeling Language (SG-ML), an XML-based language incorporating IEC 61850 SCL files<br>2. Developed an automated toolchain to parse SG-ML and instantiate smart grid cyber ranges.<br>3. Enabled model sharing/modification for customization and reuse.", "result": "Case studies with large-scale substation models demonstrate Auto-SGCR's effectiveness. Framework mitigates existing cyber range limitations regarding configurability, accessibility, portability, and reproducibility through automation.", "conclusion": "Auto-SGCR reduces the research-production gap by enabling easy customization, reuse, and cost-effective smart grid security training/experiments. Open-sourcing the toolchain and SG-ML models enhances collaboration and adoption."}}
{"id": "2507.18130", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.18130", "abs": "https://arxiv.org/abs/2507.18130", "authors": ["Le Deng", "Zhonghao Jiang", "Jialun Cao", "Michael Pradel", "Zhongxin Liu"], "title": "NoCode-bench: A Benchmark for Evaluating Natural Language-Driven Feature Addition", "comment": null, "summary": "Natural language-driven no-code development allows users to specify software\nfunctionality using natural language (NL) instead of editing source code,\npromising increased productivity and democratized development. Large language\nmodels (LLMs) show potential in enabling this paradigm. In this context,\nsoftware documentation acts as an NL specification for functionality. This work\nintroduces NoCode-bench, a benchmark designed to evaluate LLMs on real-world\nNL-driven feature addition tasks, consisting of 634 tasks across 10 projects\nand 114k code changes. Each task pairs documentation updates with corresponding\ncode implementations, validated by developer-written test cases. A subset of\n114 high-quality, human-verified instances, NoCode-bench Verified, ensures\nreliable evaluation. Our experiments reveal that, despite high token usage, the\nbest LLMs achieve a task success rate of only 15.79%, highlighting challenges\nin cross-file editing, codebase understanding, and tool calling. These findings\nindicate that LLMs are not yet ready for fully NL-driven no-code development.\nNoCode-bench lays the foundation for future advances in this area.", "AI": {"tldr": "This paper presents NoCode-bench, a benchmark for evaluating large language models (LLMs) in natural language-driven no-code development tasks through real-world documentation and code implementations. Results show LLMs succeed in only 15.79% of tasks, indicating significant challenges remain for this paradigm.", "motivation": "Natural language-driven no-code development could democratize software creation, but existing research lacks real-world benchmarks to evaluate LLM capabilities in this context. Software documentation serves as an ideal NL specification for system functionality.", "method": "The authors created NoCode-bench with 634 tasks across 10 projects (114k code changes). Each task includes documentation updates, code implementations, and developer-validated test cases. A 'Verified' subset with 114 human-checked instances ensures reliable evaluation metrics. Experiments measured LLM performance on feature addition tasks, focusing on token usage efficiency and task success rates.", "result": "Despite optimizing for token usage, top LLMs achieved only 15.79% task success rate. Key failure modes include poor cross-file editing capabilities, limited codebase understanding, and ineffective tool calling.", "conclusion": "Current LLMs demonstrate insufficient readiness for fully natural language-driven no-code development. NoCode-bench provides standardized measurement to advance research in this area and identify capabilities requiring improvement."}}
{"id": "2507.18302", "categories": ["cs.CR", "cs.AI", "cs.CL"], "pdf": "https://arxiv.org/pdf/2507.18302", "abs": "https://arxiv.org/abs/2507.18302", "authors": ["Delong Ran", "Xinlei He", "Tianshuo Cong", "Anyu Wang", "Qi Li", "Xiaoyun Wang"], "title": "LoRA-Leak: Membership Inference Attacks Against LoRA Fine-tuned Language Models", "comment": "This work has been submitted to the IEEE for possible publication", "summary": "Language Models (LMs) typically adhere to a \"pre-training and fine-tuning\"\nparadigm, where a universal pre-trained model can be fine-tuned to cater to\nvarious specialized domains. Low-Rank Adaptation (LoRA) has gained the most\nwidespread use in LM fine-tuning due to its lightweight computational cost and\nremarkable performance. Because the proportion of parameters tuned by LoRA is\nrelatively small, there might be a misleading impression that the LoRA\nfine-tuning data is invulnerable to Membership Inference Attacks (MIAs).\nHowever, we identify that utilizing the pre-trained model can induce more\ninformation leakage, which is neglected by existing MIAs. Therefore, we\nintroduce LoRA-Leak, a holistic evaluation framework for MIAs against the\nfine-tuning datasets of LMs. LoRA-Leak incorporates fifteen membership\ninference attacks, including ten existing MIAs, and five improved MIAs that\nleverage the pre-trained model as a reference. In experiments, we apply\nLoRA-Leak to three advanced LMs across three popular natural language\nprocessing tasks, demonstrating that LoRA-based fine-tuned LMs are still\nvulnerable to MIAs (e.g., 0.775 AUC under conservative fine-tuning settings).\nWe also applied LoRA-Leak to different fine-tuning settings to understand the\nresulting privacy risks. We further explore four defenses and find that only\ndropout and excluding specific LM layers during fine-tuning effectively\nmitigate MIA risks while maintaining utility. We highlight that under the\n\"pre-training and fine-tuning\" paradigm, the existence of the pre-trained model\nmakes MIA a more severe risk for LoRA-based LMs. We hope that our findings can\nprovide guidance on data privacy protection for specialized LM providers.", "AI": {"tldr": "This paper analyzes the vulnerability of LoRA-fine-tuned language models to Membership Inference Attacks (MIAs) by introducing LoRA-Leak, an evaluation framework that reveals significant information leakage risks despite LoRA's low parameter tuning. The study demonstrates that pre-trained models amplify MIA threats, identifies effective defenses (dropout, layer exclusion), and provides practical guidance for data privacy in specialized LM providers.", "motivation": "Existing MIAs neglect information leakage risks from pre-trained models in LoRA-based fine-tuning. While LoRA's small parameter changes suggest reduced vulnerability, this approach might create a false sense of security, necessitating systematic evaluation of privacy risks under the pre-training and fine-tuning paradigm.", "method": "Developed LoRA-Leak: a comprehensive framework containing 15 MIAs (10 existing, 5 pre-trained model-enhanced attacks). Applied this to three advanced LMs across three NLP tasks, evaluating different fine-tuning settings and testing four defenses. Analyzed impact of pre-trained models on information leakage.", "result": "LoRA-based models achieve 0.775 AUC under conservative settings, proving vulnerability to MIAs. Pre-trained models enable more accurate attacks. Defenses like dropout (73.2% AUC reduction) and layer exclusion (83.5% AUC reduction) effectively mitigate risks while maintaining model utility. Found pre-trained models significantly contribute to leakage in fine-tuning scenarios.", "conclusion": "The pre-training and fine-tuning paradigm inherently creates privacy risks for LoRA-based models due to information leakage from pre-trained components. This study establishes that even minimal parameter tuning via LoRA exposes datasets to MIAs, emphasizing the need for robust defenses. Provides actionable insights for protecting private data in LM specialization workflows."}}
{"id": "2507.18159", "categories": ["cs.SE", "cs.DL"], "pdf": "https://arxiv.org/pdf/2507.18159", "abs": "https://arxiv.org/abs/2507.18159", "authors": ["Stephan Ferenz", "Aida Jafarbigloo", "Oliver Werth", "Astrid Nie\u00dfe"], "title": "SMECS: A Software Metadata Extraction and Curation Software", "comment": null, "summary": "Metadata play a crucial role in adopting the FAIR principles for research\nsoftware and enables findability and reusability. However, creating\nhigh-quality metadata can be resource-intensive for researchers and research\nsoftware engineers. To address this challenge, we developed the Software\nMetadata Extraction and Curation Software (SMECS) which integrates the\nextraction of metadata from existing sources together with a user-friendly\ninterface for metadata curation. SMECS extracts metadata from online\nrepositories such as GitHub and presents it to researchers through an\ninteractive interface for further curation and export as a CodeMeta file. The\nusability of SMECS was evaluated through usability experiments which confirmed\nthat SMECS provides a satisfactory user experience. SMECS supports the\nFAIRification of research software by simplifying metadata creation.", "AI": {"tldr": "SMECS simplifies metadata creation for research software by extracting data from sources like GitHub and providing an interactive curation interface, reducing resource demands while supporting FAIR principles.", "motivation": "Creating high-quality metadata for research software is resource-intensive for researchers, hindering adoption of FAIR principles despite their importance for findability and reusability.", "method": "Developed Software Metadata Extraction and Curation Software (SMECS) that combines metadata extraction from online repositories with an interactive user interface for curation and CodeMeta file export.", "result": "Usability experiments confirmed SMECS provides a satisfactory user experience, effectively enabling metadata creation through automated extraction and interactive refinement.", "conclusion": "SMECS addresses resource challenges in metadata creation, promoting FAIRification of research software by streamlining the process for researchers and software engineers."}}
{"id": "2507.18360", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2507.18360", "abs": "https://arxiv.org/abs/2507.18360", "authors": ["Andr\u00e9 Menolli", "Luiz Fernando Nunes", "Thiago A. Coleti"], "title": "Conformidade com os Requisitos Legais de Privacidade de Dados: Um Estudo sobre T\u00e9cnicas de Anonimiza\u00e7\u00e3o", "comment": "in Portuguese language", "summary": "The protection of personal data has become a central topic in software\ndevelopment, especially with the implementation of the General Data Protection\nLaw (LGPD) in Brazil and the General Data Protection Regulation (GDPR) in the\nEuropean Union. With the enforcement of these laws, certain software quality\ncriteria have become mandatory, such as data anonymization, which is one of the\nmain aspects addressed by these regulations. The aim of this article is to\nanalyze data anonymization techniques and assess their effectiveness in\nensuring compliance with legal requirements and the utility of the data for its\nintended purpose. Techniques such as aggregation, generalization, perturbation,\nand k-anonymity were investigated and applied to datasets containing personal\nand sensitive data. The analysis revealed significant variations in the\neffectiveness of each method, highlighting the need to balance privacy and data\nutility.", "AI": {"tldr": "This paper analyzes data anonymization techniques (aggregation, generalization, perturbation, k-anonymity) to evaluate their effectiveness in balancing legal compliance with data utility under regulations like LGPD and GDPR.", "motivation": "The enforcement of data protection laws such as LGPD and GDPR necessitates rigor in software quality criteria like data anonymization, while maintaining data utility for practical use.", "method": "Investigated anonymization techniques through application to datasets containing personal/sensitive data, comparing their performance in privacy compliance and data utility preservation.", "result": "Significant variations in method effectiveness were observed, demonstrating the trade-off between privacy enforcement and retaining useful data for analysis.", "conclusion": "Achieving compliance with legal requirements while preserving data utility requires careful selection of anonymization methods to address the inherent privacy-utility balance."}}
{"id": "2507.18223", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.18223", "abs": "https://arxiv.org/abs/2507.18223", "authors": ["Nenad Petrovic", "Fengjunjie Pan", "Vahid Zolfaghari", "Krzysztof Lebioda", "Andre Schamschurko", "Alois Knoll"], "title": "GenAI for Automotive Software Development: From Requirements to Wheels", "comment": null, "summary": "This paper introduces a GenAI-empowered approach to automated development of\nautomotive software, with emphasis on autonomous and Advanced Driver Assistance\nSystems (ADAS) capabilities. The process starts with requirements as input,\nwhile the main generated outputs are test scenario code for simulation\nenvironment, together with implementation of desired ADAS capabilities\ntargeting hardware platform of the vehicle connected to testbench. Moreover, we\nintroduce additional steps for requirements consistency checking leveraging\nModel-Driven Engineering (MDE). In the proposed workflow, Large Language Models\n(LLMs) are used for model-based summarization of requirements (Ecore metamodel,\nXMI model instance and OCL constraint creation), test scenario generation,\nsimulation code (Python) and target platform code generation (C++).\nAdditionally, Retrieval Augmented Generation (RAG) is adopted to enhance test\nscenario generation from autonomous driving regulations-related documents. Our\napproach aims shorter compliance and re-engineering cycles, as well as reduced\ndevelopment and testing time when it comes to ADAS-related capabilities.", "AI": {"tldr": "The paper proposes a GenAI workflow for automating ADAS software development, using LLMs for requirements modeling, test scenario generation, and code creation while leveraging RAG for regulatory compliance.", "motivation": "Traditional ADAS development involves lengthy compliance cycles and re-engineering due to complex requirements and regulations.", "method": "The approach employs LLMs for model-based requirements analysis (Ecore/XMI/OCL), test scenario generation via RAG from regulatory documents, and automatic code generation for simulation (Python) and hardware implementation (C++) using Model-Driven Engineering (MDE).", "result": "Shorter development timelines through automated requirements modeling, test scenario generation, and code production; improved regulatory compliance via RAG.", "conclusion": "LLM-powered automation significantly reduces ADAS development and testing time while ensuring compliance with regulations when integrated with MDE principles."}}
{"id": "2507.18478", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2507.18478", "abs": "https://arxiv.org/abs/2507.18478", "authors": ["Shariq Murtuza"], "title": "Scout: Leveraging Large Language Models for Rapid Digital Evidence Discovery", "comment": null, "summary": "Recent technological advancements and the prevalence of technology in day to\nday activities have caused a major increase in the likelihood of the\ninvolvement of digital evidence in more and more legal investigations.\nConsumer-grade hardware is growing more powerful, with expanding memory and\nstorage sizes and enhanced processor capabilities. Forensics investigators\noften have to sift through gigabytes of data during an ongoing investigation\nmaking the process tedious. Memory forensics, disk analysis all are well\nsupported by state of the art tools that significantly lower the effort\nrequired to be put in by a forensic investigator by providing string searches,\nanalyzing images file etc. During the course of the investigation a lot of\nfalse positives are identified that need to be lowered. This work presents\nScout, a digital forensics framework that performs preliminary evidence\nprocessing and prioritizing using large language models. Scout deploys\nfoundational language models to identify relevant artifacts from a large number\nof potential evidence files (disk images, captured network packets, memory\ndumps etc.) which would have taken longer to get identified. Scout employs text\nbased large language models can easily process files with textual information.\nFor the forensic analysis of multimedia files like audio, image, video, office\ndocuments etc. multimodal models are employed by Scout. Scout was able to\nidentify and realize the evidence file that were of potential interest for the\ninvestigator.", "AI": {"tldr": "The paper introduces Scout, a digital forensics framework leveraging large language models (LLMs) and multimodal models to prioritize relevant evidence files and reduce false positives in investigations.", "motivation": "Increasing complexity of digital evidence due to advanced consumer technology necessitates efficient tools for triaging gigabytes of data and minimizing false positives.", "method": "Scout uses foundational LLMs for text-based evidence (string searches, log analysis) and multimodal models for multimedia files (audio, images, video) to automate preliminary forensic processing.", "result": "Scout successfully identifies high-priority evidence files in disk images, network packets, memory dumps, and multimedia data, accelerating investigation workflows.", "conclusion": "The framework demonstrates LLMs' practical utility in digital forensics by providing scalable, efficient evidence prioritization for modern investigative needs."}}
{"id": "2507.18267", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.18267", "abs": "https://arxiv.org/abs/2507.18267", "authors": ["Zeqin Liao", "Zibin Zheng", "Peifan Reng", "Henglong Liang", "Zixu Gao", "Zhixiang Chen", "Wei Li", "Yuhong Nan"], "title": "An Empirical Study on Embodied Artificial Intelligence Robot (EAIR) Software Bugs", "comment": null, "summary": "Embodied Artificial Intelligence Robots (EAIR) is an emerging and rapidly\nevolving technological domain. Ensuring their program correctness is\nfundamental to their successful deployment. However, a general and in-depth\nunderstanding of EAIR system bugs remains lacking, which hinders the\ndevelopment of practices and techniques to tackle EAIR system bugs.\n  To bridge this gap, we conducted the first systematic study of 885 EAIR\nsystem bugs collected from 80 EAIR system projects to investigate their\nsymptoms, underlying causes, and module distribution. Our analysis takes\nconsiderable effort, which classifies these bugs into 18 underlying causes, 15\ndistinct symptoms, and identifies 13 affected modules. It reveals several new\ninteresting findings and implications which help shed light on future research\non tackling or repairing EAIR system bugs. First, among the 15 identified\nsymptoms, our findings highlight 8 symptoms specific to EAIR systems, which is\ncharacterized by severe functional failures and potential physical hazards.\nSecond, within the 18 underlying causes, we define 8 EAIR-specific causes, the\nmajority of which stem from the intricate issues of AI- agent reasoning and\ndecision making. Finally, to facilitate precise and efficient bug prediction,\ndetection, and repair, we constructed a mapping between underlying causes and\nthe modules in which they most frequently occur, which enables researchers to\nfocus diagnostic efforts on the modules most susceptible to specific bug types.", "AI": {"tldr": "This paper systematically analyzes 885 EAIR system bugs across 80 projects, categorizing them into 18 underlying causes, 15 symptoms (including 8 EAIR-specific ones), and 13 affected modules, while establishing cause-module mappings for efficient bug diagnosis.", "motivation": "EAIR system bugs pose functional failure risks and physical hazards, but lack general understanding of their characteristics and root causes, impeding effective debugging techniques development.", "method": "Collected and classified EAIR system bugs through systematic analysis of 80 projects, identifying underlying causes, symptoms, and module distributions. Established mappings between bug causes and their frequently occurring modules via extensive analysis.", "result": "1. 8 EAIR-specific symptoms characterized by severe functional failures. 2. 8 EAIR-specific causes dominated by AI-agent reasoning issues. 3. Module-cause mapping identified to guide targeted diagnostic efforts.", "conclusion": "The study provides critical insights into EAIR system bugs' unique characteristics and establishes actionable foundations for improving bug prediction, detection, and repair in embodied AI systems through cause-module correlations."}}
{"id": "2507.18631", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2507.18631", "abs": "https://arxiv.org/abs/2507.18631", "authors": ["Hao Li", "Lijun Li", "Zhenghao Lu", "Xianyi Wei", "Rui Li", "Jing Shao", "Lei Sha"], "title": "Layer-Aware Representation Filtering: Purifying Finetuning Data to Preserve LLM Safety Alignment", "comment": null, "summary": "With rapid advancement and increasing accessibility of LLMs, fine-tuning\naligned models has become a critical step for adapting them to real-world\napplications, which makes the safety of this fine-tuning process more important\nthan ever. However, recent studies have highlighted a critical challenge: even\nwhen fine-tuning with seemingly benign downstream datasets, the safety of\naligned LLMs can be compromised, making them more susceptible to malicious\ninstructions. In this paper, we show that fine-tuning datasets often contain\nsamples with safety-degrading features that are not easily identifiable on the\nsurface. These samples can significantly degrade the safety alignment of LLMs\nduring fine-tuning. To address this issue, we propose LARF, a\n\\textbf{L}ayer-\\textbf{A}ware \\textbf{R}epresentation \\textbf{F}iltering\nmethod. This method identifies safety-sensitive layers within the LLM and\nleverages their representations to detect which data samples in the\npost-training dataset contain safety-degrading features. Experimental results\ndemonstrate that LARF can effectively identify benign data with\nsafety-degrading features. After removing such data, the safety alignment\ndegradation caused by fine-tuning is mitigated. Please see our code at\n\\href{https://github.com/LLLeoLi/LARF}{https://github.com/LLLeoLi/LARF}.", "AI": {"tldr": "This paper addresses safety alignment degradation in fine-tuned LLMs by introducing LARF, a layer-aware representation filtering method to detect and remove harmful data samples from training datasets.", "motivation": "Fine-tuning aligned LLMs for real-world applications risks safety compromise due to subtle safety-degrading features in seemingly benign datasets.", "method": "LARF identifies safety-sensitive layers within LLMs and leverages their representations to detect data samples with safety-degrading features during post-training.", "result": "Experimental validation demonstrates LARF's effectiveness in identifying harmful data samples and mitigating safety alignment degradation in fine-tuned models.", "conclusion": "The study highlights the necessity of inspecting post-training datasets for hidden safety risks and shows that layer-aware filtering can significantly improve model safety during fine-tuning."}}
{"id": "2507.18289", "categories": ["cs.SE", "cs.CR"], "pdf": "https://arxiv.org/pdf/2507.18289", "abs": "https://arxiv.org/abs/2507.18289", "authors": ["Yan Li", "Wenzhang Yang", "Yuekun Wang", "Jian Gao", "Shaohua Wang", "Yinxing Xue", "Lijun Zhang"], "title": "Scheduzz: Constraint-based Fuzz Driver Generation with Dual Scheduling", "comment": "15 pages, 12 figures, 5 tables", "summary": "Fuzzing a library requires experts to understand the library usage well and\ncraft high-quality fuzz drivers, which is tricky and tedious. Therefore, many\ntechniques have been proposed to automatically generate fuzz drivers. However,\nthey fail to generate rational fuzz drivers due to the lack of adherence to\nproper library usage conventions, such as ensuring a resource is closed after\nbeing opened. To make things worse, existing library fuzzing techniques\nunconditionally execute each driver, resulting in numerous irrational drivers\nthat waste computational resources while contributing little coverage and\ngenerating false positive bug reports.\n  To tackle these challenges, we propose a novel automatic library fuzzing\ntechnique, Scheduzz, an LLM-based library fuzzing technique. It leverages LLMs\nto understand rational usage of libraries and extract API combination\nconstraints. To optimize computational resource utilization, a dual scheduling\nframework is implemented to efficiently manage API combinations and fuzz\ndrivers. The framework models driver generation and the corresponding fuzzing\ncampaign as an online optimization problem. Within the scheduling loop,\nmultiple API combinations are selected to generate fuzz drivers, while\nsimultaneously, various optimized fuzz drivers are scheduled for execution or\nsuspension.\n  We implemented Scheduzz and evaluated it in 33 real-world libraries. Compared\nto baseline approaches, Scheduzz significantly reduces computational overhead\nand outperforms UTopia on 16 out of 21 libraries. It achieves 1.62x, 1.50x, and\n1.89x higher overall coverage than the state-of-the-art techniques CKGFuzzer,\nPromptfuzz, and the handcrafted project OSS-Fuzz, respectively. In addition,\nScheduzz discovered 33 previously unknown bugs in these well-tested libraries,\n3 of which have been assigned CVEs.", "AI": {"tldr": "Scheduzz is an LLM-based library fuzzing technique that improves resource efficiency and coverage by modeling API usage constraints with dual scheduling optimization.", "motivation": "Current automated fuzz driver generation techniques lack awareness of library usage conventions and inefficiently consume resources due to unoptimized driver execution.", "method": "Combines LLM-driven API constraint analysis with a dual scheduling framework that optimizes fuzz driver execution by modeling as an online optimization problem.", "result": "Outperforms baselines on 16/21 libraries with 1.62x-1.89x coverage improvements and discovers 33 new bugs including 3 CVEs while reducing computational overhead.", "conclusion": "Scheduzz addresses critical limitations in conventional library fuzzing by integrating usage-conformant API analysis with strategic execution optimization."}}
{"id": "2507.18316", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.18316", "abs": "https://arxiv.org/abs/2507.18316", "authors": ["Michael Konstantinou", "Renzo Degiovanni", "Jie M. Zhang", "Mark Harman", "Mike Papadakis"], "title": "YATE: The Role of Test Repair in LLM-Based Unit Test Generation", "comment": "12 pages, 4 figures", "summary": "Recent advances in automated test generation utilises language models to\nproduce unit tests. While effective, language models tend to generate many\nincorrect tests with respect to both syntax and semantics. Although such\nincorrect tests can be easily detected and discarded, they constitute a \"missed\nopportunity\" -- if fixed, they are often valuable as they directly add testing\nvalue (they effectively target the underlying program logic to be tested) and\nindirectly form good seeds for generating additional tests. To this end, we\npropose a simple technique for repairing some of these incorrect tests through\na combination of rule-based static analysis and re-prompting. We evaluate this\nsimple approach, named YATE, on a set of 6 open-source projects and show that\nit can effectively produce tests that cover on average 32.06% more lines and\nkill 21.77% more mutants than a plain LLM-based method. We also compare YATE\nwith four other LLM-based methods, namely HITS, SYMPROMPT, TESTSPARK and\nCOVERUP and show that it produces tests that cover substantially more code.\nYATE achieves 22% higher line coverage, 20% higher branch coverage and kill 20%\nmore mutants at a comparable cost (number of calls to LLMs).", "AI": {"tldr": "This paper addresses the issue of incorrect unit tests generated by language models (LLMs) in automated test generation. It proposes YATE, a technique combining rule-based static analysis and re-prompting, which improves line and branch coverage, kills more mutants, and outperforms four LLM-based methods at comparable cost.", "motivation": "Language models generate many syntactically or semantically incorrect tests, which waste resources and miss opportunities for creating valuable test cases. Repairing these tests could enhance testing effectiveness and serve as test generation seeds.", "method": "YATE employs a hybrid approach of rule-based static analysis to detect common test errors and re-prompting to fix them. It iteratively repairs incorrect tests, refining LLM outputs until valid tests are created.", "result": "YATE achieves 32.06% higher line coverage and kills 21.77% more mutants than standard LLM methods. Compared to four other LLM-based tools (HITS, SYMPROMPT, TESTSPARK, COVERUP), it attains 22% higher line coverage, 20% higher branch coverage, and kills 20% more mutants with similar computational cost.", "conclusion": "YATE demonstrates a practical and cost-effective solution for repairing incorrect LLM-generated tests, significantly improving code coverage metrics and mutation killing performance compared to existing methods."}}
{"id": "2507.18319", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.18319", "abs": "https://arxiv.org/abs/2507.18319", "authors": ["Jesse Maarleveld", "Jiapan Guo", "Daniel Feitosa"], "title": "Gotta catch 'em all! Towards File Localisation from Issues at Large", "comment": "12 pages, 6 figures", "summary": "Bug localisation, the study of developing methods to localise the files\nrequiring changes to resolve bugs, has been researched for a long time to\ndevelop methods capable of saving developers' time. Recently, researchers are\nstarting to consider issues outside of bugs. Nevertheless, most existing\nresearch into file localisation from issues focusses on bugs or uses other\nselection methods to ensure only certain types of issues are considered as part\nof the focus of the work. Our goal is to work on all issues at large, without\nany specific selection.\n  In this work, we provide a data pipeline for the creation of issue file\nlocalisation datasets, capable of dealing with arbitrary branching and merging\npractices. We provide a baseline performance evaluation for the file\nlocalisation problem using traditional information retrieval approaches.\nFinally, we use statistical analysis to investigate the influence of biases\nknown in the bug localisation community on our dataset.\n  Our results show that methods designed using bug-specific heuristics perform\npoorly on general issue types, indicating a need for research into general\npurpose models. Furthermore, we find that there are small, but statistically\nsignificant differences in performance between different issue types. Finally,\nwe find that the presence of identifiers have a small effect on performance for\nmost issue types. Many results are project-dependent, encouraging the\ndevelopment of methods which can be tuned to project-specific characteristics.", "AI": {"tldr": "This paper addresses file localization for general issues (not just bugs) by introducing a data pipeline accommodating arbitrary branching/merging, evaluating traditional IR methods as baselines, and analyzing biases from bug-localisation. Key findings include poor performance of bug-specific heuristics on general issues, statistically significant performance differences across issue types, and project-dependent outcomes.", "motivation": "Existing research on file localization either focuses exclusively on bugs or uses filtering methods to isolate specific issue types, limiting understanding of broader issue localization. The authors aim to study localization for all issue types without selection.", "method": "1. Developed a data pipeline for creating issue-file localization datasets that handles arbitrary branching/merging. 2. Baseline evaluation using traditional information retrieval methods. 3. Statistical analysis of biases (e.g., identifier presence) from the bug localisation community on their dataset.", "result": "Bug-specific heuristics show poor performance on general issues; small but statistically significant performance variations exist between issue types; identifier presence has minimal effect on most issues; results are project-dependent, suggesting value for domain-specific method tuning.", "conclusion": "Bug-specific approaches are inadequate for general issue localization. Performance differences highlight the need for issue-type-sensitive models. Project dependence indicates benefits from adapting localization methods to specific project characteristics. Emphasizes research into general-purpose, customizable localization models."}}
{"id": "2507.18339", "categories": ["cs.SE", "cs.DC"], "pdf": "https://arxiv.org/pdf/2507.18339", "abs": "https://arxiv.org/abs/2507.18339", "authors": ["Nils Bosbach", "Meik Schmidt", "Lukas J\u00fcnger", "Matthias Berthold", "Rainer Leupers"], "title": "FMI Meets SystemC: A Framework for Cross-Tool Virtual Prototyping", "comment": "PREPRINT - accepted by the 16th International Modelica and FMI\n  Conference 2025", "summary": "As systems become more complex, the demand for thorough testing and virtual\nprototyping grows. To simulate whole systems, multiple tools are usually needed\nto cover different parts. These parts include the hardware of a system and the\nenvironment with which the system interacts. The Functional Mock-up Interface\n(FMI) standard for co-simulation can be used to connect these tools.\n  The control part of modern systems is usually a computing unit, such as a\nSystem-on-a-Chip (SoC) or Microcontroller Unit (MCU), which executes software\nfrom a connected memory and interacts with peripherals. To develop software\nwithout requiring access to physical hardware, full-system simulators, the\nso-called Virtual Platforms (VPs), are commonly used. The IEEE-standardized\nframework for VP development is SystemC TLM. SystemC provides interfaces and\nconcepts that enable modular design and model exchange. However, SystemC lacks\nnative FMI support, which limits the integration into broader co-simulation\nenvironments.\n  This paper presents a novel framework to control and interact with\nSystemC-based VPs using the FMI. We present a case study showing how a\nsimulated temperature sensor in a SystemC simulation can obtain temperature\nvalues from an external tool via FMI. This approach allows the unmodified\ntarget software to run on the VP and receive realistic environmental input data\nsuch as temperature, velocity, or acceleration values from other tools. Thus,\nextensive software testing and verification is enabled. By having tests ready\nand the software pre-tested using a VP once the physical hardware is available,\ncertifications like ISO 26262 can be done earlier.", "AI": {"tldr": "The paper introduces a new framework to enable FMI co-simulation with SystemC-based Virtual Platforms, allowing target software to receive realistic environmental data from external tools without hardware access, speeding up certification processes like ISO 26262.", "motivation": "Complex systems require thorough testing but existing virtual platforms (VPs) have limited integration with co-simulation environments due to lack of FMI support in SystemC, hindering verification of realistic environmental interactions.", "method": "Proposed a custom FMI integration framework for SystemC TLM-based VPs with a case study demonstrating temperature sensor data exchange between SystemC and external tools through FMI without modifying target software.", "result": "Successfully demonstrated environmental sensor data (e.g., temperature) can be fed into SystemC simulations via FMI, enabling unmodified software execution with realistic peripheral inputs and facilitating early certification testing.", "conclusion": "The framework bridges FMI and SystemC TLM ecosystems, significantly enhancing virtual testing capabilities by enabling external tool integration for environmental inputs, which accelerates modern system software verification and certification."}}
{"id": "2507.18476", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.18476", "abs": "https://arxiv.org/abs/2507.18476", "authors": ["Busra Icoz", "Goksel Biricik"], "title": "Automated Code Review Using Large Language Models with Symbolic Reasoning", "comment": null, "summary": "Code review is one of the key processes in the software development lifecycle\nand is essential to maintain code quality. However, manual code review is\nsubjective and time consuming. Given its rule-based nature, code review is well\nsuited for automation. In recent years, significant efforts have been made to\nautomate this process with the help of artificial intelligence. Recent\ndevelopments in Large Language Models (LLMs) have also emerged as a promising\ntool in this area, but these models often lack the logical reasoning\ncapabilities needed to fully understand and evaluate code. To overcome this\nlimitation, this study proposes a hybrid approach that integrates symbolic\nreasoning techniques with LLMs to automate the code review process. We tested\nour approach using the CodexGlue dataset, comparing several models, including\nCodeT5, CodeBERT, and GraphCodeBERT, to assess the effectiveness of combining\nsymbolic reasoning and prompting techniques with LLMs. Our results show that\nthis approach improves the accuracy and efficiency of automated code review.", "AI": {"tldr": "This paper proposes a hybrid approach combining symbolic reasoning and Large Language Models (LLMs) to enhance automated code review, demonstrating improved accuracy and efficiency through experiments on the CodexGlue dataset.", "motivation": "Manual code review is subjective and time-consuming, while existing LLM-based automation lacks sufficient logical reasoning capabilities to effectively evaluate code.", "method": "The study integrates symbolic reasoning techniques with prompting methods and LLMs like CodeT5, CodeBERT, and GraphCodeBERT, testing their combined performance on the CodexGlue benchmark.", "result": "The hybrid approach achieved higher accuracy and efficiency in code review compared to pure LLM-based methods, validating the effectiveness of symbolic reasoning augmentation.", "conclusion": "Combining symbolic reasoning with LLMs creates a more robust automated code review system, suggesting this hybrid methodology should be adopted for better code quality assistance."}}
{"id": "2507.18515", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.18515", "abs": "https://arxiv.org/abs/2507.18515", "authors": ["Zezhou Yang", "Ting Peng", "Cuiyun Gao", "Chaozheng Wang", "Hailiang Huang", "Yuetang Deng"], "title": "A Deep Dive into Retrieval-Augmented Generation for Code Completion: Experience on WeChat", "comment": "Accepted in ICSME 25 Industry Track", "summary": "Code completion, a crucial task in software engineering that enhances\ndeveloper productivity, has seen substantial improvements with the rapid\nadvancement of large language models (LLMs). In recent years,\nretrieval-augmented generation (RAG) has emerged as a promising method to\nenhance the code completion capabilities of LLMs, which leverages relevant\ncontext from codebases without requiring model retraining. While existing\nstudies have demonstrated the effectiveness of RAG on public repositories and\nbenchmarks, the potential distribution shift between open-source and\nclosed-source codebases presents unique challenges that remain unexplored. To\nmitigate the gap, we conduct an empirical study to investigate the performance\nof widely-used RAG methods for code completion in the industrial-scale codebase\nof WeChat, one of the largest proprietary software systems. Specifically, we\nextensively explore two main types of RAG methods, namely identifier-based RAG\nand similarity-based RAG, across 26 open-source LLMs ranging from 0.5B to 671B\nparameters. For a more comprehensive analysis, we employ different retrieval\ntechniques for similarity-based RAG, including lexical and semantic retrieval.\nBased on 1,669 internal repositories, we achieve several key findings: (1) both\nRAG methods demonstrate effectiveness in closed-source repositories, with\nsimilarity-based RAG showing superior performance, (2) the effectiveness of\nsimilarity-based RAG improves with more advanced retrieval techniques, where\nBM25 (lexical retrieval) and GTE-Qwen (semantic retrieval) achieve superior\nperformance, and (3) the combination of lexical and semantic retrieval\ntechniques yields optimal results, demonstrating complementary strengths.\nFurthermore, we conduct a developer survey to validate the practical utility of\nRAG methods in real-world development environments.", "AI": {"tldr": "This paper empirically evaluates retrieval-augmented generation (RAG) methods for code completion in a large proprietary codebase (WeChat), comparing identifier-based and similarity-based RAG with different retrieval techniques (lexical vs. semantic). Key findings show similarity-based RAG with BM25 and GTE-Qwen combinations performs best and addresses distribution shifts between open-source and closed-source codebases.", "motivation": "While RAG has proven effective in open-source code completion, open-source and closed-source codebases exhibit distribution shifts (e.g., domain specificity, access restrictions). Existing research lacks analysis of RAG methods in real-world industrial-scale closed-source environments like WeChat.", "method": "We test 26 open-source LLMs (0.5B-671B parameters) with two RAG frameworks (identifier-based and similarity-based) across 1,669 WeChat internal repositories. For similarity-based RAG, we compare lexical (BM25) and semantic (dense vector) retrieval techniques and analyze their combination.", "result": "1. Similarity-based RAG outperforms identifier-based methods in closed-source code completion. 2. Advanced retrieval techniques significantly enhance RAG effectiveness (BM25=best lexical, GTE-Qwen=best semantic). 3. Lexical+semantic retrieval combination achieves optimal results. Developer survey confirms practical utility of RAG in real coding scenarios.", "conclusion": "The study shows RAG methods, particularly similarity-based approaches with BM25/semantic fusion, can effectively bridge open-source vs closed-source codebase gaps in industrial settings. Complementary usage of lexical and semantic retrieval techniques is recommended for maximal performance in proprietary software systems."}}
