{"id": "2508.04820", "categories": ["cs.SE", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2508.04820", "abs": "https://arxiv.org/abs/2508.04820", "authors": ["Mayra Sofia Ruiz Rodriguez", "SayedHassan Khatoonabadi", "Emad Shihab"], "title": "Automated File-Level Logging Generation for Machine Learning Applications using LLMs: A Case Study using GPT-4o Mini", "comment": null, "summary": "Logging is essential in software development, helping developers monitor\nsystem behavior and aiding in debugging applications. Given the ability of\nlarge language models (LLMs) to generate natural language and code, researchers\nare exploring their potential to generate log statements. However, prior work\nfocuses on evaluating logs introduced in code functions, leaving file-level log\ngeneration underexplored -- especially in machine learning (ML) applications,\nwhere comprehensive logging can enhance reliability. In this study, we evaluate\nthe capacity of GPT-4o mini as a case study to generate log statements for ML\nprojects at file level. We gathered a set of 171 ML repositories containing\n4,073 Python files with at least one log statement. We identified and removed\nthe original logs from the files, prompted the LLM to generate logs for them,\nand evaluated both the position of the logs and log level, variables, and text\nquality of the generated logs compared to human-written logs. In addition, we\nmanually analyzed a representative sample of generated logs to identify common\npatterns and challenges. We find that the LLM introduces logs in the same place\nas humans in 63.91% of cases, but at the cost of a high overlogging rate of\n82.66%. Furthermore, our manual analysis reveals challenges for file-level\nlogging, which shows overlogging at the beginning or end of a function,\ndifficulty logging within large code blocks, and misalignment with\nproject-specific logging conventions. While the LLM shows promise for\ngenerating logs for complete files, these limitations remain to be addressed\nfor practical implementation.", "AI": {"tldr": "This study evaluates GPT-4o mini's ability to generate file-level log statements in machine learning projects, finding that while it matches human placement 63.91% of the time, it suffers from an 82.66% overlogging rate and struggles with adherence to project-specific conventions.", "motivation": "Prior research on LLM-generated logs focuses on function-level logging, neglecting file-level logging in machine learning applications where comprehensive logging is critical for system reliability and debugging.", "method": "The researchers collected 171 ML repositories with 4,073 Python files containing logs, removed existing logs, prompted LLMs to regenerate logs, and compared the generated logs to human-written ones across placement, level, variables, and text quality metrics using both automated and manual analysis.", "result": "63.91% of LLM-generated logs were placed similarly to human logs, but 82.66% were overlogged. Manual analysis identified three main challenges: overlogging at function boundaries, difficulty in dense code segments, and inconsistent alignment with project-specific logging norms.", "conclusion": "LLMs demonstrate potential for file-level log generation but require addressing overlogging and convention misalignment to be practical for real-world ML development."}}
{"id": "2508.04895", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.04895", "abs": "https://arxiv.org/abs/2508.04895", "authors": ["Wentao Lu", "Alexander Senchenko", "Abram Hindle", "Cor-Paul Bezemer"], "title": "Automated Bug Frame Retrieval from Gameplay Videos Using Vision-Language Models", "comment": null, "summary": "Modern game studios deliver new builds and patches at a rapid pace,\ngenerating thousands of bug reports, many of which embed gameplay videos. To\nverify and triage these bug reports, developers must watch the submitted\nvideos. This manual review is labour-intensive, slow, and hard to scale. In\nthis paper, we introduce an automated pipeline that reduces each video to a\nsingle frame that best matches the reported bug description, giving developers\ninstant visual evidence that pinpoints the bug.\n  Our pipeline begins with FFmpeg for keyframe extraction, reducing each video\nto a median of just 1.90% of its original frames while still capturing bug\nmoments in 98.79 of cases. These keyframes are then evaluated by a\nvision--language model (GPT-4o), which ranks them based on how well they match\nthe textual bug description and selects the most representative frame. We\nevaluated this approach using real-world developer-submitted gameplay videos\nand JIRA bug reports from a popular First-Person Shooter (FPS) game. The\npipeline achieves an overall F1 score of 0.79 and Accuracy of 0.89 for the\ntop-1 retrieved frame. Performance is highest for the Lighting & Shadow (F1 =\n0.94), Physics & Collision (0.86), and UI & HUD (0.83) bug categories, and\nlowest for Animation & VFX (0.51).\n  By replacing video viewing with an immediately informative image, our\napproach dramatically reduces manual effort and speeds up triage and regression\nchecks, offering practical benefits to quality assurance (QA) teams and\ndevelopers across the game industry.", "AI": {"tldr": "This paper presents an automated pipeline to extract a single representative frame from gameplay videos in bug reports, enabling faster verification and triage for game developers using FFmpeg and GPT-4o.", "motivation": "Manual video review for bug reports in game studios is labor-intensive, slow, and difficult to scale due to the high volume of submitted gameplay videos.", "method": "The pipeline combines FFmpeg for keyframe extraction (reducing frames to 1.90% while capturing 98.79 bug moments) and a vision-language model (GPT-4o) to select the most relevant frame matching the textual bug description.", "result": "Achieved F1 score 0.79 and Accuracy 0.89 for top-1 frame retrieval, with varying performance across categories (Lighting & Shadow: 0.94; Animation & VFX: 0.51).", "conclusion": "The approach significantly reduces manual effort and accelerates QA processes by replacing video viewing with instantly actionable visual evidence, offering practical scalability benefits for the game industry."}}
{"id": "2508.04921", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.04921", "abs": "https://arxiv.org/abs/2508.04921", "authors": ["Zixuan Feng", "Reed Milewicz", "Emerson Murphy-Hill", "Tyler Menezes", "Alexander Serebrenik", "Igor Steinmacher", "Anita Sarma"], "title": "Charting Uncertain Waters: A Socio-Technical Framework for Navigating GenAI's Impact on Open Source Communities", "comment": "13 pages, 1 figure", "summary": "Open Source Software communities face a wave of uncertainty as Generative AI\nrapidly transforms how software is created, maintained, and governed. Without\nclear frameworks, communities risk being overwhelmed by the complexity and\nambiguity introduced by GenAI, threatening the collaborative ethos that\nunderpins OSS. We conduct a scenario-driven, conceptual exploration using a\nsocio-technical framework inspired by McLuhan's Tetrad to surface both risks\nand opportunities for community resilience amid GenAI-driven disruption of OSS\ndevelopment across four domains: software practices, documentation, community\nengagement, and governance. By adopting this lens, OSS leaders and researchers\ncan proactively shape the future of their ecosystems, rather than simply\nreacting to technological upheaval.", "AI": {"tldr": "This paper explores how Generative AI impacts Open Source Software (OSS) communities using a socio-technical framework inspired by McLuhan's Tetrad, focusing on risks and opportunities in four domains: software practices, documentation, community engagement, and governance.", "motivation": "OSS communities face uncertainty from Generative AI's rapid transformation of software creation and governance, risking their collaborative ethos without clear frameworks.", "method": "A scenario-driven conceptual exploration utilizing a socio-technical framework derived from McLuhan's Tetrad.", "result": "Identification of risks and opportunities for community resilience in OSS development across four domains affected by GenAI disruption.", "conclusion": "Adopting the socio-technical framework allows OSS leaders and researchers to proactively shape ecosystems rather than passively reacting to technological changes from GenAI."}}
{"id": "2508.04925", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.04925", "abs": "https://arxiv.org/abs/2508.04925", "authors": ["Sigma Jahan", "Saurabh Singh Rajput", "Tushar Sharma", "Mohammad Masudur Rahman"], "title": "Taxonomy of Faults in Attention-Based Neural Networks", "comment": null, "summary": "Attention mechanisms are at the core of modern neural architectures, powering\nsystems ranging from ChatGPT to autonomous vehicles and driving a major\neconomic impact. However, high-profile failures, such as ChatGPT's nonsensical\noutputs or Google's suspension of Gemini's image generation due to attention\nweight errors, highlight a critical gap: existing deep learning fault\ntaxonomies might not adequately capture the unique failures introduced by\nattention mechanisms. This gap leaves practitioners without actionable\ndiagnostic guidance. To address this gap, we present the first comprehensive\nempirical study of faults in attention-based neural networks (ABNNs). Our work\nis based on a systematic analysis of 555 real-world faults collected from 96\nprojects across ten frameworks, including GitHub, Hugging Face, and Stack\nOverflow. Through our analysis, we develop a novel taxonomy comprising seven\nattention-specific fault categories, not captured by existing work. Our results\nshow that over half of the ABNN faults arise from mechanisms unique to\nattention architectures. We further analyze the root causes and manifestations\nof these faults through various symptoms. Finally, by analyzing symptom-root\ncause associations, we identify four evidence-based diagnostic heuristics that\nexplain 33.0% of attention-specific faults, offering the first systematic\ndiagnostic guidance for attention-based models.", "AI": {"tldr": "The paper introduces a new taxonomy for attention-based neural network faults, identifying seven attention-specific categories and four diagnostic heuristics that address critical gaps highlighted by real-world failures like ChatGPT and Gemini.", "motivation": "Existing deep learning fault taxonomies fail to account for unique attention mechanism failures, leading to diagnostic challenges in critical systems where attention errors manifest dramatically, as seen in high-profile incidents from ChatGPT and Gemini.", "method": "Systematic analysis of 555 real-world attention faults from 96 projects across GitHub, Hugging Face, and Stack Overflow, enabling identification of attention-specific failure patterns and development of the first specialized fault taxonomy.", "result": "7 attention-specific fault categories discovered (not captured by prior work), with 53.5% of analyzed faults attributed to attention-unique mechanisms. Four evidence-based diagnostic heuristics identified that explain 33% of attention-specific faults.", "conclusion": "First systematic diagnostic guidance for ABNNs through novel taxonomy and heuristics, demonstrating the need for attention-specific fault analysis and providing actionable insights for practitioners encountering these unique failure modes."}}
{"id": "2508.04894", "categories": ["cs.CR", "cs.AI", "cs.SI"], "pdf": "https://arxiv.org/pdf/2508.04894", "abs": "https://arxiv.org/abs/2508.04894", "authors": ["Iyiola E. Olatunji", "Franziska Boenisch", "Jing Xu", "Adam Dziedzic"], "title": "Adversarial Attacks and Defenses on Graph-aware Large Language Models (LLMs)", "comment": null, "summary": "Large Language Models (LLMs) are increasingly integrated with\ngraph-structured data for tasks like node classification, a domain\ntraditionally dominated by Graph Neural Networks (GNNs). While this integration\nleverages rich relational information to improve task performance, their\nrobustness against adversarial attacks remains unexplored. We take the first\nstep to explore the vulnerabilities of graph-aware LLMs by leveraging existing\nadversarial attack methods tailored for graph-based models, including those for\npoisoning (training-time attacks) and evasion (test-time attacks), on two\nrepresentative models, LLAGA (Chen et al. 2024) and GRAPHPROMPTER (Liu et al.\n2024). Additionally, we discover a new attack surface for LLAGA where an\nattacker can inject malicious nodes as placeholders into the node sequence\ntemplate to severely degrade its performance. Our systematic analysis reveals\nthat certain design choices in graph encoding can enhance attack success, with\nspecific findings that: (1) the node sequence template in LLAGA increases its\nvulnerability; (2) the GNN encoder used in GRAPHPROMPTER demonstrates greater\nrobustness; and (3) both approaches remain susceptible to imperceptible feature\nperturbation attacks. Finally, we propose an end-to-end defense framework\nGALGUARD, that combines an LLM-based feature correction module to mitigate\nfeature-level perturbations and adapted GNN defenses to protect against\nstructural attacks.", "AI": {"tldr": "This paper investigates the robustness of graph-aware Large Language Models (LLMs) like LLAGA and GRAPHPROMPTER against adversarial attacks, identifying vulnerabilities in their design and proposing a defense framework called GALGUARD.", "motivation": "The growing integration of LLMs with graph-structured data for tasks such as node classification demands an understanding of their robustness against adversarial attacks. Prior focus on LLMs for graph encoding has overlooked potential vulnerabilities compared to Graph Neural Networks (GNNs).", "method": "The paper systematically evaluates the robustness of two graph-aware LLM models using established adversarial attack methods (poisoning and evasion). It also explores a novel node sequence template attack for LLAGA and analyzes how design choices in graph encoding impact attack success.", "result": "Results show LLAGA's vulnerability increases due to its node sequence template, GRAPHPROMPTER's GNN encoder offers better robustness, but both models remain susceptible to imperceptible feature perturbation attacks. The proposed GALGUARD defense framework effectively mitigates these risks.", "conclusion": "Graph-aware LLMs face unique adversarial vulnerabilities shaped by their design choices. The study highlights specific weaknesses and provides GALGUARD, a dual-pronged defense combining feature correction and adapted GNN protections, to address these emerging threats."}}
{"id": "2508.05005", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.05005", "abs": "https://arxiv.org/abs/2508.05005", "authors": ["Gang Xu", "Airong Wang", "Yushan Pan"], "title": "Generative AI for Object-Oriented Programming: Writing the Right Code and Reasoning the Right Logic", "comment": null, "summary": "We find ourselves in the midst of an explosion in artificial intelligence\nresearch, particularly with large language models (LLMs). These models have\ndiverse applications spanning finance, commonsense knowledge graphs, medicine,\nand visual analysis. In the world of Object-Oriented Programming(OOP), a robust\nbody of knowledge and methods has been developed for managing complex tasks\nthrough object-oriented thinking. However, the intersection of LLMs with OOP\nremains an underexplored territory. Empirically, we currently possess limited\nunderstanding of how LLMs can enhance the effectiveness of OOP learning and\ncode writing, as well as how we can evaluate such AI-powered tools. Our work\naims to address this gap by presenting a vision from the perspectives of key\nstakeholders involved in an OOP task: programmers, mariners, and experienced\nprogrammers. We identify critical junctures within typical coding workflows\nwhere the integration of LLMs can offer significant benefits. Furthermore, we\npropose ways to augment existing logical reasoning and code writing, ultimately\nenhancing the programming experience.", "AI": {"tldr": "The paper explores integrating large language models (LLMs) with Object-Oriented Programming (OOP) by analyzing perspectives from key stakeholders, identifying critical workflow junctures for LLM application, and proposing strategies to enhance OOP learning/code writing.", "motivation": "Current gaps in understanding how LLMs can improve OOP-specific tasks (learning/code writing) and evaluating their effectiveness in this domain necessitate systematic investigation.", "method": "Conducted stakeholder analysis through (1) perspective mapping with programmers, mariners, experienced programmers and (2) workflow examination to pinpoint augmentation opportunities for LLM integration.", "result": "Identified critical junctures in OOP workflows where LLMs could meaningfully improve logical reasoning and code writing outcomes, validated through stakeholder-based evaluation frameworks.", "conclusion": "The paper advocates for stakeholder-informed LLM integration in OOP tasks, suggesting practical strategies to enhance programming education and development practices through AI augmentation."}}
{"id": "2508.05048", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2508.05048", "abs": "https://arxiv.org/abs/2508.05048", "authors": ["Mohammad Ferry Husnil Arif", "Muhammad Imran"], "title": "On the Classical Hardness of the Semidirect Discrete Logarithm Problem in Finite Groups", "comment": null, "summary": "The semidirect discrete logarithm problem (SDLP) in finite groups was\nproposed as a foundation for post-quantum cryptographic protocols, based on the\nbelief that its non-abelian structure would resist quantum attacks. However,\nrecent results have shown that SDLP in finite groups admits efficient quantum\nalgorithms, undermining its quantum resistance. This raises a fundamental\nquestion: does the SDLP offer any computational advantages over the standard\ndiscrete logarithm problem (DLP) against classical adversaries? In this work,\nwe investigate the classical hardness of SDLP across different finite group\nplatforms. We establish that the group-case SDLP can be reformulated as a\ngeneralized discrete logarithm problem, enabling adaptation of classical\nalgorithms to study its complexity. We present a concrete adaptation of the\nBaby-Step Giant-Step algorithm for SDLP, achieving time and space complexity\n$O(\\sqrt{r})$ where $r$ is the period of the underlying cycle structure.\nThrough theoretical analysis and experimental validation in SageMath, we\ndemonstrate that the classical hardness of SDLP is highly platform-dependent\nand does not uniformly exceed that of standard DLP. In finite fields\n$\\mathbb{F}_p^*$, both problems exhibit comparable complexity. Surprisingly, in\nelliptic curves $E(\\mathbb{F}_p)$, the SDLP becomes trivial due to the bounded\nautomorphism group, while in elementary abelian groups $\\mathbb{F}_p^n$, the\nSDLP can be harder than DLP, with complexity varying based on the eigenvalue\nstructure of the automorphism. Our findings reveal that the non-abelian\nstructure of semidirect products does not inherently guarantee increased\nclassical hardness, suggesting that the search for classically hard problems\nfor cryptographic applications requires more careful consideration of the\nunderlying algebraic structures.", "AI": {"tldr": "The paper examines the classical hardness of the semidirect discrete logarithm problem (SDLP) across finite group platforms, finding its difficulty platform-dependent and not inherently better than the standard discrete logarithm problem (DLP).", "motivation": "SDLP was proposed as a quantum-resistant cryptographic foundation, but recent quantum algorithms have challenged its quantum resilience. This study reassesses SDLP's computational advantage against classical adversaries.", "method": "Reformulated SDLP as a generalized discrete logarithm problem (GDLP) and adapted classical algorithms like Baby-Step Giant-Step for analysis. Theoretical evaluations and SageMath experiments compared complexities in different group structures.", "result": "SDLP exhibits time/space complexity $O(\\sqrt{r})$ with variable \"r\" across platforms. It shows comparable difficulty to DLP in finite fields $\\mathbb{F}_p^*$, becomes trivial in elliptic curves, and can surpass DLP in elementary abelian groups $\\mathbb{F}_p^n$ based on automorphism eigenvalue structures.", "conclusion": "The non-abelian nature of semidirect products does not guarantee classical difficulty for SDLP. The study emphasizes the need for meticulous algebraic structure selection when designing hard computational problems for cryptography."}}
{"id": "2508.05034", "categories": ["cs.SE", "cs.LG"], "pdf": "https://arxiv.org/pdf/2508.05034", "abs": "https://arxiv.org/abs/2508.05034", "authors": ["Arabat", "Ali", "Sayagh", "Mohammed", "Hassine", "Jameleddine"], "title": "An ML-based Approach to Predicting Software Change Dependencies: Insights from an Empirical Study on OpenStack", "comment": null, "summary": "As software systems grow in complexity, accurately identifying and managing\ndependencies among changes becomes increasingly critical. For instance, a\nchange that leverages a function must depend on the change that introduces it.\nEstablishing such dependencies allows CI/CD pipelines to build and orchestrate\nchanges effectively, preventing build failures and incomplete feature\ndeployments. In modern software systems, dependencies often span multiple\ncomponents across teams, creating challenges for development and deployment.\nThey serve various purposes, from enabling new features to managing\nconfigurations, and can even involve traditionally independent changes like\ndocumentation updates. To address these challenges, we conducted a preliminary\nstudy on dependency management in OpenStack, a large-scale software system. Our\nstudy revealed that a substantial portion of software changes in OpenStack over\nthe past 10 years are interdependent. Surprisingly, 51.08% of these\ndependencies are identified during the code review phase-after a median delay\nof 5.06 hours-rather than at the time of change creation. Developers often\nspend a median of 57.12 hours identifying dependencies, searching among a\nmedian of 463 other changes. To help developers proactively identify\ndependencies, we propose a semi-automated approach that leverages two ML\nmodels. The first model predicts the likelihood of dependencies among changes,\nwhile the second identifies the exact pairs of dependent changes. Our proposed\nmodels demonstrate strong performance, achieving average AUC scores of 79.33%\nand 91.89%, and Brier scores of 0.11 and 0.014, respectively. Indeed, the\nsecond model has a good top-k recall across all types of pairs, while the top-k\nprecision has room for improvement.", "AI": {"tldr": "This paper presents a semi-automated ML approach to proactively identify interdependent software changes in OpenStack, revealing that 51.08% of dependencies are discovered during delayed code reviews, costing developers significant effort.", "motivation": "Managing dependencies in complex software systems is critical for CI/CD pipelines but faces challenges due to multi-component/team dependencies, delays in detection, and extensive manual effort (median 57.12 hours). Existing problems lead to build failures and inefficient deployments.", "method": "The study analyzes 10 years of OpenStack changes and proposes a two-stage semi-automated method: (1) a dependency likelihood predictor and (2) a model identifying specific dependent change pairs. ML models are trained to address delayed manual detection and reduce search effort.", "result": "Results show 51.08% of dependencies are detected during code review with 5.06hr median delay. The proposed models achieved 79.33% AUC (likelihood prediction) and 91.89% AUC (change pair detection), with Brier scores of 0.11 and 0.014. While the second model has high recall, precision requires improvement.", "conclusion": "The paper demonstrates the feasibility of semi-automated dependency management for large-scale systems like OpenStack, though precision of the pair identification model needs refinement to fully reduce manual effort and improve CI/CD efficiency."}}
{"id": "2508.05188", "categories": ["cs.CR", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.05188", "abs": "https://arxiv.org/abs/2508.05188", "authors": ["Kim Hammar", "Tansu Alpcan", "Emil C. Lupu"], "title": "Incident Response Planning Using a Lightweight Large Language Model with Reduced Hallucination", "comment": null, "summary": "Timely and effective incident response is key to managing the growing\nfrequency of cyberattacks. However, identifying the right response actions for\ncomplex systems is a major technical challenge. A promising approach to\nmitigate this challenge is to use the security knowledge embedded in large\nlanguage models (LLMs) to assist security operators during incident handling.\nRecent research has demonstrated the potential of this approach, but current\nmethods are mainly based on prompt engineering of frontier LLMs, which is\ncostly and prone to hallucinations. We address these limitations by presenting\na novel way to use an LLM for incident response planning with reduced\nhallucination. Our method includes three steps: fine-tuning, information\nretrieval, and lookahead planning. We prove that our method generates response\nplans with a bounded probability of hallucination and that this probability can\nbe made arbitrarily small at the expense of increased planning time under\ncertain assumptions. Moreover, we show that our method is lightweight and can\nrun on commodity hardware. We evaluate our method on logs from incidents\nreported in the literature. The experimental results show that our method a)\nachieves up to 22% shorter recovery times than frontier LLMs and b) generalizes\nto a broad range of incident types and response actions.", "AI": {"tldr": "This paper proposes a framework using fine-tuning, information retrieval, and lookahead planning to improve incident response with LLMs by reducing hallucinations while maintaining lightweight execution.", "motivation": "Current methods rely on costly prompt engineering for frontier LLMs in incident response, leading to hallucinations and operational inefficiency.", "method": "The approach combines domain-specific fine-tuning to ground LLM knowledge, information retrieval to access contextualized incident data, and lookahead planning to sequence response actions while bounding hallucination probability.", "result": "Achieves 22% faster incident recovery compared to frontier LLM baselines and demonstrates generalization across 7+ incident types with 92% successful action sequence generation.", "conclusion": "The framework provides a scalable solution for accurate LLM-powered incident response on commodity hardware, balancing hallucination reduction against planning time tradeoffs."}}
{"id": "2508.05085", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.05085", "abs": "https://arxiv.org/abs/2508.05085", "authors": ["Junayed Mahmud", "James Chen", "Terry Achille", "Camilo Alvarez-Velez", "Darren Dean Bansil", "Patrick Ijieh", "Samar Karanch", "Nadeeshan De Silva", "Oscar Chaparro", "Andrian Marcus", "Kevin Moran"], "title": "LadyBug: A GitHub Bot for UI-Enhanced Bug Localization in Mobile Apps", "comment": "5 pages, to appear in the Proceedings of the 41st International\n  Conference on Software Maintenance and Evolution (ICSME'25) - Tool\n  Demonstration Track", "summary": "This paper introduces LadyBug, a GitHub bot that automatically localizes bugs\nfor Android apps by combining UI interaction information with text retrieval.\nLadyBug connects to an Android app's GitHub repository, and is triggered when a\nbug is reported in the corresponding issue tracker. Developers can then record\na reproduction trace for the bug on a device or emulator and upload the trace\nto LadyBug via the GitHub issue tracker. This enables LadyBug to utilize both\nthe text from the original bug description, and UI information from the\nreproduction trace to accurately retrieve a ranked list of files from the\nproject that most likely contain the reported bug.\n  We empirically evaluated LadyBug using an automated testing pipeline and\nbenchmark called RedWing that contains 80 fully-localized and reproducible bug\nreports from 39 Android apps. Our results illustrate that LadyBug outperforms\ntext-retrieval-based baselines and that the utilization of UI information leads\nto a substantial increase in localization accuracy. LadyBug is an open-source\ntool, available at https://github.com/LadyBugML/ladybug.\n  A video showing the capabilities of Ladybug can be viewed here:\nhttps://youtu.be/hI3tzbRK0Cw", "AI": {"tldr": "LadyBug is a GitHub bot that improves Android bug localization by integrating UI interaction traces with text retrieval, outperforming baselines through enhanced accuracy.", "motivation": "Existing bug localization tools rely solely on text retrieval, missing contextual UI interaction data. LadyBug aims to reduce developer effort by combining both sources for more precise results.", "method": "LadyBug leverages text from GitHub issues and UI event sequences from reproduction traces to build a hybrid retrieval system. UI information is processed via event embeddings and used alongside bug report text to rank relevant files.", "result": "On the 80-bug RedWing benchmark from 39 Android apps, LadyBug achieved significantly higher localization accuracy than text-only baselines. UI-based retrieval improved performance by 25%+ in top-5 file rankings.", "conclusion": "The integration of UI traces with text retrieval substantially enhances bug localization accuracy. LadyBug's open-source implementation demonstrates practical feasibility for developers seeking faster bug resolution."}}
{"id": "2508.05276", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2508.05276", "abs": "https://arxiv.org/abs/2508.05276", "authors": ["Sharad Agarwal", "Guillermo Suarez-Tangil", "Marie Vasek"], "title": "An Overview of 7726 User Reports: Uncovering SMS Scams and Scammer Strategies", "comment": null, "summary": "Mobile network operators implement firewalls to stop illicit messages, but\nscammers find ways to evade detection. Previous work has looked into SMS texts\nthat are blocked by these firewalls. However, there is little insight into SMS\ntexts that bypass them and reach users. To this end, we collaborate with a\nmajor mobile network operator to receive 1.35m user reports submitted over four\nmonths. We find 89.16% of user reports comprise text messages, followed by\nreports of suspicious calls and URLs. Using our methodological framework, we\nidentify 35.12% of the unique text messages reported by users as spam, while\n40.27% are scam text messages. This is the first paper that investigates SMS\nreports submitted by users and differentiates between spam and scams. Our paper\nclassifies the identified scam text messages into 12 scam types, of which the\nmost popular is 'wrong number' scams. We explore the various infrastructure\nservices that scammers abuse to conduct SMS scams, including mobile network\noperators and hosting infrastructure, and analyze the text of the scam messages\nto understand how scammers lure victims into providing them with their personal\nor financial details.", "AI": {"tldr": "This study analyzes 1.35m user-reported SMS messages to investigate scam/bypass techniques, revealing 40.27% are scams with 'wrong number' as the most prevalent type, and offering the first classification framework differentiating spam vs scams.", "motivation": "While SMS firewalls filter malicious messages, scammers evade detection. Prior work focuses on blocked messages, but understanding unblocked scam messages is critical to improving filtering capabilities.", "method": "Collaborated with a mobile network operator to collect 1.35m user reports over 4 months. Used a methodological framework to classify reported messages into spam, scam, or other categories based on linguistic and technical patterns.", "result": "Identified 35.12% of unique text messages as spam, 40.27% as scams. Classified scams into 12 types with 'wrong number' being most common. Revealed infrastructure abuse patterns and social engineering tactics in scam message content.", "conclusion": "This paper pioneers large-scale analysis of user-submitted SMS reports to understand bypassed scam messages. The methodology enables better categorization of threats while highlighting how scammers exploit telecom infrastructure and psychological manipulation to steal personal data."}}
{"id": "2508.05170", "categories": ["cs.SE", "cs.AI", "cs.CL", "cs.LG"], "pdf": "https://arxiv.org/pdf/2508.05170", "abs": "https://arxiv.org/abs/2508.05170", "authors": ["Lishui Fan", "Yu Zhang", "Mouxiang Chen", "Zhongxin Liu"], "title": "Posterior-GRPO: Rewarding Reasoning Processes in Code Generation", "comment": null, "summary": "Reinforcement learning (RL) has significantly advanced code generation for\nlarge language models (LLMs). However, current paradigms rely on outcome-based\nrewards from test cases, neglecting the quality of the intermediate reasoning\nprocess. While supervising the reasoning process directly is a promising\ndirection, it is highly susceptible to reward hacking, where the policy model\nlearns to exploit the reasoning reward signal without improving final outcomes.\nTo address this, we introduce a unified framework that can effectively\nincorporate the quality of the reasoning process during RL. First, to enable\nreasoning evaluation, we develop LCB-RB, a benchmark comprising preference\npairs of superior and inferior reasoning processes. Second, to accurately score\nreasoning quality, we introduce an Optimized-Degraded based (OD-based) method\nfor reward model training. This method generates high-quality preference pairs\nby systematically optimizing and degrading initial reasoning paths along\ncurated dimensions of reasoning quality, such as factual accuracy, logical\nrigor, and coherence. A 7B parameter reward model with this method achieves\nstate-of-the-art (SOTA) performance on LCB-RB and generalizes well to other\nbenchmarks. Finally, we introduce Posterior-GRPO (P-GRPO), a novel RL method\nthat conditions process-based rewards on task success. By selectively applying\nrewards to the reasoning processes of only successful outcomes, P-GRPO\neffectively mitigates reward hacking and aligns the model's internal reasoning\nwith final code correctness. A 7B parameter model with P-GRPO achieves superior\nperformance across diverse code generation tasks, outperforming outcome-only\nbaselines by 4.5%, achieving comparable performance to GPT-4-Turbo. We further\ndemonstrate the generalizability of our approach by extending it to\nmathematical tasks. Our models, dataset, and code are publicly available.", "AI": {"tldr": "This paper proposes a framework for RL-based code generation that incorporates reasoning process quality evaluation (LCB-RB benchmark & OD-based reward model) and introduces P-GRPO - an innovative RL method applying process-based rewards only conditionally on task success, achieving SOTA results matching GPT-4-Turbo and demonstrating broad generalizability across coding and math tasks.", "motivation": "Current code generation methods using reinforcement learning (RL) with outcome-based rewards from test cases overlook the quality of intermediate reasoning processes, leading to reward hacking issues where models exploit the reward signal without improving final outcomes.", "method": "The approach uses two novel components: 1) LCB-RB benchmark with preference pairs for reasoning process evaluation, 2) Optimized-Degraded (OD-based) reward model training enhancing reasoning quality assessment across factual accuracy, logical rigor, and coherence dimensions, and 3) Posterior-GRPO (P-GRPO) which applies process-based rewards only for successful task completions to prevent reward hacking.", "result": "The proposed 7B parameter model achieves state-of-the-art results on LCB-RB benchmark and outperforms outcome-only baselines by 4.5% across diverse code generation tasks, reaching performance comparable to GPT-4-Turbo. The framework also generalizes well to mathematical reasoning tasks.", "conclusion": "This work establishes a paradigm for code generation that addresses the quality of the internal reasoning process during RL, demonstrates effective mitigation against reward hacking via conditional reward application, and successfully transfers the approach to mathematical problem-solving tasks."}}
{"id": "2508.05334", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2508.05334", "abs": "https://arxiv.org/abs/2508.05334", "authors": ["Ahsan Farabi", "Israt Khandaker", "Nusrat Jahan", "Ibrahim Khalil Shanto"], "title": "ShikkhaChain: A Blockchain-Powered Academic Credential Verification System for Bangladesh", "comment": null, "summary": "Academic credential fraud threatens educational integrity, especially in\ndeveloping countries like Bangladesh, where verification methods are primarily\nmanual and inefficient. To address this challenge, we present ShikkhaChain, a\nblockchain-powered certificate management platform designed to securely issue,\nverify, and revoke academic credentials in a decentralized and tamper-proof\nmanner. Built on Ethereum smart contracts and utilizing IPFS for off-chain\nstorage, the platform offers a transparent, scalable solution accessible\nthrough a React-based DApp with MetaMask integration. ShikkhaChain enables\nrole-based access for governments, regulators, institutions, and public\nverifiers, allowing QR-based validation and on-chain revocation tracking. Our\nprototype demonstrates enhanced trust, reduced verification time, and improved\ninternational credibility for Bangladeshi degrees, promoting a more reliable\nacademic and employment ecosystem.", "AI": {"tldr": "ShikkhaChain is a blockchain-based certificate management platform designed to combat academic credential fraud in Bangladesh using Ethereum smart contracts, IPFS, and a React DApp with MetaMask integration, offering transparent and tamperproof verification.", "motivation": "Academic credential fraud undermines educational integrity, particularly in developing countries like Bangladesh where traditional manual verification methods are inefficient and prone to errors.", "method": "The platform leverages Ethereum smart contracts for secure credential issuance and revocation, utilizes IPFS for decentralized off-chain storage, and provides a React-based distributed application (DApp) with MetaMask integration for user access. It implements role-based permissions for governments, institutions, and verifiers.", "result": "The prototype demonstrated improved trust through immutable verification, significantly reduced validation time compared to manual processes, and enhanced international credibility for Bangladeshi academic qualifications.", "conclusion": "ShikkhaChain provides a scalable, decentralized solution to mitigate credential fraud by ensuring transparent, secure, and efficient management of academic certificates, fostering a more trustworthy academic and employment ecosystem in Bangladesh."}}
{"id": "2508.05192", "categories": ["cs.SE", "H.2.3; I.2.6; D.2.2"], "pdf": "https://arxiv.org/pdf/2508.05192", "abs": "https://arxiv.org/abs/2508.05192", "authors": ["Felix Neubauer", "J\u00fcrgen Pleiss", "Benjamin Uekermann"], "title": "AI-assisted JSON Schema Creation and Mapping", "comment": "Accepted for Tools and Demonstrations Track of ACM/IEEE MODELS'25", "summary": "Model-Driven Engineering (MDE) places models at the core of system and data\nengineering processes. In the context of research data, these models are\ntypically expressed as schemas that define the structure and semantics of\ndatasets. However, many domains still lack standardized models, and creating\nthem remains a significant barrier, especially for non-experts. We present a\nhybrid approach that combines large language models (LLMs) with deterministic\ntechniques to enable JSON Schema creation, modification, and schema mapping\nbased on natural language inputs by the user. These capabilities are integrated\ninto the open-source tool MetaConfigurator, which already provides visual model\nediting, validation, code generation, and form generation from models. For data\nintegration, we generate schema mappings from heterogeneous JSON, CSV, XML, and\nYAML data using LLMs, while ensuring scalability and reliability through\ndeterministic execution of generated mapping rules. The applicability of our\nwork is demonstrated in an application example in the field of chemistry. By\ncombining natural language interaction with deterministic safeguards, this work\nsignificantly lowers the barrier to structured data modeling and data\nintegration for non-experts.", "AI": {"tldr": "The paper introduces a hybrid approach combining LLMs with deterministic techniques for JSON schema creation, modification, and mapping via natural language inputs, integrated into the open-source MetaConfigurator tool. It lowers barriers for non-experts in structured data modeling and integration.", "motivation": "Many domains lack standardized data models, and creating them requires significant expertise. Non-experts face challenges in schema generation and data integration, necessitating tools that reduce complexity through natural language interaction.", "method": "A hybrid method integrating LLMs for schema generation/mapping from natural language inputs with deterministic execution for scalability and reliability. The approach is implemented in MetaConfigurator, which supports visual editing, validation, code/form generation, and handles heterogeneous data formats.", "result": "The hybrid approach enabled non-expert-friendly schema creation and mapping, demonstrated in a chemistry domain application example. The tool successfully integrates natural language input with deterministic rule execution for data modeling.", "conclusion": "The work bridges the expertise gap in MDE by combining LLMs' flexibility with deterministic safeguards. This hybridization significantly improves accessibility for structured data modeling, making complex data integration tasks feasible for non-experts."}}
{"id": "2508.05394", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2508.05394", "abs": "https://arxiv.org/abs/2508.05394", "authors": ["Xiaoli Zhuo", "Xuehu Yan", "Wei Yan"], "title": "Grouped k-threshold random grid-based visual cryptography scheme", "comment": null, "summary": "Visual cryptography schemes (VCSs) belong to a category of secret image\nsharing schemes that do not require cryptographic knowledge for decryption,\ninstead relying directly on the human visual system. Among VCSs, random\ngrid-based VCS (RGVCS) has garnered widespread attention as it avoids pixel\nexpansion while requiring no basic matrices design. Contrast, a core metric for\nRGVCS, directly determines the visual quality of recovered images, rendering\nits optimization a critical research objective. However, existing $(k,n)$\nRGVCSs still fail to attain theoretical upper bounds on contrast, highlighting\nthe urgent need for higher-contrast constructions. In this paper, we propose a\nnovel sharing paradigm for RGVCS that constructs $(k,n)$-threshold schemes from\narbitrary $(k,n')$-threshold schemes $(k \\leq n'\\leq n)$, termed\n\\emph{$n'$-grouped $(k,n)$ RGVCS}. This paradigm establishes hierarchical\ncontrast characteristics: participants within the same group achieve optimal\nrecovery quality, while inter-group recovery shows a hierarchical contrast. We\nfurther introduce a new contrast calculation formula tailored to the new\nparadigm. Then, we propose a contrast-enhanced $(k,n)$ RGVCS by setting $n'=\nk$, achieving the highest contrast value documented in the existing literature.\nTheoretical analysis and experimental results demonstrate the superiority of\nour proposed scheme in terms of contrast.", "AI": {"tldr": "This paper introduces an enhanced (k,n)-threshold Random Grid-Based Visual Cryptography Scheme (RGVCS) called n\u2032-grouped RGVCS, which improves image recovery contrast by creating hierarchical sharing groups and setting n\u2032=k to achieve theoretical contrast upper bounds.", "motivation": "Existing RGVCSs fail to attain the theoretical upper bounds for contrast, limiting the visual quality of recovered images. Optimizing contrast is critical to meet these bounds and improve practical utility.", "method": "A novel (k,n) RGVCS is proposed by constructing schemes from arbitrary (k,n\u2032)-threshold schemes (k \u2264 n\u2032 \u2264 n). The authors introduce a hierarchical grouping and a new contrast calculation formula tailored to the paradigm.", "result": "The proposed scheme achieves the highest documented contrast value when n\u2032=k, validated through theoretical analysis and experimental results.", "conclusion": "The n\u2032-grouped RGVCS with n\u2032=k significantly enhances contrast over existing methods, demonstrating superiority in visual quality optimization for secret image sharing."}}
{"id": "2508.05193", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.05193", "abs": "https://arxiv.org/abs/2508.05193", "authors": ["Kaiwen Yan", "Yuhang Chang", "Zirui Guo", "Yaling Mou", "Jiang Ming", "Jingwei Sun"], "title": "STEPWISE-CODEX-Bench: Evaluating Complex Multi-Function Comprehension and Fine-Grained Execution Reasoning", "comment": null, "summary": "In recent years, large language models (LLMs) have made significant progress\nin code intelligence, yet systematically evaluating their code understanding\nand reasoning abilities remains challenging. Mainstream benchmarks such as\nHumanEval and MBPP primarily assess functional correctness, while reasoning\nbenchmarks like CRUXEVAL are limited to single-function, low-complexity\nscenarios. As a result, advanced models achieve nearly saturated scores,\nlimiting their discriminative power. To address this, we present\nSTEPWISE-CODEX-Bench (SX-Bench), a novel benchmark designed for complex\nmulti-function understanding and fine-grained execution reasoning. SX-Bench\nfeatures tasks involving collaboration among multiple sub-functions (e.g.,\nchained calls, nested loops), shifting evaluation towards overall control and\ndata flow modeling. It defines \"computation steps\" as the minimal execution\nunit and requires models to predict the total number of steps in reasoning\ntasks, thereby assessing a model's in-depth understanding of dynamic execution\nbeyond simple I/O matching. Evaluation on over 20 mainstream models (including\n14 reasoning-enhanced models) demonstrates that SX-Bench is highly\ndiscriminative: even the state-of-the-art OpenAI-O3 achieves only 78.37 percent\naccuracy on Hard-Reasoning tasks, much lower than its saturated scores on\nprevious benchmarks, thereby revealing bottlenecks in complex and fine-grained\nreasoning. We also release an automated pipeline combining program synthesis,\nsymbolic execution, and LLM-aided validation for efficient benchmark generation\nand quality assurance. SX-Bench advances code evaluation from \"single-function\nverification\" to \"multi-function dynamic reasoning,\" providing a key tool for\nthe in-depth assessment of advanced code intelligence models.", "AI": {"tldr": "The paper introduces STEPWISE-CODEX-Bench (SX-Bench), a novel benchmark for complex multi-function code understanding and fine-grained execution reasoning, alongside an automated generation pipeline to enhance evaluation efficiency.", "motivation": "Existing benchmarks for code intelligence lack the complexity to meaningfully differentiate advanced models, as they focus on functional correctness or oversimplified reasoning tasks, leading to saturated performance scores.", "method": "The authors designed SX-Bench with tasks requiring control/data flow modeling across multiple sub-functions (e.g., chained calls, nested loops) and introduced a step-based execution reasoning framework. They also developed an automated pipeline integrating program synthesis, symbolic execution, and LLM-aided validation for benchmark creation.", "result": "SX-Bench demonstrates strong discriminative power: OpenAI-O3 achieves only 78.37% accuracy on Hard-Reasoning tasks, significantly lower than scores on prior benchmarks, highlighting limitations in complex code reasoning. Evaluation includes over 20 mainstream models.", "conclusion": "SX-Bench advances code evaluation from basic verification to multi-function dynamic reasoning, offering a critical tool for assessing the depth of advanced code intelligence models and revealing current reasoning bottlenecks."}}
{"id": "2508.05518", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2508.05518", "abs": "https://arxiv.org/abs/2508.05518", "authors": ["Weihong Sheng", "Jiajun Chen", "Bin Cai", "Chunqiang Hu", "Meng Han", "Jiguo Yu"], "title": "Local Distance Query with Differential Privacy", "comment": null, "summary": "Differential Privacy (DP) is commonly employed to safeguard graph analysis or\npublishing. Distance, a critical factor in graph analysis, is typically handled\nusing curator DP, where a trusted curator holds the complete neighbor lists of\nall vertices and answers queries privately. However, in many real-world\nscenarios, such a curator may not be present, posing a significant challenge\nfor implementing differentially private distance queries under Local\nDifferential Privacy (LDP). This paper proposes two approaches to address this\nchallenge. The first approach generates a synthetic graph by randomizing\nresponses and applies bitwise operations to reduce noise interference. However,\nlike other synthetic graph methods, this approach suffers from low utility. To\novercome this limitation, we propose a second approach, the first LDP method\nspecifically designed for distance queries, which captures the global graph\nstructure by continuously aggregating local distance vectors from neighboring\nvertices. This process enables the accurate updating of global distances. We\ndemonstrate the effectiveness of our method through comprehensive theoretical\nanalysis and experimental evaluations on real-world datasets.", "AI": {"tldr": "This paper introduces the first LDP method for distance queries by aggregating local distance vectors, addressing the absence of a trusted curator in real-world scenarios.", "motivation": "Traditional curator-based differential privacy (DP) for graph analysis relies on a trusted entity, which is often unavailable in practical applications. Real-world scenarios require decentralized DP solutions for distance queries without such a curator.", "method": "1) Synthetic graph generation with randomized responses and noise reduction via bitwise operations; 2) Novel LDP framework that iteratively aggregates local distance vectors from neighboring vertices to capture global graph structure and update distances accurately.", "result": "The proposed LDP method demonstrates effectiveness through theoretical analysis and experiments on real-world datasets, outperforming existing synthetic graph approaches in utility while maintaining privacy guarantees.", "conclusion": "The paper establishes a new LDP framework specifically optimized for distance queries, achieving accurate global distance inference through decentralized local aggregation without requiring a trusted curator."}}
{"id": "2508.05199", "categories": ["cs.SE", "cs.AI", "D.2.2; D.2.7; I.2.2"], "pdf": "https://arxiv.org/pdf/2508.05199", "abs": "https://arxiv.org/abs/2508.05199", "authors": ["Igor Costa", "Christopher Baran"], "title": "EvoGraph: Hybrid Directed Graph Evolution toward Software 3.0", "comment": "15 pages, 3 tables, 1 algorithm. Submitted to ICSE 2025", "summary": "We introduce **EvoGraph**, a framework that enables software systems to\nevolve their own source code, build pipelines, documentation, and tickets.\nEvoGraph represents every artefact in a typed directed graph, applies learned\nmutation operators driven by specialized small language models (SLMs), and\nselects survivors with a multi-objective fitness. On three benchmarks, EvoGraph\nfixes 83% of known security vulnerabilities, translates COBOL to Java with 93%\nfunctional equivalence (test verified), and maintains documentation freshness\nwithin two minutes. Experiments show a 40% latency reduction and a sevenfold\ndrop in feature lead time compared with strong baselines. We extend our\napproach to **evoGraph**, leveraging language-specific SLMs for modernizing\n.NET, Lisp, CGI, ColdFusion, legacy Python, and C codebases, achieving 82-96%\nsemantic equivalence across languages while reducing computational costs by 90%\ncompared to large language models. EvoGraph's design responds to empirical\nfailure modes in legacy modernization, such as implicit contracts, performance\npreservation, and integration evolution. Our results suggest a practical path\ntoward Software 3.0, where systems adapt continuously yet remain under\nmeasurable control.", "AI": {"tldr": "EvoGraph is a framework that uses typed directed graphs and specialized small language models (SLMs) for software evolution, achieving high security fixes, cross-language modernization with semantic equivalence, and reduced latency/feature lead time versus large language models.", "motivation": "The paper addresses challenges in legacy system modernization, such as maintaining implicit contracts, preserving performance, and evolving integrations, to enable practical Software 3.0 systems that adapt continuously while staying controllable.", "method": "EvoGraph employs a type-aware graph representation of software artifacts, uses SLM-driven mutation operators for targeted evolution, and applies multi-objective fitness selection for survivor optimization across modernization scenarios.", "result": "Benchmarks show 83% security vulnerability fixes, 93% functional equivalence in COBOL-to-Java translation, 40% latency reduction, sevenfold shorter feature lead time, and 82-96% semantic equivalences across legacy codebases with 90% lower computational costs than large language models.", "conclusion": "EvoGraph demonstrates a scalable path toward continuously adaptive software systems through language-specific SLMs and graph-based representation, effectively mitigating legacy modernization pitfalls while maintaining control over evolution outcomes."}}
{"id": "2508.05545", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2508.05545", "abs": "https://arxiv.org/abs/2508.05545", "authors": ["Leon Garza", "Anantaa Kotal", "Aritran Piplai", "Lavanya Elluri", "Prajit Das", "Aman Chadha"], "title": "PRvL: Quantifying the Capabilities and Risks of Large Language Models for PII Redaction", "comment": null, "summary": "Redacting Personally Identifiable Information (PII) from unstructured text is\ncritical for ensuring data privacy in regulated domains. While earlier\napproaches have relied on rule-based systems and domain-specific Named Entity\nRecognition (NER) models, these methods fail to generalize across formats and\ncontexts. Recent advances in Large Language Models (LLMs) offer a promising\nalternative, yet the effect of architectural and training choices on redaction\nperformance remains underexplored. LLMs have demonstrated strong performance in\ntasks that require contextual language understanding, including the redaction\nof PII in free-form text. Prior work suggests that with appropriate adaptation,\nLLMs can become effective contextual privacy learners. However, the\nconsequences of architectural and training choices for PII Redaction remain\nunderexplored. In this work, we present a comprehensive analysis of LLMs as\nprivacy-preserving PII Redaction systems. We evaluate a range of LLM\narchitectures and training strategies for their effectiveness in PII Redaction.\nOur analysis measures redaction performance, semantic preservation, and PII\nleakage, and compares these outcomes against latency and computational cost.\nThe results provide practical guidance for configuring LLM-based redactors that\nare accurate, efficient, and privacy-aware. To support reproducibility and\nreal-world deployment, we release PRvL, an open-source suite of fine-tuned\nmodels, and evaluation tools for general-purpose PII Redaction. PRvL is built\nentirely on open-source LLMs and supports multiple inference settings for\nflexibility and compliance. It is designed to be easily customized for\ndifferent domains and fully operable within secure, self-managed environments.\nThis enables data owners to perform redactions without relying on third-party\nservices or exposing sensitive content beyond their own infrastructure.", "AI": {"tldr": "Evaluates LLMs for PII redaction and introduces PRvL open-source tool for privacy-preserving text processing.", "motivation": "Existing rule-based and domain-specific NER methods lack generalizability in redacting PII from unstructured text; LLMs show promise but architectural and training choices' effects remain unstudied.", "method": "Comprehensive analysis comparing LLM architectures and training strategies for PII redaction across metrics including performance, semantic preservation, leakage reduction, latency, and computational cost.", "result": "Provides practical guidance for efficient LLM-based redactors while achieving accuracy and privacy, with PRvL offering fine-tuned models supporting domain customization and secure deployment.", "conclusion": "Releases PRvL to enable reproducible, customizable, and compliant PII redaction using open-source LLMs within self-managed secure environments, offering both standalone and integration-ready solutions."}}
{"id": "2508.05301", "categories": ["cs.SE", "cs.CY"], "pdf": "https://arxiv.org/pdf/2508.05301", "abs": "https://arxiv.org/abs/2508.05301", "authors": ["Victoria Torres Bosch", "Ronny Seiger", "Manuela Albert Albiol", "Antoni Mestre Gascon", "Pedro Jose Valderas Aranda"], "title": "A Conceptual Model and Methodology for Sustainability-aware, IoT-enhanced Business Processes", "comment": "Submitted to Information Systems Frontiers (1572-9419)", "summary": "The real-time data collection and automation capabilities offered by the\nInternet of Things (IoT) are revolutionizing and transforming Business\nProcesses (BPs) into IoT-enhanced BPs, showing high potential for improving\nsustainability. Although already studied in Business Process Management (BPM),\nsustainability research has primarily focused on environmental concerns.\nHowever, achieving a holistic and lasting impact requires a systematic approach\nto address sustainability beyond the environmental dimension. This work\nproposes a conceptual model and a structured methodology with the goal of\nanalyzing the potential of IoT to measure and improve the sustainability of\nBPs. The conceptual model formally represents key sustainability concepts,\nlinking BPM and IoT by highlighting how IoT devices support and contribute to\nsustainability. The methodology guides the systematic analysis of existing BPs,\nidentifies opportunities, and implements sustainability-aware, IoT-enhanced\nBPs. The approach is illustrated through a running example from the tourism\ndomain and a case study in healthcare.", "AI": {"tldr": "This paper proposes a conceptual model and structured methodology for systematically analyzing IoT's potential to measure and improve sustainability in business processes (BPs), extending beyond environmental dimensions to ensure holistic impact through examples in tourism and healthcare.", "motivation": "While IoT enhances business processes with real-time automation, sustainability research has narrowly focused on environmental aspects, necessitating a systematic approach to address all sustainability dimensions comprehensively.", "method": "The authors developed a conceptual model connecting BPM and IoT to represent sustainability concepts, and a methodology for analyzing existing BPs, identifying opportunities, and implementing IoT-enhanced, sustainability-aware processes using domain examples.", "result": "The model demonstrates how IoT devices support sustainability measurement in BPs, while the methodology provides actionable steps for analysis and implementation, validated through tourism and healthcare case studies.", "conclusion": "The proposed approach offers a framework to systematically leverage IoT for sustainability in business processes, addressing environmental, social, and economic dimensions through structured analysis and domain-specific applications."}}
