{"id": "2510.25882", "categories": ["cs.SE", "D.2.9"], "pdf": "https://arxiv.org/pdf/2510.25882", "abs": "https://arxiv.org/abs/2510.25882", "authors": ["Wenhao Yang", "Minghui Zhou", "Daniel Izquierdo Cortázar", "Yehui Wang"], "title": "Internal Vulnerabilities, External Threats: A Grounded Framework for Enterprise Open Source Risk Governance", "comment": null, "summary": "Enterprise engagement with open source has evolved from tactical adoption to\nstrategic deep integration, exposing them to a complex risk landscape far\nbeyond mere code. However, traditional risk management, narrowly focused on\ntechnical tools, is structurally inadequate for systemic threats like upstream\n\"silent fixes\", community conflicts, or sudden license changes, creating a\ndangerous governance blind spot. To address this governance vacuum and enable\nthe necessary shift from tactical risk management to holistic risk governance,\nwe conducted a grounded theory study with 15 practitioners to develop a\nholistic risk governance framework. Our study formalizes an analytical\nframework built on a foundational risk principle: an uncontrollable External\nThreat (e.g., a sudden license change in a key dependency) only becomes a\ncritical risk when it exploits a controllable Internal Vulnerability (e.g., an\nundefined risk appetite for single-vendor projects), which then amplifies the\nimpact.The framework operationalizes this principle through a clear logical\nchain: \"Objectives -> Threats -> Vulnerabilities -> Mitigation\" (OTVM). This\nprovides a holistic decision model that transcends mere technical checklists.\nBased on this logic, our contributions are: (1) a \"Strategic Objectives Matrix\"\nto clarify goals; (2) a systematic dual taxonomy of External Threats (Ex-Tech,\nEx-Comm, Ex-Eco) and Internal Vulnerabilities (In-Strat, In-Ops, In-Tech); and\n(3) an actionable mitigation framework mapping capability-building to these\nvulnerabilities. The framework's analytical utility was validated by three\nindustry experts through retrospective case studies on real-world incidents.\nThis work provides a novel diagnostic lens and a systematic path for\nenterprises to shift from reactive \"firefighting\" to proactively building an\norganizational \"immune system\"."}
{"id": "2510.25890", "categories": ["cs.SE", "cs.AI", "D.2.4; I.2.2"], "pdf": "https://arxiv.org/pdf/2510.25890", "abs": "https://arxiv.org/abs/2510.25890", "authors": ["Tong Ma", "Hui Lai", "Hui Wang", "Zhenhu Tian", "Jizhou Wang", "Haichao Wu", "Yongfan Gao", "Chaochao Li", "Fengjie Xu", "Ling Fang"], "title": "PRISM: Proof-Carrying Artifact Generation through LLM x MDE Synergy and Stratified Constraints", "comment": "45 pages, 9 figures", "summary": "PRISM unifies Large Language Models with Model-Driven Engineering to generate\nregulator-ready artifacts and machine-checkable evidence for safety- and\ncompliance-critical domains. PRISM integrates three pillars: a Unified\nMeta-Model (UMM) reconciles heterogeneous schemas and regulatory text into a\nsingle semantic space; an Integrated Constraint Model (ICM) compiles structural\nand semantic requirements into enforcement artifacts including generation-time\nautomata (GBNF, DFA) and post-generation validators (e.g., SHACL, SMT); and\nConstraint-Guided Verifiable Generation (CVG) applies these through two-layer\nenforcement - structural constraints drive prefix-safe decoding while\nsemantic/logical validation produces machine-checkable certificates. When\nviolations occur, PRISM performs audit-guided repair and records generation\ntraces for compliance review. We evaluate PRISM in automotive software\nengineering (AUTOSAR) and cross-border legal jurisdiction (Brussels I bis).\nPRISM produces structurally valid, auditable artifacts that integrate with\nexisting tooling and substantially reduce manual remediation effort, providing\na practical path toward automated artifact generation with built-in assurance."}
{"id": "2510.25935", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.25935", "abs": "https://arxiv.org/abs/2510.25935", "authors": ["Antía Dorado", "Iván Folgueira", "Sofía Martín", "Gonzalo Martín", "Álvaro Porto", "Alejandro Ramos", "John Wallace"], "title": "A Process Mining-Based System For The Analysis and Prediction of Software Development Workflows", "comment": "16 pages, 7 figures, 4 tables", "summary": "CodeSight is an end-to-end system designed to anticipate deadline compliance\nin software development workflows. It captures development and deployment data\ndirectly from GitHub, transforming it into process mining logs for detailed\nanalysis. From these logs, the system generates metrics and dashboards that\nprovide actionable insights into PR activity patterns and workflow efficiency.\nBuilding on this structured representation, CodeSight employs an LSTM model\nthat predicts remaining PR resolution times based on sequential activity traces\nand static features, enabling early identification of potential deadline\nbreaches. In tests, the system demonstrates high precision and F1 scores in\npredicting deadline compliance, illustrating the value of integrating process\nmining with machine learning for proactive software project management."}
{"id": "2510.26130", "categories": ["cs.SE", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.26130", "abs": "https://arxiv.org/abs/2510.26130", "authors": ["Musfiqur Rahman", "SayedHassan Khatoonabadi", "Emad Shihab"], "title": "Beyond Synthetic Benchmarks: Evaluating LLM Performance on Real-World Class-Level Code Generation", "comment": "Pre-print prepared for journal submission", "summary": "Large language models (LLMs) have advanced code generation at the function\nlevel, yet their ability to produce correct class-level implementations in\nauthentic software projects remains poorly understood. This work introduces a\nnovel benchmark derived from open-source repositories, comprising real-world\nclasses divided into seen and unseen partitions to evaluate generalization\nunder practical conditions. The evaluation examines multiple LLMs under varied\ninput specifications, retrieval-augmented configurations, and documentation\ncompleteness levels.\n  Results reveal a stark performance disparity: LLMs achieve 84% to 89%\ncorrectness on established synthetic benchmarks but only 25% to 34% on\nreal-world class tasks, with negligible differences between familiar and novel\ncodebases. Comprehensive docstrings yield modest gains of 1% to 3% in\nfunctional accuracy, though statistical significance is rare.\nRetrieval-augmented generation proves most effective with partial\ndocumentation, improving correctness by 4% to 7% by supplying concrete\nimplementation patterns absent from specifications. Error profiling identifies\nAttributeError, TypeError, and AssertionError as dominant failure modes (84% of\ncases), with synthetic tests overemphasizing assertion issues and real-world\nscenarios highlighting type and attribute mismatches. Retrieval augmentation\nreduces logical flaws but can introduce dependency conflicts.\n  The benchmark and analysis expose critical limitations in current LLM\ncapabilities for class-level engineering, offering actionable insights for\nenhancing context modelling, documentation strategies, and retrieval\nintegration in production code assistance tools."}
{"id": "2510.25802", "categories": ["cs.CR", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.25802", "abs": "https://arxiv.org/abs/2510.25802", "authors": ["Jayant Biradar", "Smit Shah", "Tanmay Naik"], "title": "Attention Augmented GNN RNN-Attention Models for Advanced Cybersecurity Intrusion Detection", "comment": null, "summary": "In this paper, we propose a novel hybrid deep learning architecture that\nsynergistically combines Graph Neural Networks (GNNs), Recurrent Neural\nNetworks (RNNs), and multi-head attention mechanisms to significantly enhance\ncybersecurity intrusion detection capabilities. By leveraging the comprehensive\nUNSW-NB15 dataset containing diverse network traffic patterns, our approach\neffectively captures both spatial dependencies through graph structural\nrelationships and temporal dynamics through sequential analysis of network\nevents. The integrated attention mechanism provides dual benefits of improved\nmodel interpretability and enhanced feature selection, enabling cybersecurity\nanalysts to focus computational resources on high-impact security events -- a\ncritical requirement in modern real-time intrusion detection systems. Our\nextensive experimental evaluation demonstrates that the proposed hybrid model\nachieves superior performance compared to traditional machine learning\napproaches and standalone deep learning models across multiple evaluation\nmetrics, including accuracy, precision, recall, and F1-score. The model\nachieves particularly strong performance in detecting sophisticated attack\npatterns such as Advanced Persistent Threats (APTs), Distributed Denial of\nService (DDoS) attacks, and zero-day exploits, making it a promising solution\nfor next-generation cybersecurity applications in complex network environments."}
{"id": "2510.26171", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26171", "abs": "https://arxiv.org/abs/2510.26171", "authors": ["Hasnain Iqbal", "Zerina Begum", "Kazi Sakib"], "title": "Reduction of Test Re-runs by Prioritizing Potential Order Dependent Flaky Tests", "comment": null, "summary": "Flaky tests can make automated software testing unreliable due to their\nunpredictable behavior. These tests can pass or fail on the same code base on\nmultiple runs. However, flaky tests often do not refer to any fault, even\nthough they can cause the continuous integration (CI) pipeline to fail. A\ncommon type of flaky test is the order-dependent (OD) test. The outcome of an\nOD test depends on the order in which it is run with respect to other test\ncases. Several studies have explored the detection and repair of OD tests.\nHowever, their methods require re-runs of tests multiple times, that are not\nrelated to the order dependence. Hence, prioritizing potential OD tests is\nnecessary to reduce the re-runs. In this paper, we propose a method to\nprioritize potential order-dependent tests. By analyzing shared static fields\nin test classes, we identify tests that are more likely to be order-dependent.\nIn our experiment on 27 project modules, our method successfully prioritized\nall OD tests in 23 cases, reducing test executions by an average of 65.92% and\nunnecessary re-runs by 72.19%. These results demonstrate that our approach\nsignificantly improves the efficiency of OD test detection by lowering\nexecution costs."}
{"id": "2510.25806", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.25806", "abs": "https://arxiv.org/abs/2510.25806", "authors": ["Mustafa F. Abdelwahed", "Ahmed Shafee", "Joan Espasa"], "title": "APThreatHunter: An automated planning-based threat hunting framework", "comment": null, "summary": "Cyber attacks threaten economic interests, critical infrastructure, and\npublic health and safety. To counter this, entities adopt cyber threat hunting,\na proactive approach that involves formulating hypotheses and searching for\nattack patterns within organisational networks. Automating cyber threat hunting\npresents challenges, particularly in generating hypotheses, as it is a manually\ncreated and confirmed process, making it time-consuming. To address these\nchallenges, we introduce APThreatHunter, an automated threat hunting solution\nthat generates hypotheses with minimal human intervention, eliminating analyst\nbias and reducing time and cost. This is done by presenting possible risks\nbased on the system's current state and a set of indicators to indicate whether\nany of the detected risks are happening or not. We evaluated APThreatHunter\nusing real-world Android malware samples, and the results revealed the\npracticality of using automated planning for goal hypothesis generation in\ncyber threat hunting activities."}
{"id": "2510.26174", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26174", "abs": "https://arxiv.org/abs/2510.26174", "authors": ["Liming Dong", "Sung Une Lee", "Zhenchang Xing", "Muhammad Ejaz Ahmed", "Stefan Avgoustakis"], "title": "The \"4W+1H\" of Software Supply Chain Security Checklist for Critical Infrastructure", "comment": "18 pages, 4 figures", "summary": "The increasing frequency and sophistication of software supply chain attacks\npose severe risks to critical infrastructure sectors, threatening national\nsecurity, economic stability, and public safety. Despite growing awareness,\nexisting security practices remain fragmented and insufficient, with most\nframeworks narrowly focused on isolated life cycle stages or lacking alignment\nwith the specific needs of critical infrastructure (CI) sectors. In this paper,\nwe conducted a multivocal literature review across international frameworks,\nAustralian regulatory sources, and academic studies to identify and analyze\nsecurity practices across the software supply chain, especially specific CI\nsector. Our analysis found that few existing frameworks are explicitly tailored\nto CI domains. We systematically leveraged identified software supply chain\nsecurity frameworks, using a \"4W+1H\" analytical approach, we synthesized ten\ncore categories (what) of software supply chain security practices, mapped them\nacross life-cycle phases (when), stakeholder roles (who), and implementation\nlevels (how), and examined their coverage across existing frameworks (where).\nBuilding on these insights, the paper culminates in structured, multi-layered\nchecklist of 80 questions designed to relevant stakeholders evaluate and\nenhance their software supply chain security. Our findings reveal gaps between\nframework guidance and sector-specific needs, highlight the need for\nintegrated, context-aware approaches to safeguard critical infrastructure from\nevolving software supply chain risks."}
{"id": "2510.25810", "categories": ["cs.CR", "cs.NI"], "pdf": "https://arxiv.org/pdf/2510.25810", "abs": "https://arxiv.org/abs/2510.25810", "authors": ["Quanliang Jing", "Xinxin Fan", "Yanyan Liu", "Jingping Bi"], "title": "Adversarial Pre-Padding: Generating Evasive Network Traffic Against Transformer-Based Classifiers", "comment": null, "summary": "To date, traffic obfuscation techniques have been widely adopted to protect\nnetwork data privacy and security by obscuring the true patterns of traffic.\nNevertheless, as the pre-trained models emerge, especially transformer-based\nclassifiers, existing traffic obfuscation methods become increasingly\nvulnerable, as witnessed by current studies reporting the traffic\nclassification accuracy up to 99\\% or higher. To counter such high-performance\ntransformer-based classification models, we in this paper propose a novel and\neffective \\underline{adv}ersarial \\underline{traffic}-generating approach\n(AdvTraffic\\footnote{The code and data are available at: http://xxx}). Our\napproach has two key innovations: (i) a pre-padding strategy is proposed to\nmodify packets, which effectively overcomes the limitations of existing\nresearch against transformer-based models for network traffic classification;\nand (ii) a reinforcement learning model is employed to optimize network traffic\nperturbations, aiming to maximize adversarial effectiveness against\ntransformer-based classification models. To the best of our knowledge, this is\nthe first attempt to apply adversarial perturbation techniques to defend\nagainst transformer-based traffic classifiers. Furthermore, our method can be\neasily deployed into practical network environments. Finally, multi-faceted\nexperiments are conducted across several real-world datasets, and the\nexperimental results demonstrate that our proposed method can effectively\nundermine transformer-based classifiers, significantly reducing classification\naccuracy from 99\\% to as low as 25.68\\%."}
{"id": "2510.26275", "categories": ["cs.SE", "cs.AI", "cs.ET", "cs.LG", "cs.MA"], "pdf": "https://arxiv.org/pdf/2510.26275", "abs": "https://arxiv.org/abs/2510.26275", "authors": ["Domenico Amalfitano", "Andreas Metzger", "Marco Autili", "Tommaso Fulcini", "Tobias Hey", "Jan Keim", "Patrizio Pelliccione", "Vincenzo Scotti", "Anne Koziolek", "Raffaela Mirandola", "Andreas Vogelsang"], "title": "A Research Roadmap for Augmenting Software Engineering Processes and Software Products with Generative AI", "comment": null, "summary": "Generative AI (GenAI) is rapidly transforming software engineering (SE)\npractices, influencing how SE processes are executed, as well as how software\nsystems are developed, operated, and evolved. This paper applies design science\nresearch to build a roadmap for GenAI-augmented SE. The process consists of\nthree cycles that incrementally integrate multiple sources of evidence,\nincluding collaborative discussions from the FSE 2025 \"Software Engineering\n2030\" workshop, rapid literature reviews, and external feedback sessions\ninvolving peers. McLuhan's tetrads were used as a conceptual instrument to\nsystematically capture the transforming effects of GenAI on SE processes and\nsoftware products.The resulting roadmap identifies four fundamental forms of\nGenAI augmentation in SE and systematically characterizes their related\nresearch challenges and opportunities. These insights are then consolidated\ninto a set of future research directions. By grounding the roadmap in a\nrigorous multi-cycle process and cross-validating it among independent author\nteams and peers, the study provides a transparent and reproducible foundation\nfor analyzing how GenAI affects SE processes, methods and tools, and for\nframing future research within this rapidly evolving area. Based on these\nfindings, the article finally makes ten predictions for SE in the year 2030."}
{"id": "2510.25819", "categories": ["cs.CR", "cs.AI", "cs.NI", "68M12", "D.4.6; K.6.5; I.2.11"], "pdf": "https://arxiv.org/pdf/2510.25819", "abs": "https://arxiv.org/abs/2510.25819", "authors": ["Tobin South", "Subramanya Nagabhushanaradhya", "Ayesha Dissanayaka", "Sarah Cecchetti", "George Fletcher", "Victor Lu", "Aldo Pietropaolo", "Dean H. Saxe", "Jeff Lombardo", "Abhishek Maligehalli Shivalingaiah", "Stan Bounev", "Alex Keisner", "Andor Kesselman", "Zack Proser", "Ginny Fahs", "Andrew Bunyea", "Ben Moskowitz", "Atul Tulshibagwale", "Dazza Greenwood", "Jiaxin Pei", "Alex Pentland"], "title": "Identity Management for Agentic AI: The new frontier of authorization, authentication, and security for an AI agent world", "comment": null, "summary": "The rapid rise of AI agents presents urgent challenges in authentication,\nauthorization, and identity management. Current agent-centric protocols (like\nMCP) highlight the demand for clarified best practices in authentication and\nauthorization. Looking ahead, ambitions for highly autonomous agents raise\ncomplex long-term questions regarding scalable access control, agent-centric\nidentities, AI workload differentiation, and delegated authority. This OpenID\nFoundation whitepaper is for stakeholders at the intersection of AI agents and\naccess management. It outlines the resources already available for securing\ntoday's agents and presents a strategic agenda to address the foundational\nauthentication, authorization, and identity problems pivotal for tomorrow's\nwidespread autonomous systems."}
{"id": "2510.26287", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26287", "abs": "https://arxiv.org/abs/2510.26287", "authors": ["Guochang Li", "Yuchen Liu", "Zhen Qin", "Yunkun Wang", "Jianping Zhong", "Chen Zhi", "Binhua Li", "Fei Huang", "Yongbin Li", "Shuiguang Deng"], "title": "Empowering RepoQA-Agent based on Reinforcement Learning Driven by Monte-carlo Tree Search", "comment": null, "summary": "Repository-level software engineering tasks require large language models\n(LLMs) to efficiently navigate and extract information from complex codebases\nthrough multi-turn tool interactions. Existing approaches face significant\nlimitations: training-free, in-context learning methods struggle to guide\nagents effectively in tool utilization and decision-making based on\nenvironmental feedback, while training-based approaches typically rely on\ncostly distillation from larger LLMs, introducing data compliance concerns in\nenterprise environments. To address these challenges, we introduce\nRepoSearch-R1, a novel agentic reinforcement learning framework driven by\nMonte-carlo Tree Search (MCTS). This approach allows agents to generate\ndiverse, high-quality reasoning trajectories via self-training without\nrequiring model distillation or external supervision. Based on RepoSearch-R1,\nwe construct a RepoQA-Agent specifically designed for repository\nquestion-answering tasks. Comprehensive evaluation on repository\nquestion-answering tasks demonstrates that RepoSearch-R1 achieves substantial\nimprovements of answer completeness: 16.0% enhancement over no-retrieval\nmethods, 19.5% improvement over iterative retrieval methods, and 33% increase\nin training efficiency compared to general agentic reinforcement learning\napproaches. Our cold-start training methodology eliminates data compliance\nconcerns while maintaining robust exploration diversity and answer completeness\nacross repository-level reasoning tasks."}
{"id": "2510.25856", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.25856", "abs": "https://arxiv.org/abs/2510.25856", "authors": ["Brooke Elizabeth Kidmose", "Andreas Brasen Kidmose", "Cliff C. Zou"], "title": "A Critical Roadmap to Driver Authentication via CAN Bus: Dataset Review, Introduction of the Kidmose CANid Dataset (KCID), and Proof of Concept", "comment": null, "summary": "Modern vehicles remain vulnerable to unauthorized use and theft despite\ntraditional security measures including immobilizers and keyless entry systems.\nCriminals exploit vulnerabilities in Controller Area Network (CAN) bus systems\nto bypass authentication mechanisms, while social media trends have expanded\nauto theft to include recreational joyriding by underage drivers. Driver\nauthentication via CAN bus data offers a promising additional layer of\ndefense-in-depth protection, but existing open-access driver fingerprinting\ndatasets suffer from critical limitations including reliance on decoded\ndiagnostic data rather than raw CAN traffic, artificial fixed-route\nexperimental designs, insufficient sampling rates, and lack of demographic\ninformation.\n  This paper provides a comprehensive review of existing open-access driver\nfingerprinting datasets, analyzing their strengths and limitations to guide\npractitioners in dataset selection. We introduce the Kidmose CANid Dataset\n(KCID), which addresses these fundamental shortcomings by providing raw CAN bus\ndata from 16 drivers across four vehicles, including essential demographic\ninformation and both daily driving and controlled fixed-route data. Beyond\ndataset contributions, we present a driver authentication anti-theft framework\nand implement a proof-of-concept prototype on a single-board computer. Through\nlive road trials with an unaltered passenger vehicle, we demonstrate the\npractical feasibility of CAN bus-based driver authentication anti-theft\nsystems. Finally, we explore diverse applications of KCID beyond driver\nauthentication, including driver profiling for insurance and safety\nassessments, mechanical anomaly detection, young driver monitoring, and\nimpaired driving detection. This work provides researchers with both the data\nand methodological foundation necessary to develop robust, deployable driver\nauthentication systems..."}
{"id": "2510.26413", "categories": ["cs.SE", "cs.DC"], "pdf": "https://arxiv.org/pdf/2510.26413", "abs": "https://arxiv.org/abs/2510.26413", "authors": ["Nuno Saavedra", "Alexandra Mendes", "João F. Ferreira"], "title": "Environmental Impact of CI/CD Pipelines", "comment": "This work has been submitted to the IEEE for possible publication", "summary": "CI/CD pipelines are widely used in software development, yet their\nenvironmental impact, particularly carbon and water footprints (CWF), remains\nlargely unknown to developers, as CI service providers typically do not\ndisclose such information. With the growing environmental impact of cloud\ncomputing, understanding the CWF of CI/CD services has become increasingly\nimportant.\n  This work investigates the CWF of using GitHub Actions, focusing on\nopen-source repositories where usage is free and unlimited for standard\nrunners. We build upon a methodology from the Cloud Carbon Footprint framework\nand we use the largest dataset of workflow runs reported in the literature to\ndate, comprising over 2.2 million workflow runs from more than 18,000\nrepositories.\n  Our analysis reveals that the GitHub Actions ecosystem results in a\nsubstantial CWF. Our estimates for the carbon footprint in 2024 range from\n150.5 MTCO2e in the most optimistic scenario to 994.9 MTCO2e in the most\npessimistic scenario, while the water footprint ranges from 1,989.6 to 37,664.5\nkiloliters. The most likely scenario estimates are 456.9 MTCO2e for carbon\nfootprint and 5,738.2 kiloliters for water footprint. To provide perspective,\nthe carbon footprint in the most likely scenario is equivalent to the carbon\ncaptured by 7,615 urban trees in a year, and the water footprint is comparable\nto the water consumed by an average American family over 5,053 years.\n  We explore strategies to mitigate this impact, primarily by reducing wasted\ncomputational resources. Key recommendations include deploying runners in\nregions whose energy production has a low environmental impact such as France\nand the United Kingdom, implementing stricter deactivation policies for\nscheduled runs and aligning their execution with periods when the regional\nenergy mix is more environmentally favorable, and reducing the size of\nrepositories."}
{"id": "2510.25863", "categories": ["cs.CR", "cs.AI", "cs.ET"], "pdf": "https://arxiv.org/pdf/2510.25863", "abs": "https://arxiv.org/abs/2510.25863", "authors": ["Ken Huang", "Jerry Huang", "Yasir Mehmood", "Hammad Atta", "Muhammad Zeeshan Baig", "Muhammad Aziz Ul Haq"], "title": "AAGATE: A NIST AI RMF-Aligned Governance Platform for Agentic AI", "comment": null, "summary": "This paper introduces the Agentic AI Governance Assurance & Trust Engine\n(AAGATE), a Kubernetes-native control plane designed to address the unique\nsecurity and governance challenges posed by autonomous, language-model-driven\nagents in production. Recognizing the limitations of traditional Application\nSecurity (AppSec) tooling for improvisational, machine-speed systems, AAGATE\noperationalizes the NIST AI Risk Management Framework (AI RMF). It integrates\nspecialized security frameworks for each RMF function: the Agentic AI Threat\nModeling MAESTRO framework for Map, a hybrid of OWASP's AIVSS and SEI's SSVC\nfor Measure, and the Cloud Security Alliance's Agentic AI Red Teaming Guide for\nManage. By incorporating a zero-trust service mesh, an explainable policy\nengine, behavioral analytics, and decentralized accountability hooks, AAGATE\nprovides a continuous, verifiable governance solution for agentic AI, enabling\nsafe, accountable, and scalable deployment. The framework is further extended\nwith DIRF for digital identity rights, LPCI defenses for logic-layer injection,\nand QSAF monitors for cognitive degradation, ensuring governance spans\nsystemic, adversarial, and ethical risks."}
{"id": "2510.26423", "categories": ["cs.SE", "cs.CL"], "pdf": "https://arxiv.org/pdf/2510.26423", "abs": "https://arxiv.org/abs/2510.26423", "authors": ["Dong Huang", "Mingzhe Du", "Jie M. Zhang", "Zheng Lin", "Meng Luo", "Qianru Zhang", "See-Kiong Ng"], "title": "Nexus: Execution-Grounded Multi-Agent Test Oracle Synthesis", "comment": "Under Review", "summary": "Test oracle generation in non-regression testing is a longstanding challenge\nin software engineering, where the goal is to produce oracles that can\naccurately determine whether a function under test (FUT) behaves as intended\nfor a given input. In this paper, we introduce Nexus, a novel multi-agent\nframework to address this challenge. Nexus generates test oracles by leveraging\na diverse set of specialized agents that synthesize test oracles through a\nstructured process of deliberation, validation, and iterative self-refinement.\nDuring the deliberation phase, a panel of four specialist agents, each\nembodying a distinct testing philosophy, collaboratively critiques and refines\nan initial set of test oracles. Then, in the validation phase, Nexus generates\na plausible candidate implementation of the FUT and executes the proposed\noracles against it in a secure sandbox. For any oracle that fails this\nexecution-based check, Nexus activates an automated selfrefinement loop, using\nthe specific runtime error to debug and correct the oracle before\nre-validation. Our extensive evaluation on seven diverse benchmarks\ndemonstrates that Nexus consistently and substantially outperforms\nstate-of-theart baselines. For instance, Nexus improves the test-level oracle\naccuracy on the LiveCodeBench from 46.30% to 57.73% for GPT-4.1-Mini. The\nimproved accuracy also significantly enhances downstream tasks: the bug\ndetection rate of GPT4.1-Mini generated test oracles on HumanEval increases\nfrom 90.91% to 95.45% for Nexus compared to baselines, and the success rate of\nautomated program repair improves from 35.23% to 69.32%."}
{"id": "2510.25878", "categories": ["cs.CR", "cs.DC", "cs.GT"], "pdf": "https://arxiv.org/pdf/2510.25878", "abs": "https://arxiv.org/abs/2510.25878", "authors": ["Pavel Hubáček", "Jan Václavek", "Michelle Yeo"], "title": "Foundations of Fiat-Denominated Loans Collateralized by Cryptocurrencies", "comment": null, "summary": "The rising importance of cryptocurrencies as financial assets pushed their\napplicability from an object of speculation closer to standard financial\ninstruments such as loans. In this work, we initiate the study of secure\nprotocols that enable fiat-denominated loans collateralized by cryptocurrencies\nsuch as Bitcoin. We provide limited-custodial protocols for such loans relying\nonly on trusted arbitration and provide their game-theoretical analysis. We\nalso highlight various interesting directions for future research."}
{"id": "2510.26431", "categories": ["cs.SE", "cs.LO", "cs.PL"], "pdf": "https://arxiv.org/pdf/2510.26431", "abs": "https://arxiv.org/abs/2510.26431", "authors": ["Mihály Dobos-Kovács", "Levente Bajczi", "András Vörös"], "title": "CHCVerif: A Portfolio-Based Solver for Constrained Horn Clauses", "comment": "In Proceedings HCVS 2025, arXiv:2510.25468", "summary": "Constrained Horn Clauses (CHCs) are widely adopted as intermediate\nrepresentations for a variety of verification tasks, including safety checking,\ninvariant synthesis, and interprocedural analysis. This paper introduces\nCHCVERIF, a portfolio-based CHC solver that adopts a software verification\napproach for solving CHCs. This approach enables us to reuse mature software\nverification tools to tackle CHC benchmarks, particularly those involving\nbitvectors and low-level semantics. Our evaluation shows that while the method\nenjoys only moderate success with linear integer arithmetic, it achieves modest\nsuccess on bitvector benchmarks. Moreover, our results demonstrate the\nviability and potential of using software verification tools as backends for\nCHC solving, particularly when supported by a carefully constructed portfolio."}
{"id": "2510.25932", "categories": ["cs.CR", "cs.CL"], "pdf": "https://arxiv.org/pdf/2510.25932", "abs": "https://arxiv.org/abs/2510.25932", "authors": ["Soufiane Essahli", "Oussama Sarsar", "Imane Fouad", "Anas Motii", "Ahmed Bentajer"], "title": "FakeZero: Real-Time, Privacy-Preserving Misinformation Detection for Facebook and X", "comment": "Accepted for publication in the Proceedings of the 24th IEEE\n  International Conference on Trust, Security and Privacy in Computing and\n  Communications (TrustCom 2025) Privacy track, 11 pages, 8 figures", "summary": "Social platforms distribute information at unprecedented speed, which in turn\naccelerates the spread of misinformation and threatens public discourse. We\npresent FakeZero, a fully client-side, cross-platform browser extension that\nflags unreliable posts on Facebook and X (formerly Twitter) while the user\nscrolls. All computation, DOM scraping, tokenisation, Transformer inference,\nand UI rendering run locally through the Chromium messaging API, so no personal\ndata leaves the device.FakeZero employs a three-stage training curriculum:\nbaseline fine-tuning and domain-adaptive training enhanced with focal loss,\nadversarial augmentation, and post-training quantisation. Evaluated on a\ndataset of 239,000 posts, the DistilBERT-Quant model (67.6 MB) reaches 97.1%\nmacro-F1, 97.4% accuracy, and an AUROC of 0.996, with a median latency of\napproximately 103 ms on a commodity laptop. A memory-efficient TinyBERT-Quant\nvariant retains 95.7% macro-F1 and 96.1% accuracy while shrinking the model to\n14.7 MB and lowering latency to approximately 40 ms, showing that high-quality\nfake-news detection is feasible under tight resource budgets with only modest\nperformance loss.By providing inline credibility cues, the extension can serve\nas a valuable tool for policymakers seeking to curb the spread of\nmisinformation across social networks. With user consent, FakeZero also opens\nthe door for researchers to collect large-scale datasets of fake news in the\nwild, enabling deeper analysis and the development of more robust detection\ntechniques."}
{"id": "2510.26457", "categories": ["cs.SE", "cs.AI", "cs.CL"], "pdf": "https://arxiv.org/pdf/2510.26457", "abs": "https://arxiv.org/abs/2510.26457", "authors": ["Fang Liu", "Simiao Liu", "Yinghao Zhu", "Xiaoli Lian", "Li Zhang"], "title": "SecureReviewer: Enhancing Large Language Models for Secure Code Review through Secure-aware Fine-tuning", "comment": "Accepted by ICSE 2026. Code and data:\n  https://github.com/SIMIAO515/SecureReviewer", "summary": "Identifying and addressing security issues during the early phase of the\ndevelopment lifecycle is critical for mitigating the long-term negative impacts\non software systems. Code review serves as an effective practice that enables\ndevelopers to check their teammates' code before integration into the codebase.\nTo streamline the generation of review comments, various automated code review\napproaches have been proposed, where LLM-based methods have significantly\nadvanced the capabilities of automated review generation. However, existing\nmodels primarily focus on general-purpose code review, their effectiveness in\nidentifying and addressing security-related issues remains underexplored.\nMoreover, adapting existing code review approaches to target security issues\nfaces substantial challenges, including data scarcity and inadequate evaluation\nmetrics. To address these limitations, we propose SecureReviewer, a new\napproach designed for enhancing LLMs' ability to identify and resolve\nsecurity-related issues during code review. Specifically, we first construct a\ndataset tailored for training and evaluating secure code review capabilities.\nLeveraging this dataset, we fine-tune LLMs to generate code review comments\nthat can effectively identify security issues and provide fix suggestions with\nour proposed secure-aware fine-tuning strategy. To mitigate hallucination in\nLLMs and enhance the reliability of their outputs, we integrate the RAG\ntechnique, which grounds the generated comments in domain-specific security\nknowledge. Additionally, we introduce SecureBLEU, a new evaluation metric\ndesigned to assess the effectiveness of review comments in addressing security\nissues. Experimental results demonstrate that SecureReviewer outperforms\nstate-of-the-art baselines in both security issue detection accuracy and the\noverall quality and practical utility of generated review comments."}
{"id": "2510.25939", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.25939", "abs": "https://arxiv.org/abs/2510.25939", "authors": ["Robert A. Bridges", "Thomas R. Mitchell", "Mauricio Muñoz", "Ted Henriksson"], "title": "SoK: Honeypots & LLMs, More Than the Sum of Their Parts?", "comment": "Systemization of Knowledge", "summary": "The advent of Large Language Models (LLMs) promised to resolve the\nlong-standing paradox in honeypot design: achieving high-fidelity deception\nwith low operational risk. However, despite a flurry of research since late\n2022, progress has been incremental, and the field lacks a cohesive\nunderstanding of the emerging architectural patterns, core challenges, and\nevaluation paradigms. To fill this gap, this Systematization of Knowledge (SoK)\npaper provides the first comprehensive overview of this new domain. We survey\nand systematize three critical, intersecting research areas: first, we provide\na taxonomy of honeypot detection vectors, structuring the core problems that\nLLM-based realism must solve; second, we synthesize the emerging literature on\nLLM-honeypots, identifying a canonical architecture and key evaluation trends;\nand third, we chart the evolutionary path of honeypot log analysis, from simple\ndata reduction to automated intelligence generation. We synthesize these\nfindings into a forward-looking research roadmap, arguing that the true\npotential of this technology lies in creating autonomous, self-improving\ndeception systems to counter the emerging threat of intelligent, automated\nattackers."}
{"id": "2510.26480", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26480", "abs": "https://arxiv.org/abs/2510.26480", "authors": ["Sivajeet Chand", "Melih Kilic", "Roland Würsching", "Sushant Kumar Pandey", "Alexander Pretschner"], "title": "Automated Extract Method Refactoring with Open-Source LLMs: A Comparative Study", "comment": "Accepted at AIware'25 - Main Track", "summary": "Automating the Extract Method refactoring (EMR) remains challenging and\nlargely manual despite its importance in improving code readability and\nmaintainability. Recent advances in open-source, resource-efficient Large\nLanguage Models (LLMs) offer promising new approaches for automating such\nhigh-level tasks. In this work, we critically evaluate five state-of-the-art\nopen-source LLMs, spanning 3B to 8B parameter sizes, on the EMR task for Python\ncode. We systematically assess functional correctness and code quality using\nautomated metrics and investigate the impact of prompting strategies by\ncomparing one-shot prompting to a Recursive criticism and improvement (RCI)\napproach. RCI-based prompting consistently outperforms one-shot prompting in\ntest pass rates and refactoring quality. The best-performing models,\nDeepseek-Coder-RCI and Qwen2.5-Coder-RCI, achieve test pass percentage (TPP)\nscores of 0.829 and 0.808, while reducing lines of code (LOC) per method from\n12.103 to 6.192 and 5.577, and cyclomatic complexity (CC) from 4.602 to 3.453\nand 3.294, respectively. A developer survey on RCI-generated refactorings shows\nover 70% acceptance, with Qwen2.5-Coder rated highest across all evaluation\ncriteria. In contrast, the original code scored below neutral, particularly in\nreadability and maintainability, underscoring the benefits of automated\nrefactoring guided by quality prompts. While traditional metrics like CC and\nLOC provide useful signals, they often diverge from human judgments,\nemphasizing the need for human-in-the-loop evaluation. Our open-source\nbenchmark offers a foundation for future research on automated refactoring with\nLLMs."}
{"id": "2510.25960", "categories": ["cs.CR", "cs.AI", "cs.RO"], "pdf": "https://arxiv.org/pdf/2510.25960", "abs": "https://arxiv.org/abs/2510.25960", "authors": ["Zeynep Yasemin Erdogan", "Shishir Nagaraja", "Chuadhry Mujeeb Ahmed", "Ryan Shah"], "title": "WaveVerif: Acoustic Side-Channel based Verification of Robotic Workflows", "comment": "11 pages, 3 figures, Corresponding Author: Prof. Shishir Nagaraja\n  (shishir.nagaraja@newcastle.ac.uk)", "summary": "In this paper, we present a framework that uses acoustic side-channel\nanalysis (ASCA) to monitor and verify whether a robot correctly executes its\nintended commands. We develop and evaluate a machine-learning-based workflow\nverification system that uses acoustic emissions generated by robotic\nmovements. The system can determine whether real-time behavior is consistent\nwith expected commands. The evaluation takes into account movement speed,\ndirection, and microphone distance. The results show that individual robot\nmovements can be validated with over 80% accuracy under baseline conditions\nusing four different classifiers: Support Vector Machine (SVM), Deep Neural\nNetwork (DNN), Recurrent Neural Network (RNN), and Convolutional Neural Network\n(CNN). Additionally, workflows such as pick-and-place and packing could be\nidentified with similarly high confidence. Our findings demonstrate that\nacoustic signals can support real-time, low-cost, passive verification in\nsensitive robotic environments without requiring hardware modifications."}
{"id": "2510.26516", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26516", "abs": "https://arxiv.org/abs/2510.26516", "authors": ["Truong Hai Dang", "Jingyu Xiao", "Yintong Huo"], "title": "Envisioning Future Interactive Web Development: Editing Webpage with Natural Language", "comment": "accepted by AIWare'25", "summary": "The evolution of web applications relies on iterative code modifications, a\nprocess that is traditionally manual and time-consuming. While Large Language\nModels (LLMs) can generate UI code, their ability to edit existing code from\nnew design requirements (e.g., \"center the logo\") remains a challenge. This is\nlargely due to the absence of large-scale, high-quality tuning data to align\nmodel performance with human expectations. In this paper, we introduce a novel,\nautomated data generation pipeline that uses LLMs to synthesize a high-quality\nfine-tuning dataset for web editing, named Instruct4Edit. Our approach\ngenerates diverse instructions, applies the corresponding code modifications,\nand performs visual verification to ensure correctness. By fine-tuning models\non Instruct4Edit, we demonstrate consistent improvement in translating human\nintent into precise, structurally coherent, and visually accurate code changes.\nThis work provides a scalable and transparent foundation for natural language\nbased web editing, demonstrating that fine-tuning smaller open-source models\ncan achieve competitive performance with proprietary systems. We release all\ndata, code implementations, and model checkpoints for reproduction."}
{"id": "2510.26003", "categories": ["cs.CR", "94A60"], "pdf": "https://arxiv.org/pdf/2510.26003", "abs": "https://arxiv.org/abs/2510.26003", "authors": ["Eirini Poimenidou", "K. A. Draziotis"], "title": "Message Recovery Attack in NTRU via Knapsack", "comment": null, "summary": "In the present paper, we introduce a message-recovery attack based on the\nModular Knapsack Problem, applicable to all variants of the NTRU-HPS\ncryptosystem. Assuming that a fraction $\\epsilon$ of the coefficients of the\nmessage ${\\bf{m}}\\in\\{-1,0,1\\}^N$ and of the nonce vector ${\\bf\nr}\\in\\{-1,0,1\\}^N$ are known in advance at random positions, we reduce message\ndecryption to finding a short vector in a lattice that encodes an instance of a\nmodular knapsack system. This allows us to address a key question: how much\ninformation about ${\\bf m}$, or about the pair $({\\bf m},{\\bf r})$, is required\nbefore recovery becomes feasible? A FLATTER reduction successfully recovers the\nmessage, in practice when $\\epsilon\\approx 0.45$. Our implementation finds\n${\\bf m}$ within a few minutes on a commodity desktop."}
{"id": "2510.26538", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26538", "abs": "https://arxiv.org/abs/2510.26538", "authors": ["David Williams", "Max Hort", "Maria Kechagia", "Aldeida Aleti", "Justyna Petke", "Federica Sarro"], "title": "Reflecting on Empirical and Sustainability Aspects of Software Engineering Research in the Era of Large Language Models", "comment": "5 pages", "summary": "Software Engineering (SE) research involving the use of Large Language Models\n(LLMs) has introduced several new challenges related to rigour in benchmarking,\ncontamination, replicability, and sustainability. In this paper, we invite the\nresearch community to reflect on how these challenges are addressed in SE. Our\nresults provide a structured overview of current LLM-based SE research at ICSE,\nhighlighting both encouraging practices and persistent shortcomings. We\nconclude with recommendations to strengthen benchmarking rigour, improve\nreplicability, and address the financial and environmental costs of LLM-based\nSE."}
{"id": "2510.26037", "categories": ["cs.CR", "cs.AI", "cs.CL"], "pdf": "https://arxiv.org/pdf/2510.26037", "abs": "https://arxiv.org/abs/2510.26037", "authors": ["Kaiwen Zhou", "Ahmed Elgohary", "A S M Iftekhar", "Amin Saied"], "title": "SIRAJ: Diverse and Efficient Red-Teaming for LLM Agents via Distilled Structured Reasoning", "comment": null, "summary": "The ability of LLM agents to plan and invoke tools exposes them to new safety\nrisks, making a comprehensive red-teaming system crucial for discovering\nvulnerabilities and ensuring their safe deployment. We present SIRAJ: a generic\nred-teaming framework for arbitrary black-box LLM agents. We employ a dynamic\ntwo-step process that starts with an agent definition and generates diverse\nseed test cases that cover various risk outcomes, tool-use trajectories, and\nrisk sources. Then, it iteratively constructs and refines model-based\nadversarial attacks based on the execution trajectories of former attempts. To\noptimize the red-teaming cost, we present a model distillation approach that\nleverages structured forms of a teacher model's reasoning to train smaller\nmodels that are equally effective. Across diverse evaluation agent settings,\nour seed test case generation approach yields 2 -- 2.5x boost to the coverage\nof risk outcomes and tool-calling trajectories. Our distilled 8B red-teamer\nmodel improves attack success rate by 100%, surpassing the 671B Deepseek-R1\nmodel. Our ablations and analyses validate the effectiveness of the iterative\nframework, structured reasoning, and the generalization of our red-teamer\nmodels."}
{"id": "2510.26576", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26576", "abs": "https://arxiv.org/abs/2510.26576", "authors": ["Filippo Scaramuzza", "Renato Cordeiro Ferreira", "Tomaz Maia Suller", "Giovanni Quattrocchi", "Damian Andrew Tamburri", "Willem-Jan van den Heuvel"], "title": "\"Show Me You Comply... Without Showing Me Anything\": Zero-Knowledge Software Auditing for AI-Enabled Systems", "comment": "This work has been submitted to the ACM Transactions on Software\n  Engineering and Methodology for possible publication", "summary": "The increasing exploitation of Artificial Intelligence (AI) enabled systems\nin critical domains has made trustworthiness concerns a paramount showstopper,\nrequiring verifiable accountability, often by regulation (e.g., the EU AI Act).\nClassical software verification and validation techniques, such as procedural\naudits, formal methods, or model documentation, are the mechanisms used to\nachieve this. However, these methods are either expensive or heavily manual and\nill-suited for the opaque, \"black box\" nature of most AI models. An intractable\nconflict emerges: high auditability and verifiability are required by law, but\nsuch transparency conflicts with the need to protect assets being audited-e.g.,\nconfidential data and proprietary models-leading to weakened accountability. To\naddress this challenge, this paper introduces ZKMLOps, a novel MLOps\nverification framework that operationalizes Zero-Knowledge Proofs\n(ZKPs)-cryptographic protocols allowing a prover to convince a verifier that a\nstatement is true without revealing additional information-within\nMachine-Learning Operations lifecycles. By integrating ZKPs with established\nsoftware engineering patterns, ZKMLOps provides a modular and repeatable\nprocess for generating verifiable cryptographic proof of compliance. We\nevaluate the framework's practicality through a study of regulatory compliance\nin financial risk auditing and assess feasibility through an empirical\nevaluation of top ZKP protocols, analyzing performance trade-offs for ML models\nof increasing complexity."}
{"id": "2510.26102", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.26102", "abs": "https://arxiv.org/abs/2510.26102", "authors": ["Lisha Shuai", "Jiuling Dong", "Nan Zhang", "Shaofeng Tan", "Haokun Zhang", "Zilong Song", "Gaoya Dong", "Xiaolong Yang"], "title": "PEEL: A Poisoning-Exposing Encoding Theoretical Framework for Local Differential Privacy", "comment": "14 pages, 1 figures", "summary": "Local Differential Privacy (LDP) is a widely adopted privacy-protection model\nin the Internet of Things (IoT) due to its lightweight, decentralized, and\nscalable nature. However, it is vulnerable to poisoning attacks, and existing\ndefenses either incur prohibitive resource overheads or rely on domain-specific\nprior knowledge, limiting their practical deployment. To address these\nlimitations, we propose PEEL, a Poisoning-Exposing Encoding theoretical\nframework for LDP, which departs from resource- or prior-dependent\ncountermeasures and instead leverages the inherent structural consistency of\nLDP-perturbed data. As a non-intrusive post-processing module, PEEL amplifies\nstealthy poisoning effects by re-encoding LDP-perturbed data via\nsparsification, normalization, and low-rank projection, thereby revealing both\noutput and rule poisoning attacks through structural inconsistencies in the\nreconstructed space. Theoretical analysis proves that PEEL, integrated with\nLDP, retains unbiasedness and statistical accuracy, while being robust to\nexpose both output and rule poisoning attacks. Moreover, evaluation results\nshow that LDP-integrated PEEL not only outperforms four state-of-the-art\ndefenses in terms of poisoning exposure accuracy but also significantly reduces\nclient-side computational costs, making it highly suitable for large-scale IoT\ndeployments."}
{"id": "2510.26579", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26579", "abs": "https://arxiv.org/abs/2510.26579", "authors": ["Nathanael Nussbaumer", "Markus Böck", "Jürgen Cito"], "title": "Online and Interactive Bayesian Inference Debugging", "comment": "Accepted by ICSE 2026", "summary": "Probabilistic programming is a rapidly developing programming paradigm which\nenables the formulation of Bayesian models as programs and the automation of\nposterior inference. It facilitates the development of models and conducting\nBayesian inference, which makes these techniques available to practitioners\nfrom multiple fields. Nevertheless, probabilistic programming is notoriously\ndifficult as identifying and repairing issues with inference requires a lot of\ntime and deep knowledge. Through this work, we introduce a novel approach to\ndebugging Bayesian inference that reduces time and required knowledge\nsignificantly. We discuss several requirements a Bayesian inference debugging\nframework has to fulfill, and propose a new tool that meets these key\nrequirements directly within the development environment. We evaluate our\nresults in a study with 18 experienced participants and show that our approach\nto online and interactive debugging of Bayesian inference significantly reduces\ntime and difficulty on inference debugging tasks."}
{"id": "2510.26103", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.26103", "abs": "https://arxiv.org/abs/2510.26103", "authors": ["Maximilian Schreiber", "Pascal Tippe"], "title": "Security Vulnerabilities in AI-Generated Code: A Large-Scale Analysis of Public GitHub Repositories", "comment": "This preprint has not undergone peer review or any post-submission\n  improvements or corrections. The Version of Record of this contribution is\n  published in Volume 16219 of the Lecture Notes in Computer Science series,\n  and is available online at https://doi.org/10.1007/978-981-95-3537-8_9", "summary": "This paper presents a comprehensive empirical analysis of security\nvulnerabilities in AI-generated code across public GitHub repositories. We\ncollected and analyzed 7,703 files explicitly attributed to four major AI\ntools: ChatGPT (91.52\\%), GitHub Copilot (7.50\\%), Amazon CodeWhisperer\n(0.52\\%), and Tabnine (0.46\\%). Using CodeQL static analysis, we identified\n4,241 Common Weakness Enumeration (CWE) instances across 77 distinct\nvulnerability types. Our findings reveal that while 87.9\\% of AI-generated code\ndoes not contain identifiable CWE-mapped vulnerabilities, significant patterns\nemerge regarding language-specific vulnerabilities and tool performance. Python\nconsistently exhibited higher vulnerability rates (16.18\\%-18.50\\%) compared to\nJavaScript (8.66\\%-8.99\\%) and TypeScript (2.50\\%-7.14\\%) across all tools. We\nobserved notable differences in security performance, with GitHub Copilot\nachieving better security density for Python (1,739 LOC per CWE) and\nTypeScript, while ChatGPT performed better for JavaScript. Additionally, we\ndiscovered widespread use of AI tools for documentation generation (39\\% of\ncollected files), an understudied application with implications for software\nmaintainability. These findings extend previous work with a significantly\nlarger dataset and provide valuable insights for developing language-specific\nand context-aware security practices for the responsible integration of\nAI-generated code into software development workflows."}
{"id": "2510.26634", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26634", "abs": "https://arxiv.org/abs/2510.26634", "authors": ["Yuan Si", "Kyle Qi", "Daming Li", "Hanyuan Shi", "Jialu Zhang"], "title": "Stitch: Step-by-step LLM Guided Tutoring for Scratch", "comment": null, "summary": "Block-based environments such as Scratch are increasingly popular in\nprogramming education. While block syntax reduces surface errors, semantic bugs\nremain common and challenging for novices to resolve. Existing debugging\nworkflows typically show the correct program directly to learners, a strategy\nthat may fix errors but undermines the development of problem-solving skills.\n  We present Stitch, an interactive tutoring system that replaces \"showing the\nanswer\" with step-by-step scaffolding. The system's Diff-Analyze module\ncontrasts a student's project with a reference implementation, identifies the\nmost critical differences, and uses a large language model to explain why these\nchanges matter. Learners inspect highlighted blocks through a custom rendering\nengine, understand the explanations, and selectively apply partial fixes. This\niterative process continues until the intended functionality is achieved.\n  We evaluate Stitch in an empirical study, comparing it against a\nstate-of-the-art automated feedback generation tool for Scratch. Our key\ninsight is that simply presenting the correct program is pedagogically\nineffective. In contrast, our interactive, step-by-step guided system promotes\na more effective learning experience. More broadly, what constitutes effective\nfeedback in block-based programming remains an open question. Our evaluation\nprovides new evidence that step-by-step tutoring significantly enhances\nlearning outcomes, outperforming both direct-answer approaches and current\nautomated feedback generation tools."}
{"id": "2510.26179", "categories": ["cs.CR", "cs.SY", "eess.SY"], "pdf": "https://arxiv.org/pdf/2510.26179", "abs": "https://arxiv.org/abs/2510.26179", "authors": ["Haruki Hoshino", "Jungjin Park", "Osamu Kaneko", "Kiminao Kogiso"], "title": "Confidential FRIT via Homomorphic Encryption", "comment": null, "summary": "Edge computing alleviates the computation burden of data-driven control in\ncyber-physical systems (CPSs) by offloading complex processing to edge servers.\nHowever, the increasing sophistication of cyberattacks underscores the need for\nsecurity measures that go beyond conventional IT protections and address the\nunique vulnerabilities of CPSs. This study proposes a confidential data-driven\ngain-tuning framework using homomorphic encryption, such as ElGamal and CKKS\nencryption schemes, to enhance cybersecurity in gain-tuning processes\noutsourced to external servers. The idea for realizing confidential FRIT is to\nreplace the matrix inversion operation with a vector summation form, allowing\nhomomorphic operations to be applied. Numerical examples under 128-bit security\nconfirm performance comparable to conventional methods while providing\nguidelines for selecting suitable encryption schemes for secure CPS."}
{"id": "2510.26676", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26676", "abs": "https://arxiv.org/abs/2510.26676", "authors": ["Samiha Shimmi", "Nicholas M. Synovic", "Mona Rahimi", "George K. Thiruvathukal"], "title": "Process-based Indicators of Vulnerability Re-Introducing Code Changes: An Exploratory Case Study", "comment": "9 pages, 6 figures; Samiha Shimmi and Nicholas M. Synovic contributed\n  equally to this work (co-first authors); Mona Rahimi and George K.\n  Thiruvathukal contributed equally to this work (co-supervisors)", "summary": "Software vulnerabilities often persist or re-emerge even after being fixed,\nrevealing the complex interplay between code evolution and socio-technical\nfactors. While source code metrics provide useful indicators of\nvulnerabilities, software engineering process metrics can uncover patterns that\nlead to their introduction. Yet few studies have explored whether process\nmetrics can reveal risky development activities over time -- insights that are\nessential for anticipating and mitigating software vulnerabilities. This work\nhighlights the critical role of process metrics along with code changes in\nunderstanding and mitigating vulnerability reintroduction. We move beyond\nfile-level prediction and instead analyze security fixes at the commit level,\nfocusing not only on whether a single fix introduces a vulnerability but also\non the longer sequences of changes through which vulnerabilities evolve and\nre-emerge. Our approach emphasizes that reintroduction is rarely the result of\none isolated action, but emerges from cumulative development activities and\nsocio-technical conditions. To support this analysis, we conducted a case study\non the ImageMagick project by correlating longitudinal process metrics such as\nbus factor, issue density, and issue spoilage with vulnerability reintroduction\nactivities, encompassing 76 instances of reintroduced vulnerabilities. Our\nfindings show that reintroductions often align with increased issue spoilage\nand fluctuating issue density, reflecting short-term inefficiencies in issue\nmanagement and team responsiveness. These observations provide a foundation for\nbroader studies that combine process and code metrics to predict risky fixes\nand strengthen software security."}
{"id": "2510.26210", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.26210", "abs": "https://arxiv.org/abs/2510.26210", "authors": ["Junlin Liu", "Zhaomeng Deng", "Ziming Wang", "Mengyu Yao", "Yifeng Cai", "Yutao Hu", "Ziqi Zhang", "Yao Guo", "Ding Li"], "title": "Who Moved My Transaction? Uncovering Post-Transaction Auditability Vulnerabilities in Modern Super Apps", "comment": "SaTS 2025 (Co-Located with ACM CCS 2025)", "summary": "Super apps are the cornerstones of modern digital life, embedding financial\ntransactions into nearly every aspect of daily routine. The prevailing security\nparadigm for these platforms is overwhelmingly focused on pre-transaction\nauthentication, preventing unauthorized payments before they occur. We argue\nthat a critical vulnerability vector has been largely overlooked: the fragility\nof post-transaction audit trails. We investigate the ease with which a user can\npermanently erase their transaction history from an app's interface, thereby\nconcealing unauthorized or sensitive activities from the account owner. To\nquantify this threat, we conducted an empirical study with 6 volunteers who\nperformed a cross-evaluation on six super apps. Our findings are alarming: all\nsix applications studied allow users to delete transaction records, yet a\nstaggering five out of six (83+\\%) fail to protect these records with strong\nauthentication. Only one app in our study required biometric verification for\ndeletion. This study provides the first concrete evidence of this\nnear-ubiquitous vulnerability, demonstrating a critical gap in the current\nmobile security landscape and underscoring the urgent need for a paradigm shift\ntowards ensuring post-transaction audit integrity."}
{"id": "2510.26699", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26699", "abs": "https://arxiv.org/abs/2510.26699", "authors": ["Aylton Almeida", "Laerte Xavier", "Marco Tulio Valente"], "title": "Using Copilot Agent Mode to Automate Library Migration: A Quantitative Assessment", "comment": null, "summary": "Keeping software systems up to date is essential to avoid technical debt,\nsecurity vulnerabilities, and the rigidity typical of legacy systems. However,\nupdating libraries and frameworks remains a time consuming and error-prone\nprocess. Recent advances in Large Language Models (LLMs) and agentic coding\nsystems offer new opportunities for automating such maintenance tasks. In this\npaper, we evaluate the update of a well-known Python library, SQLAlchemy,\nacross a dataset of ten client applications. For this task, we use the Github's\nCopilot Agent Mode, an autonomous AI systema capable of planning and executing\nmulti-step migration workflows. To assess the effectiveness of the automated\nmigration, we also introduce Migration Coverage, a metric that quantifies the\nproportion of API usage points correctly migrated. The results of our study\nshow that the LLM agent was capable of migrating functionalities and API usages\nbetween SQLAlchemy versions (migration coverage: 100%, median), but failed to\nmaintain the application functionality, leading to a low test-pass rate\n(39.75%, median)."}
{"id": "2510.26212", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.26212", "abs": "https://arxiv.org/abs/2510.26212", "authors": ["Yifeng Cai", "Ziming Wang", "Zhaomeng Deng", "Mengyu Yao", "Junlin Liu", "Yutao Hu", "Ziqi Zhang", "Yao Guo", "Ding Li"], "title": "Who Grants the Agent Power? Defending Against Instruction Injection via Task-Centric Access Control", "comment": "SaTS 2025 (Co-located with ACM CCS 2025)", "summary": "AI agents capable of GUI understanding and Model Context Protocol are\nincreasingly deployed to automate mobile tasks. However, their reliance on\nover-privileged, static permissions creates a critical vulnerability:\ninstruction injection. Malicious instructions, embedded in otherwise benign\ncontent like emails, can hijack the agent to perform unauthorized actions. We\npresent AgentSentry, a lightweight runtime task-centric access control\nframework that enforces dynamic, task-scoped permissions. Instead of granting\nbroad, persistent permissions, AgentSentry dynamically generates and enforces\nminimal, temporary policies aligned with the user's specific task (e.g.,\nregister for an app), revoking them upon completion. We demonstrate that\nAgentSentry successfully prevents an instruction injection attack, where an\nagent is tricked into forwarding private emails, while allowing the legitimate\ntask to complete. Our approach highlights the urgent need for intent-aligned\nsecurity models to safely govern the next generation of autonomous agents."}
{"id": "2510.26793", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26793", "abs": "https://arxiv.org/abs/2510.26793", "authors": ["Nafid Enan", "Gias Uddin"], "title": "Optimized Log Parsing with Syntactic Modifications", "comment": null, "summary": "Logs provide valuable insights into system runtime and assist in software\ndevelopment and maintenance. Log parsing, which converts semi-structured log\ndata into structured log data, is often the first step in automated log\nanalysis. Given the wide range of log parsers utilizing diverse techniques, it\nis essential to evaluate them to understand their characteristics and\nperformance. In this paper, we conduct a comprehensive empirical study\ncomparing syntax- and semantic-based log parsers, as well as single-phase and\ntwo-phase parsing architectures. Our experiments reveal that semantic-based\nmethods perform better at identifying the correct templates and syntax-based\nlog parsers are 10 to 1,000 times more efficient and provide better grouping\naccuracy although they fall short in accurate template identification.\nMoreover, two-phase architecture consistently improves accuracy compared to\nsingle-phase architecture. Based on the findings of this study, we propose\nSynLog+, a template identification module that acts as the second phase in a\ntwo-phase log parsing architecture. SynLog+ improves the parsing accuracy of\nsyntax-based and semantic-based log parsers by 236\\% and 20\\% on average,\nrespectively, with virtually no additional runtime cost."}
{"id": "2510.26274", "categories": ["cs.CR", "cs.CL", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.26274", "abs": "https://arxiv.org/abs/2510.26274", "authors": ["Haohua Duan", "Liyao Xiang", "Xin Zhang"], "title": "PVMark: Enabling Public Verifiability for LLM Watermarking Schemes", "comment": "This work has been submitted to the IEEE for possible publication", "summary": "Watermarking schemes for large language models (LLMs) have been proposed to\nidentify the source of the generated text, mitigating the potential threats\nemerged from model theft. However, current watermarking solutions hardly\nresolve the trust issue: the non-public watermark detection cannot prove itself\nfaithfully conducting the detection. We observe that it is attributed to the\nsecret key mostly used in the watermark detection -- it cannot be public, or\nthe adversary may launch removal attacks provided the key; nor can it be\nprivate, or the watermarking detection is opaque to the public. To resolve the\ndilemma, we propose PVMark, a plugin based on zero-knowledge proof (ZKP),\nenabling the watermark detection process to be publicly verifiable by third\nparties without disclosing any secret key. PVMark hinges upon the proof of\n`correct execution' of watermark detection on which a set of ZKP constraints\nare built, including mapping, random number generation, comparison, and\nsummation. We implement multiple variants of PVMark in Python, Rust and Circom,\ncovering combinations of three watermarking schemes, three hash functions, and\nfour ZKP protocols, to show our approach effectively works under a variety of\ncircumstances. By experimental results, PVMark efficiently enables public\nverifiability on the state-of-the-art LLM watermarking schemes yet without\ncompromising the watermarking performance, promising to be deployed in\npractice."}
{"id": "2510.26620", "categories": ["cs.CR", "cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26620", "abs": "https://arxiv.org/abs/2510.26620", "authors": ["Nicholas Pecka", "Lotfi Ben Othmane", "Renee Bryce"], "title": "Toward Automated Security Risk Detection in Large Software Using Call Graph Analysis", "comment": null, "summary": "Threat modeling plays a critical role in the identification and mitigation of\nsecurity risks; however, manual approaches are often labor intensive and prone\nto error. This paper investigates the automation of software threat modeling\nthrough the clustering of call graphs using density-based and community\ndetection algorithms, followed by an analysis of the threats associated with\nthe identified clusters. The proposed method was evaluated through a case study\nof the Splunk Forwarder Operator (SFO), wherein selected clustering metrics\nwere applied to the software's call graph to assess pertinent code-density\nsecurity weaknesses. The results demonstrate the viability of the approach and\nunderscore its potential to facilitate systematic threat assessment. This work\ncontributes to the advancement of scalable, semi-automated threat modeling\nframeworks tailored for modern cloud-native environments."}
{"id": "2510.26307", "categories": ["cs.CR", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.26307", "abs": "https://arxiv.org/abs/2510.26307", "authors": ["Laura Jiang", "Reza Ryan", "Qian Li", "Nasim Ferdosian"], "title": "A Survey of Heterogeneous Graph Neural Networks for Cybersecurity Anomaly Detection", "comment": "37 pages, 4 figures, 86 references. Submitted to Journal of Computer\n  Security (under review)", "summary": "Anomaly detection is a critical task in cybersecurity, where identifying\ninsider threats, access violations, and coordinated attacks is essential for\nensuring system resilience. Graph-based approaches have become increasingly\nimportant for modeling entity interactions, yet most rely on homogeneous and\nstatic structures, which limits their ability to capture the heterogeneity and\ntemporal evolution of real-world environments. Heterogeneous Graph Neural\nNetworks (HGNNs) have emerged as a promising paradigm for anomaly detection by\nincorporating type-aware transformations and relation-sensitive aggregation,\nenabling more expressive modeling of complex cyber data. However, current\nresearch on HGNN-based anomaly detection remains fragmented, with diverse\nmodeling strategies, limited comparative evaluation, and an absence of\nstandardized benchmarks. To address this gap, we provide a comprehensive survey\nof HGNN-based anomaly detection methods in cybersecurity. We introduce a\ntaxonomy that classifies approaches by anomaly type and graph dynamics, analyze\nrepresentative models, and map them to key cybersecurity applications. We also\nreview commonly used benchmark datasets and evaluation metrics, highlighting\ntheir strengths and limitations. Finally, we identify key open challenges\nrelated to modeling, data, and deployment, and outline promising directions for\nfuture research. This survey aims to establish a structured foundation for\nadvancing HGNN-based anomaly detection toward scalable, interpretable, and\npractically deployable solutions."}
{"id": "2510.26420", "categories": ["cs.CR", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.26420", "abs": "https://arxiv.org/abs/2510.26420", "authors": ["Yingjia Wang", "Ting Qiao", "Xing Liu", "Chongzuo Li", "Sixing Wu", "Jianbin Li"], "title": "SSCL-BW: Sample-Specific Clean-Label Backdoor Watermarking for Dataset Ownership Verification", "comment": "8 pages,9 figures", "summary": "The rapid advancement of deep neural networks (DNNs) heavily relies on\nlarge-scale, high-quality datasets. However, unauthorized commercial use of\nthese datasets severely violates the intellectual property rights of dataset\nowners. Existing backdoor-based dataset ownership verification methods suffer\nfrom inherent limitations: poison-label watermarks are easily detectable due to\nlabel inconsistencies, while clean-label watermarks face high technical\ncomplexity and failure on high-resolution images. Moreover, both approaches\nemploy static watermark patterns that are vulnerable to detection and removal.\nTo address these issues, this paper proposes a sample-specific clean-label\nbackdoor watermarking (i.e., SSCL-BW). By training a U-Net-based watermarked\nsample generator, this method generates unique watermarks for each sample,\nfundamentally overcoming the vulnerability of static watermark patterns. The\ncore innovation lies in designing a composite loss function with three\ncomponents: target sample loss ensures watermark effectiveness, non-target\nsample loss guarantees trigger reliability, and perceptual similarity loss\nmaintains visual imperceptibility. During ownership verification, black-box\ntesting is employed to check whether suspicious models exhibit predefined\nbackdoor behaviors. Extensive experiments on benchmark datasets demonstrate the\neffectiveness of the proposed method and its robustness against potential\nwatermark removal attacks."}
{"id": "2510.26499", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.26499", "abs": "https://arxiv.org/abs/2510.26499", "authors": ["Yasir Ech-Chammakhy", "Anas Motii", "Anass Rabii", "Oussama Azrara", "Jaafar Chbili"], "title": "CyberNER: A Harmonized STIX Corpus for Cybersecurity Named Entity Recognition", "comment": "Accepted for publication at the 24th IEEE International Conference on\n  Trust, Security and Privacy in Computing and Communications (IEEE TrustCom\n  2025)", "summary": "Extracting structured intelligence via Named Entity Recognition (NER) is\ncritical for cybersecurity, but the proliferation of datasets with incompatible\nannotation schemas hinders the development of comprehensive models. While\ncombining these resources is desirable, we empirically demonstrate that naively\nconcatenating them results in a noisy label space that severely degrades model\nperformance. To overcome this critical limitation, we introduce CyberNER, a\nlarge-scale, unified corpus created by systematically harmonizing four\nprominent datasets (CyNER, DNRTI, APTNER, and Attacker) onto the STIX 2.1\nstandard. Our principled methodology resolves semantic ambiguities and\nconsolidates over 50 disparate source tags into 21 coherent entity types. Our\nexperiments show that models trained on CyberNER achieve a substantial\nperformance gain, with a relative F1-score improvement of approximately 30%\nover the naive concatenation baseline. By publicly releasing the CyberNER\ncorpus, we provide a crucial, standardized benchmark that enables the creation\nand rigorous comparison of more robust and generalizable entity extraction\nmodels for the cybersecurity domain."}
{"id": "2510.26523", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.26523", "abs": "https://arxiv.org/abs/2510.26523", "authors": ["Shuaishuai Liu", "Gergely Acs", "Gergely Biczók"], "title": "Interdependent Privacy in Smart Homes: Hunting for Bystanders in Privacy Policies", "comment": "18 pages, 2 figures", "summary": "Smart home devices such as video doorbells and security cameras are becoming\nincreasingly common in everyday life. While these devices offer convenience and\nsafety, they also raise new privacy concerns: how these devices affect others,\nlike neighbors, visitors, or people passing by. This issue is generally known\nas interdependent privacy, where one person's actions (or inaction) may impact\nthe privacy of others, and, specifically, bystander privacy in the context of\nsmart homes. Given lax data protection regulations in terms of shared physical\nspaces and amateur joint data controllers, we expect that the privacy policies\nof smart home products reflect the missing regulatory incentives. This paper\npresents a focused privacy policy analysis of 20 video doorbell and smart\ncamera products, concentrating explicitly on the bystander aspect. We show that\nalthough some of the vendors acknowledge bystanders, they address it only to\nthe extent of including disclaimers, shifting the ethical responsibility for\ncollecting the data of non-users to the device owner. In addition, we identify\nand examine real-world cases related to bystander privacy, demonstrating how\ncurrent deployments can impact non-users. Based on our findings, we analyze\nvendor privacy policies in light of existing legal frameworks and technical\ncapabilities, and we provide practical recommendations for both policy language\nand system design to enhance transparency and empower both bystanders and\ndevice owners."}
{"id": "2510.26555", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.26555", "abs": "https://arxiv.org/abs/2510.26555", "authors": ["Chunyi Zhang", "Jin Zeng", "Xiaoqi Li"], "title": "A Comprehensive Evaluation and Practice of System Penetration Testing", "comment": null, "summary": "With the rapid advancement of information technology, the complexity of\napplications continues to increase, and the cybersecurity challenges we face\nare also escalating. This paper aims to investigate the methods and practices\nof system security penetration testing, exploring how to enhance system\nsecurity through systematic penetration testing processes and technical\napproaches. It also examines existing penetration tools, analyzing their\nstrengths, weaknesses, and applicable domains to guide penetration testers in\ntool selection. Furthermore, based on the penetration testing process outlined\nin this paper, appropriate tools are selected to replicate attack processes\nusing target ranges and target machines. Finally, through practical case\nanalysis, lessons learned from successful attacks are summarized to inform\nfuture research."}
{"id": "2510.26610", "categories": ["cs.CR"], "pdf": "https://arxiv.org/pdf/2510.26610", "abs": "https://arxiv.org/abs/2510.26610", "authors": ["Weixuan Chen", "Qianqian Yang"], "title": "A DRL-Empowered Multi-Level Jamming Approach for Secure Semantic Communication", "comment": null, "summary": "Semantic communication (SemCom) aims to transmit only task-relevant\ninformation, thereby improving communication efficiency but also exposing\nsemantic information to potential eavesdropping. In this paper, we propose a\ndeep reinforcement learning (DRL)-empowered multi-level jamming approach to\nenhance the security of SemCom systems over MIMO fading wiretap channels. This\napproach combines semantic layer jamming, achieved by encoding task-irrelevant\ntext, and physical layer jamming, achieved by encoding random Gaussian noise.\nThese two-level jamming signals are superposed with task-relevant semantic\ninformation to protect the transmitted semantics from eavesdropping. A deep\ndeterministic policy gradient (DDPG) algorithm is further introduced to\ndynamically design and optimize the precoding matrices for both taskrelevant\nsemantic information and multi-level jamming signals, aiming to enhance the\nlegitimate user's image reconstruction while degrading the eavesdropper's\nperformance. To jointly train the SemCom model and the DDPG agent, we propose\nan alternating optimization strategy where the two modules are updated\niteratively. Experimental results demonstrate that, compared with both the\nencryption-based (ESCS) and encoded jammer-based (EJ) benchmarks, our method\nachieves comparable security while improving the legitimate user's peak\nsignalto-noise ratio (PSNR) by up to approximately 0.6 dB."}
{"id": "2510.26620", "categories": ["cs.CR", "cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26620", "abs": "https://arxiv.org/abs/2510.26620", "authors": ["Nicholas Pecka", "Lotfi Ben Othmane", "Renee Bryce"], "title": "Toward Automated Security Risk Detection in Large Software Using Call Graph Analysis", "comment": null, "summary": "Threat modeling plays a critical role in the identification and mitigation of\nsecurity risks; however, manual approaches are often labor intensive and prone\nto error. This paper investigates the automation of software threat modeling\nthrough the clustering of call graphs using density-based and community\ndetection algorithms, followed by an analysis of the threats associated with\nthe identified clusters. The proposed method was evaluated through a case study\nof the Splunk Forwarder Operator (SFO), wherein selected clustering metrics\nwere applied to the software's call graph to assess pertinent code-density\nsecurity weaknesses. The results demonstrate the viability of the approach and\nunderscore its potential to facilitate systematic threat assessment. This work\ncontributes to the advancement of scalable, semi-automated threat modeling\nframeworks tailored for modern cloud-native environments."}
